import React from 'react';
import styles from './Tiles.scss.js';

const Tiles = ({
  children,
  gap,
  columns
}) => {
  const style = {
    '--pc-tile-gap-xs': gap !== null && gap !== void 0 && gap.xs ? `var(--p-space-${gap === null || gap === void 0 ? void 0 : gap.xs})` : undefined,
    '--pc-tile-gap-sm': gap !== null && gap !== void 0 && gap.sm ? `var(--p-space-${gap === null || gap === void 0 ? void 0 : gap.sm})` : undefined,
    '--pc-tile-gap-md': gap !== null && gap !== void 0 && gap.md ? `var(--p-space-${gap === null || gap === void 0 ? void 0 : gap.md})` : undefined,
    '--pc-tile-gap-lg': gap !== null && gap !== void 0 && gap.lg ? `var(--p-space-${gap === null || gap === void 0 ? void 0 : gap.lg})` : undefined,
    '--pc-tile-gap-xl': gap !== null && gap !== void 0 && gap.xl ? `var(--p-space-${gap === null || gap === void 0 ? void 0 : gap.xl})` : undefined,
    '--pc-tile-xs': formatColumns(columns === null || columns === void 0 ? void 0 : columns.xs),
    '--pc-tile-sm': formatColumns(columns === null || columns === void 0 ? void 0 : columns.sm),
    '--pc-tile-md': formatColumns(columns === null || columns === void 0 ? void 0 : columns.md),
    '--pc-tile-lg': formatColumns(columns === null || columns === void 0 ? void 0 : columns.lg),
    '--pc-tile-xl': formatColumns(columns === null || columns === void 0 ? void 0 : columns.xl)
  };
  return /*#__PURE__*/React.createElement("div", {
    className: styles.Tiles,
    style: style
  }, children);
};

function formatColumns(columns) {
  if (!columns) return undefined;
  return typeof columns === 'number' ? `repeat(${columns}, 1fr)` : columns;
}

export { Tiles };
