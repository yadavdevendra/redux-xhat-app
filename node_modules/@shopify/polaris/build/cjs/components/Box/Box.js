'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var css = require('../../utilities/css.js');
var Box$1 = require('./Box.scss.js');

const Box = /*#__PURE__*/React.forwardRef(({
  as = 'div',
  background,
  border,
  borderBlockEnd,
  borderInlineStart,
  borderInlineEnd,
  borderBlockStart,
  borderRadius,
  borderRadiusEndStart,
  borderRadiusEndEnd,
  borderRadiusStartStart,
  borderRadiusStartEnd,
  children,
  color,
  id,
  minHeight,
  minWidth,
  maxWidth,
  overflowX,
  overflowY,
  padding,
  paddingBlockStart,
  paddingBlockEnd,
  paddingInlineStart,
  paddingInlineEnd,
  shadow,
  width
}, ref) => {
  const borders = {
    blockEnd: borderBlockEnd,
    inlineStart: borderInlineStart,
    inlineEnd: borderInlineEnd,
    blockStart: borderBlockStart
  };
  const borderRadiuses = {
    endStart: borderRadiusEndStart,
    endEnd: borderRadiusEndEnd,
    startStart: borderRadiusStartStart,
    startEnd: borderRadiusStartEnd
  };
  const paddings = {
    blockEnd: paddingBlockEnd,
    inlineStart: paddingInlineStart,
    inlineEnd: paddingInlineEnd,
    blockStart: paddingBlockStart
  };
  const style = {
    '--pc-box-color': color ? `var(--p-${color})` : undefined,
    '--pc-box-background': background ? `var(--p-${background})` : undefined,
    '--pc-box-border': border ? `var(--p-border-${border})` : undefined,
    '--pc-box-border-block-end': borders.blockEnd ? `var(--p-border-${borders.blockEnd})` : undefined,
    '--pc-box-border-inline-start': borders.inlineStart ? `var(--p-border-${borders.inlineStart})` : undefined,
    '--pc-box-border-inline-end': borders.inlineEnd ? `var(--p-border-${borders.inlineEnd})` : undefined,
    '--pc-box-border-block-start': borders.blockStart ? `var(--p-border-${borders.blockStart})` : undefined,
    '--pc-box-border-radius': borderRadius ? `var(--p-border-radius-${borderRadius})` : undefined,
    '--pc-box-border-radius-end-start': borderRadiuses.endStart ? `var(--p-border-radius-${borderRadiuses.endStart})` : undefined,
    '--pc-box-border-radius-end-end': borderRadiuses.endEnd ? `var(--p-border-radius-${borderRadiuses.endEnd})` : undefined,
    '--pc-box-border-radius-start-start': borderRadiuses.startStart ? `var(--p-border-radius-${borderRadiuses.startStart})` : undefined,
    '--pc-box-border-radius-start-end': borderRadiuses.startEnd ? `var(--p-border-radius-${borderRadiuses.startEnd})` : undefined,
    '--pc-box-min-height': minHeight,
    '--pc-box-min-width': minWidth,
    '--pc-box-max-width': maxWidth,
    '--pc-box-overflow-x': overflowX,
    '--pc-box-overflow-y': overflowY,
    '--pc-box-padding': padding ? `var(--p-space-${padding})` : undefined,
    '--pc-box-padding-block-end': paddings.blockEnd ? `var(--p-space-${paddings.blockEnd})` : undefined,
    '--pc-box-padding-inline-start': paddings.inlineStart ? `var(--p-space-${paddings.inlineStart})` : undefined,
    '--pc-box-padding-inline-end': paddings.inlineEnd ? `var(--p-space-${paddings.inlineEnd})` : undefined,
    '--pc-box-padding-block-start': paddings.blockStart ? `var(--p-space-${paddings.blockStart})` : undefined,
    '--pc-box-shadow': shadow ? `var(--p-shadow-${shadow})` : undefined,
    '--pc-box-width': width
  };
  const className = css.classNames(Box$1["default"].Box);
  return /*#__PURE__*/React.createElement(as, {
    className,
    id,
    ref,
    style: css.sanitizeCustomProperties(style)
  }, children);
});
Box.displayName = 'Box';

exports.Box = Box;
