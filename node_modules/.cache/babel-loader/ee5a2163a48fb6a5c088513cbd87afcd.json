{"ast":null,"code":"import { sleep, randomToken } from './util.js';\nimport unload from 'unload';\nvar LeaderElection = function LeaderElection(channel, options) {\n  this._channel = channel;\n  this._options = options;\n  this.isLeader = false;\n  this.isDead = false;\n  this.token = randomToken();\n  this._isApl = false; // _isApplying\n\n  this._reApply = false; // things to clean up\n\n  this._unl = []; // _unloads\n\n  this._lstns = []; // _listeners\n\n  this._invs = []; // _intervals\n\n  this._dpL = function () {}; // onduplicate listener\n\n  this._dpLC = false; // true when onduplicate called\n};\n\nLeaderElection.prototype = {\n  applyOnce: function applyOnce() {\n    var _this = this;\n    if (this.isLeader) return Promise.resolve(false);\n    if (this.isDead) return Promise.resolve(false); // do nothing if already running\n\n    if (this._isApl) {\n      this._reApply = true;\n      return Promise.resolve(false);\n    }\n    this._isApl = true;\n    var stopCriteria = false;\n    var recieved = [];\n    var handleMessage = function handleMessage(msg) {\n      if (msg.context === 'leader' && msg.token != _this.token) {\n        recieved.push(msg);\n        if (msg.action === 'apply') {\n          // other is applying\n          if (msg.token > _this.token) {\n            // other has higher token, stop applying\n            stopCriteria = true;\n          }\n        }\n        if (msg.action === 'tell') {\n          // other is already leader\n          stopCriteria = true;\n        }\n      }\n    };\n    this._channel.addEventListener('internal', handleMessage);\n    var ret = _sendMessage(this, 'apply') // send out that this one is applying\n    .then(function () {\n      return sleep(_this._options.responseTime);\n    }) // let others time to respond\n    .then(function () {\n      if (stopCriteria) return Promise.reject(new Error());else return _sendMessage(_this, 'apply');\n    }).then(function () {\n      return sleep(_this._options.responseTime);\n    }) // let others time to respond\n    .then(function () {\n      if (stopCriteria) return Promise.reject(new Error());else return _sendMessage(_this);\n    }).then(function () {\n      return beLeader(_this);\n    }) // no one disagreed -> this one is now leader\n    .then(function () {\n      return true;\n    })[\"catch\"](function () {\n      return false;\n    }) // apply not successfull\n    .then(function (success) {\n      _this._channel.removeEventListener('internal', handleMessage);\n      _this._isApl = false;\n      if (!success && _this._reApply) {\n        _this._reApply = false;\n        return _this.applyOnce();\n      } else return success;\n    });\n    return ret;\n  },\n  awaitLeadership: function awaitLeadership() {\n    if ( /* _awaitLeadershipPromise */\n    !this._aLP) {\n      this._aLP = _awaitLeadershipOnce(this);\n    }\n    return this._aLP;\n  },\n  set onduplicate(fn) {\n    this._dpL = fn;\n  },\n  die: function die() {\n    var _this2 = this;\n    if (this.isDead) return;\n    this.isDead = true;\n    this._lstns.forEach(function (listener) {\n      return _this2._channel.removeEventListener('internal', listener);\n    });\n    this._invs.forEach(function (interval) {\n      return clearInterval(interval);\n    });\n    this._unl.forEach(function (uFn) {\n      uFn.remove();\n    });\n    return _sendMessage(this, 'death');\n  }\n};\nfunction _awaitLeadershipOnce(leaderElector) {\n  if (leaderElector.isLeader) return Promise.resolve();\n  return new Promise(function (res) {\n    var resolved = false;\n    function finish() {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      clearInterval(interval);\n      leaderElector._channel.removeEventListener('internal', whenDeathListener);\n      res(true);\n    } // try once now\n\n    leaderElector.applyOnce().then(function () {\n      if (leaderElector.isLeader) {\n        finish();\n      }\n    }); // try on fallbackInterval\n\n    var interval = setInterval(function () {\n      leaderElector.applyOnce().then(function () {\n        if (leaderElector.isLeader) {\n          finish();\n        }\n      });\n    }, leaderElector._options.fallbackInterval);\n    leaderElector._invs.push(interval); // try when other leader dies\n\n    var whenDeathListener = function whenDeathListener(msg) {\n      if (msg.context === 'leader' && msg.action === 'death') {\n        leaderElector.applyOnce().then(function () {\n          if (leaderElector.isLeader) finish();\n        });\n      }\n    };\n    leaderElector._channel.addEventListener('internal', whenDeathListener);\n    leaderElector._lstns.push(whenDeathListener);\n  });\n}\n/**\n * sends and internal message over the broadcast-channel\n */\n\nfunction _sendMessage(leaderElector, action) {\n  var msgJson = {\n    context: 'leader',\n    action: action,\n    token: leaderElector.token\n  };\n  return leaderElector._channel.postInternal(msgJson);\n}\nexport function beLeader(leaderElector) {\n  leaderElector.isLeader = true;\n  var unloadFn = unload.add(function () {\n    return leaderElector.die();\n  });\n  leaderElector._unl.push(unloadFn);\n  var isLeaderListener = function isLeaderListener(msg) {\n    if (msg.context === 'leader' && msg.action === 'apply') {\n      _sendMessage(leaderElector, 'tell');\n    }\n    if (msg.context === 'leader' && msg.action === 'tell' && !leaderElector._dpLC) {\n      /**\n       * another instance is also leader!\n       * This can happen on rare events\n       * like when the CPU is at 100% for long time\n       * or the tabs are open very long and the browser throttles them.\n       * @link https://github.com/pubkey/broadcast-channel/issues/414\n       * @link https://github.com/pubkey/broadcast-channel/issues/385\n       */\n      leaderElector._dpLC = true;\n      leaderElector._dpL(); // message the lib user so the app can handle the problem\n\n      _sendMessage(leaderElector, 'tell'); // ensure other leader also knows the problem\n    }\n  };\n\n  leaderElector._channel.addEventListener('internal', isLeaderListener);\n  leaderElector._lstns.push(isLeaderListener);\n  return _sendMessage(leaderElector, 'tell');\n}\nfunction fillOptionsWithDefaults(options, channel) {\n  if (!options) options = {};\n  options = JSON.parse(JSON.stringify(options));\n  if (!options.fallbackInterval) {\n    options.fallbackInterval = 3000;\n  }\n  if (!options.responseTime) {\n    options.responseTime = channel.method.averageResponseTime(channel.options);\n  }\n  return options;\n}\nexport function createLeaderElection(channel, options) {\n  if (channel._leaderElector) {\n    throw new Error('BroadcastChannel already has a leader-elector');\n  }\n  options = fillOptionsWithDefaults(options, channel);\n  var elector = new LeaderElection(channel, options);\n  channel._befC.push(function () {\n    return elector.die();\n  });\n  channel._leaderElector = elector;\n  return elector;\n}","map":{"version":3,"names":["sleep","randomToken","unload","LeaderElection","channel","options","_channel","_options","isLeader","isDead","token","_isApl","_reApply","_unl","_lstns","_invs","_dpL","_dpLC","prototype","applyOnce","_this","Promise","resolve","stopCriteria","recieved","handleMessage","msg","context","push","action","addEventListener","ret","_sendMessage","then","responseTime","reject","Error","beLeader","success","removeEventListener","awaitLeadership","_aLP","_awaitLeadershipOnce","onduplicate","fn","die","_this2","forEach","listener","interval","clearInterval","uFn","remove","leaderElector","res","resolved","finish","whenDeathListener","setInterval","fallbackInterval","msgJson","postInternal","unloadFn","add","isLeaderListener","fillOptionsWithDefaults","JSON","parse","stringify","method","averageResponseTime","createLeaderElection","_leaderElector","elector","_befC"],"sources":["/home/cedcoss/Desktop/redux-xhat-app/node_modules/broadcast-channel/dist/es/leader-election.js"],"sourcesContent":["import { sleep, randomToken } from './util.js';\nimport unload from 'unload';\n\nvar LeaderElection = function LeaderElection(channel, options) {\n  this._channel = channel;\n  this._options = options;\n  this.isLeader = false;\n  this.isDead = false;\n  this.token = randomToken();\n  this._isApl = false; // _isApplying\n\n  this._reApply = false; // things to clean up\n\n  this._unl = []; // _unloads\n\n  this._lstns = []; // _listeners\n\n  this._invs = []; // _intervals\n\n  this._dpL = function () {}; // onduplicate listener\n\n\n  this._dpLC = false; // true when onduplicate called\n};\n\nLeaderElection.prototype = {\n  applyOnce: function applyOnce() {\n    var _this = this;\n\n    if (this.isLeader) return Promise.resolve(false);\n    if (this.isDead) return Promise.resolve(false); // do nothing if already running\n\n    if (this._isApl) {\n      this._reApply = true;\n      return Promise.resolve(false);\n    }\n\n    this._isApl = true;\n    var stopCriteria = false;\n    var recieved = [];\n\n    var handleMessage = function handleMessage(msg) {\n      if (msg.context === 'leader' && msg.token != _this.token) {\n        recieved.push(msg);\n\n        if (msg.action === 'apply') {\n          // other is applying\n          if (msg.token > _this.token) {\n            // other has higher token, stop applying\n            stopCriteria = true;\n          }\n        }\n\n        if (msg.action === 'tell') {\n          // other is already leader\n          stopCriteria = true;\n        }\n      }\n    };\n\n    this._channel.addEventListener('internal', handleMessage);\n\n    var ret = _sendMessage(this, 'apply') // send out that this one is applying\n    .then(function () {\n      return sleep(_this._options.responseTime);\n    }) // let others time to respond\n    .then(function () {\n      if (stopCriteria) return Promise.reject(new Error());else return _sendMessage(_this, 'apply');\n    }).then(function () {\n      return sleep(_this._options.responseTime);\n    }) // let others time to respond\n    .then(function () {\n      if (stopCriteria) return Promise.reject(new Error());else return _sendMessage(_this);\n    }).then(function () {\n      return beLeader(_this);\n    }) // no one disagreed -> this one is now leader\n    .then(function () {\n      return true;\n    })[\"catch\"](function () {\n      return false;\n    }) // apply not successfull\n    .then(function (success) {\n      _this._channel.removeEventListener('internal', handleMessage);\n\n      _this._isApl = false;\n\n      if (!success && _this._reApply) {\n        _this._reApply = false;\n        return _this.applyOnce();\n      } else return success;\n    });\n\n    return ret;\n  },\n  awaitLeadership: function awaitLeadership() {\n    if (\n    /* _awaitLeadershipPromise */\n    !this._aLP) {\n      this._aLP = _awaitLeadershipOnce(this);\n    }\n\n    return this._aLP;\n  },\n\n  set onduplicate(fn) {\n    this._dpL = fn;\n  },\n\n  die: function die() {\n    var _this2 = this;\n\n    if (this.isDead) return;\n    this.isDead = true;\n\n    this._lstns.forEach(function (listener) {\n      return _this2._channel.removeEventListener('internal', listener);\n    });\n\n    this._invs.forEach(function (interval) {\n      return clearInterval(interval);\n    });\n\n    this._unl.forEach(function (uFn) {\n      uFn.remove();\n    });\n\n    return _sendMessage(this, 'death');\n  }\n};\n\nfunction _awaitLeadershipOnce(leaderElector) {\n  if (leaderElector.isLeader) return Promise.resolve();\n  return new Promise(function (res) {\n    var resolved = false;\n\n    function finish() {\n      if (resolved) {\n        return;\n      }\n\n      resolved = true;\n      clearInterval(interval);\n\n      leaderElector._channel.removeEventListener('internal', whenDeathListener);\n\n      res(true);\n    } // try once now\n\n\n    leaderElector.applyOnce().then(function () {\n      if (leaderElector.isLeader) {\n        finish();\n      }\n    }); // try on fallbackInterval\n\n    var interval = setInterval(function () {\n      leaderElector.applyOnce().then(function () {\n        if (leaderElector.isLeader) {\n          finish();\n        }\n      });\n    }, leaderElector._options.fallbackInterval);\n\n    leaderElector._invs.push(interval); // try when other leader dies\n\n\n    var whenDeathListener = function whenDeathListener(msg) {\n      if (msg.context === 'leader' && msg.action === 'death') {\n        leaderElector.applyOnce().then(function () {\n          if (leaderElector.isLeader) finish();\n        });\n      }\n    };\n\n    leaderElector._channel.addEventListener('internal', whenDeathListener);\n\n    leaderElector._lstns.push(whenDeathListener);\n  });\n}\n/**\n * sends and internal message over the broadcast-channel\n */\n\n\nfunction _sendMessage(leaderElector, action) {\n  var msgJson = {\n    context: 'leader',\n    action: action,\n    token: leaderElector.token\n  };\n  return leaderElector._channel.postInternal(msgJson);\n}\n\nexport function beLeader(leaderElector) {\n  leaderElector.isLeader = true;\n  var unloadFn = unload.add(function () {\n    return leaderElector.die();\n  });\n\n  leaderElector._unl.push(unloadFn);\n\n  var isLeaderListener = function isLeaderListener(msg) {\n    if (msg.context === 'leader' && msg.action === 'apply') {\n      _sendMessage(leaderElector, 'tell');\n    }\n\n    if (msg.context === 'leader' && msg.action === 'tell' && !leaderElector._dpLC) {\n      /**\n       * another instance is also leader!\n       * This can happen on rare events\n       * like when the CPU is at 100% for long time\n       * or the tabs are open very long and the browser throttles them.\n       * @link https://github.com/pubkey/broadcast-channel/issues/414\n       * @link https://github.com/pubkey/broadcast-channel/issues/385\n       */\n      leaderElector._dpLC = true;\n\n      leaderElector._dpL(); // message the lib user so the app can handle the problem\n\n\n      _sendMessage(leaderElector, 'tell'); // ensure other leader also knows the problem\n\n    }\n  };\n\n  leaderElector._channel.addEventListener('internal', isLeaderListener);\n\n  leaderElector._lstns.push(isLeaderListener);\n\n  return _sendMessage(leaderElector, 'tell');\n}\n\nfunction fillOptionsWithDefaults(options, channel) {\n  if (!options) options = {};\n  options = JSON.parse(JSON.stringify(options));\n\n  if (!options.fallbackInterval) {\n    options.fallbackInterval = 3000;\n  }\n\n  if (!options.responseTime) {\n    options.responseTime = channel.method.averageResponseTime(channel.options);\n  }\n\n  return options;\n}\n\nexport function createLeaderElection(channel, options) {\n  if (channel._leaderElector) {\n    throw new Error('BroadcastChannel already has a leader-elector');\n  }\n\n  options = fillOptionsWithDefaults(options, channel);\n  var elector = new LeaderElection(channel, options);\n\n  channel._befC.push(function () {\n    return elector.die();\n  });\n\n  channel._leaderElector = elector;\n  return elector;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}