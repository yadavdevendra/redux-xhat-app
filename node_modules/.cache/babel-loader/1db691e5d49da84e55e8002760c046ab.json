{"ast":null,"code":"const WEEK_LENGTH = 7;\nfunction getWeeksForMonth(month, year) {\n  let weekStartsOn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  const firstOfMonth = new Date(year, month, 1);\n  const firstDayOfWeek = firstOfMonth.getDay();\n  const weeks = [[]];\n  let currentWeek = weeks[0];\n  let currentDate = firstOfMonth;\n  const orderedWeekday = getOrderedWeekdays(weekStartsOn);\n  for (let i = 0; i < orderedWeekday.indexOf(firstDayOfWeek); i++) {\n    currentWeek.push(null);\n  }\n  while (currentDate.getMonth() === month) {\n    if (currentWeek.length === WEEK_LENGTH) {\n      currentWeek = [];\n      weeks.push(currentWeek);\n    }\n    currentWeek.push(currentDate);\n    currentDate = new Date(year, month, currentDate.getDate() + 1);\n  }\n  while (currentWeek.length < 7) {\n    currentWeek.push(null);\n  }\n  return weeks;\n}\nfunction dateIsInRange(day, range) {\n  if (day == null) {\n    return false;\n  }\n  const {\n    start,\n    end\n  } = range;\n  return Boolean(start && day > start && end && day < end);\n}\nfunction dateIsSelected(day, range) {\n  if (day == null) {\n    return false;\n  }\n  const {\n    start,\n    end\n  } = range;\n  return Boolean(start && isSameDay(start, day) || end && isSameDay(end, day));\n}\nfunction isSameDay(day1, day2) {\n  return day1.getDate() === day2.getDate() && day1.getMonth() === day2.getMonth() && day1.getFullYear() === day2.getFullYear();\n}\nfunction getNewRange(range, selected) {\n  if (range == null) {\n    return {\n      start: selected,\n      end: selected\n    };\n  }\n  const {\n    start,\n    end\n  } = range;\n  if (end && (isDateAfter(start, end) || isDateBefore(start, end))) {\n    return {\n      start: selected,\n      end: selected\n    };\n  }\n  if (start) {\n    if (isDateBefore(selected, start)) {\n      return {\n        start: selected,\n        end: selected\n      };\n    }\n    return {\n      start,\n      end: selected\n    };\n  }\n  if (end) {\n    if (isDateBefore(selected, end)) {\n      return {\n        start: selected,\n        end\n      };\n    }\n    return {\n      start: start || end,\n      end: selected\n    };\n  }\n  return {\n    start: selected,\n    end: selected\n  };\n}\nfunction getNextDisplayMonth(month) {\n  if (month === 11) {\n    return 0;\n  }\n  return month + 1;\n}\nfunction getNextDisplayYear(month, year) {\n  if (month === 11) {\n    return year + 1;\n  }\n  return year;\n}\nfunction getPreviousDisplayMonth(month) {\n  if (month === 0) {\n    return 11;\n  }\n  return month - 1;\n}\nfunction getPreviousDisplayYear(month, year) {\n  if (month === 0) {\n    return year - 1;\n  }\n  return year;\n}\nfunction isDateAfter(date, dateToCompare) {\n  return date.getTime() > dateToCompare.getTime();\n}\nfunction isDateBefore(date, dateToCompare) {\n  return date.getTime() < dateToCompare.getTime();\n}\nfunction isDateDisabled(date, datesToCompare) {\n  return datesToCompare.some(dateToCompare => {\n    return date.getTime() === dateToCompare.getTime();\n  });\n}\nconst WEEKDAYS = [0, 1, 2, 3, 4, 5, 6];\nfunction getOrderedWeekdays(weekStartsOn) {\n  const weekDays = [...WEEKDAYS];\n  const restOfDays = weekDays.splice(weekStartsOn);\n  return [...restOfDays, ...weekDays];\n}\nexport { dateIsInRange, dateIsSelected, getNewRange, getNextDisplayMonth, getNextDisplayYear, getOrderedWeekdays, getPreviousDisplayMonth, getPreviousDisplayYear, getWeeksForMonth, isDateAfter, isDateBefore, isDateDisabled, isSameDay };","map":{"version":3,"names":["WEEK_LENGTH","getWeeksForMonth","month","year","weekStartsOn","firstOfMonth","Date","firstDayOfWeek","getDay","weeks","currentWeek","currentDate","orderedWeekday","getOrderedWeekdays","i","indexOf","push","getMonth","length","getDate","dateIsInRange","day","range","start","end","Boolean","dateIsSelected","isSameDay","day1","day2","getFullYear","getNewRange","selected","isDateAfter","isDateBefore","getNextDisplayMonth","getNextDisplayYear","getPreviousDisplayMonth","getPreviousDisplayYear","date","dateToCompare","getTime","isDateDisabled","datesToCompare","some","WEEKDAYS","weekDays","restOfDays","splice"],"sources":["/home/cedcoss/Desktop/redux-xhat-app/node_modules/@shopify/polaris/build/esm/utilities/dates.js"],"sourcesContent":["const WEEK_LENGTH = 7;\nfunction getWeeksForMonth(month, year, weekStartsOn = 0) {\n  const firstOfMonth = new Date(year, month, 1);\n  const firstDayOfWeek = firstOfMonth.getDay();\n  const weeks = [[]];\n  let currentWeek = weeks[0];\n  let currentDate = firstOfMonth;\n  const orderedWeekday = getOrderedWeekdays(weekStartsOn);\n\n  for (let i = 0; i < orderedWeekday.indexOf(firstDayOfWeek); i++) {\n    currentWeek.push(null);\n  }\n\n  while (currentDate.getMonth() === month) {\n    if (currentWeek.length === WEEK_LENGTH) {\n      currentWeek = [];\n      weeks.push(currentWeek);\n    }\n\n    currentWeek.push(currentDate);\n    currentDate = new Date(year, month, currentDate.getDate() + 1);\n  }\n\n  while (currentWeek.length < 7) {\n    currentWeek.push(null);\n  }\n\n  return weeks;\n}\nfunction dateIsInRange(day, range) {\n  if (day == null) {\n    return false;\n  }\n\n  const {\n    start,\n    end\n  } = range;\n  return Boolean(start && day > start && end && day < end);\n}\nfunction dateIsSelected(day, range) {\n  if (day == null) {\n    return false;\n  }\n\n  const {\n    start,\n    end\n  } = range;\n  return Boolean(start && isSameDay(start, day) || end && isSameDay(end, day));\n}\nfunction isSameDay(day1, day2) {\n  return day1.getDate() === day2.getDate() && day1.getMonth() === day2.getMonth() && day1.getFullYear() === day2.getFullYear();\n}\nfunction getNewRange(range, selected) {\n  if (range == null) {\n    return {\n      start: selected,\n      end: selected\n    };\n  }\n\n  const {\n    start,\n    end\n  } = range;\n\n  if (end && (isDateAfter(start, end) || isDateBefore(start, end))) {\n    return {\n      start: selected,\n      end: selected\n    };\n  }\n\n  if (start) {\n    if (isDateBefore(selected, start)) {\n      return {\n        start: selected,\n        end: selected\n      };\n    }\n\n    return {\n      start,\n      end: selected\n    };\n  }\n\n  if (end) {\n    if (isDateBefore(selected, end)) {\n      return {\n        start: selected,\n        end\n      };\n    }\n\n    return {\n      start: start || end,\n      end: selected\n    };\n  }\n\n  return {\n    start: selected,\n    end: selected\n  };\n}\nfunction getNextDisplayMonth(month) {\n  if (month === 11) {\n    return 0;\n  }\n\n  return month + 1;\n}\nfunction getNextDisplayYear(month, year) {\n  if (month === 11) {\n    return year + 1;\n  }\n\n  return year;\n}\nfunction getPreviousDisplayMonth(month) {\n  if (month === 0) {\n    return 11;\n  }\n\n  return month - 1;\n}\nfunction getPreviousDisplayYear(month, year) {\n  if (month === 0) {\n    return year - 1;\n  }\n\n  return year;\n}\nfunction isDateAfter(date, dateToCompare) {\n  return date.getTime() > dateToCompare.getTime();\n}\nfunction isDateBefore(date, dateToCompare) {\n  return date.getTime() < dateToCompare.getTime();\n}\nfunction isDateDisabled(date, datesToCompare) {\n  return datesToCompare.some(dateToCompare => {\n    return date.getTime() === dateToCompare.getTime();\n  });\n}\nconst WEEKDAYS = [0, 1, 2, 3, 4, 5, 6];\nfunction getOrderedWeekdays(weekStartsOn) {\n  const weekDays = [...WEEKDAYS];\n  const restOfDays = weekDays.splice(weekStartsOn);\n  return [...restOfDays, ...weekDays];\n}\n\nexport { dateIsInRange, dateIsSelected, getNewRange, getNextDisplayMonth, getNextDisplayYear, getOrderedWeekdays, getPreviousDisplayMonth, getPreviousDisplayYear, getWeeksForMonth, isDateAfter, isDateBefore, isDateDisabled, isSameDay };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}