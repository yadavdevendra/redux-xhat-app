{"ast":null,"code":"import { useCallback, useState } from 'react';\n\n/**\n * Returns a stateful value, and a set of memoized functions to toggle it,\n * set it to true and set it to false\n */\n\nfunction useToggle(initialState) {\n  const [value, setState] = useState(initialState);\n  return {\n    value,\n    toggle: useCallback(() => setState(state => !state), []),\n    setTrue: useCallback(() => setState(true), []),\n    setFalse: useCallback(() => setState(false), [])\n  };\n}\nexport { useToggle };","map":{"version":3,"names":["useCallback","useState","useToggle","initialState","value","setState","toggle","state","setTrue","setFalse"],"sources":["/home/cedcoss/Desktop/redux-xhat-app/node_modules/@shopify/polaris/build/esm/utilities/use-toggle.js"],"sourcesContent":["import { useCallback, useState } from 'react';\n\n/**\n * Returns a stateful value, and a set of memoized functions to toggle it,\n * set it to true and set it to false\n */\n\nfunction useToggle(initialState) {\n  const [value, setState] = useState(initialState);\n  return {\n    value,\n    toggle: useCallback(() => setState(state => !state), []),\n    setTrue: useCallback(() => setState(true), []),\n    setFalse: useCallback(() => setState(false), [])\n  };\n}\n\nexport { useToggle };\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;;AAE7C;AACA;AACA;AACA;;AAEA,SAASC,SAAS,CAACC,YAAY,EAAE;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAACE,YAAY,CAAC;EAChD,OAAO;IACLC,KAAK;IACLE,MAAM,EAAEN,WAAW,CAAC,MAAMK,QAAQ,CAACE,KAAK,IAAI,CAACA,KAAK,CAAC,EAAE,EAAE,CAAC;IACxDC,OAAO,EAAER,WAAW,CAAC,MAAMK,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;IAC9CI,QAAQ,EAAET,WAAW,CAAC,MAAMK,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE;EACjD,CAAC;AACH;AAEA,SAASH,SAAS"},"metadata":{},"sourceType":"module"}