{"ast":null,"code":"import { useRef } from 'react';\nconst UNIQUE_IDENTIFIER = Symbol('unique_identifier');\n/**\n * useLazyRef provides a lazy initial value, similar to lazy\n * initial state the initialValue is the value used during\n * initialization and disregarded after that. Use this hook\n * for expensive initialization.\n * @param initialValue - A function that will return the initial\n * value and be disregarded after that\n * @returns MutableRefObject<T> - Returns a ref object with the\n * results from invoking initial value\n * @example\n * function ComponentExample() {\n *  const title = useLazyRef(() => someExpensiveComputation());\n *  return <h1>{title.current}</h1>;\n * }\n */\n\nfunction useLazyRef(initialValue) {\n  const lazyRef = useRef(UNIQUE_IDENTIFIER);\n  if (lazyRef.current === UNIQUE_IDENTIFIER) {\n    lazyRef.current = initialValue();\n  }\n  return lazyRef;\n}\nexport { useLazyRef };","map":{"version":3,"names":["useRef","UNIQUE_IDENTIFIER","Symbol","useLazyRef","initialValue","lazyRef","current"],"sources":["/home/cedcoss/Desktop/redux-xhat-app/node_modules/@shopify/polaris/build/esm/utilities/use-lazy-ref.js"],"sourcesContent":["import { useRef } from 'react';\n\nconst UNIQUE_IDENTIFIER = Symbol('unique_identifier');\n/**\n * useLazyRef provides a lazy initial value, similar to lazy\n * initial state the initialValue is the value used during\n * initialization and disregarded after that. Use this hook\n * for expensive initialization.\n * @param initialValue - A function that will return the initial\n * value and be disregarded after that\n * @returns MutableRefObject<T> - Returns a ref object with the\n * results from invoking initial value\n * @example\n * function ComponentExample() {\n *  const title = useLazyRef(() => someExpensiveComputation());\n *  return <h1>{title.current}</h1>;\n * }\n */\n\nfunction useLazyRef(initialValue) {\n  const lazyRef = useRef(UNIQUE_IDENTIFIER);\n\n  if (lazyRef.current === UNIQUE_IDENTIFIER) {\n    lazyRef.current = initialValue();\n  }\n\n  return lazyRef;\n}\n\nexport { useLazyRef };\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAE9B,MAAMC,iBAAiB,GAAGC,MAAM,CAAC,mBAAmB,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,UAAU,CAACC,YAAY,EAAE;EAChC,MAAMC,OAAO,GAAGL,MAAM,CAACC,iBAAiB,CAAC;EAEzC,IAAII,OAAO,CAACC,OAAO,KAAKL,iBAAiB,EAAE;IACzCI,OAAO,CAACC,OAAO,GAAGF,YAAY,EAAE;EAClC;EAEA,OAAOC,OAAO;AAChB;AAEA,SAASF,UAAU"},"metadata":{},"sourceType":"module"}