{"ast":null,"code":"import React, { useRef, useContext, useEffect } from 'react';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './CheckableButton.scss.js';\nimport { ResourceListContext } from '../../utilities/resource-list/context.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\nfunction CheckableButton(_ref) {\n  let {\n    accessibilityLabel,\n    label = '',\n    onToggleAll,\n    selected,\n    selectMode,\n    plain,\n    measuring,\n    disabled,\n    smallScreen\n  } = _ref;\n  const checkBoxRef = useRef(null);\n  const {\n    registerCheckableButtons\n  } = useContext(ResourceListContext);\n  let currentKey = 'bulkLg';\n  if (plain) {\n    currentKey = 'plain';\n  } else if (smallScreen) {\n    currentKey = 'bulkSm';\n  }\n  useEffect(() => {\n    if (checkBoxRef.current && registerCheckableButtons) {\n      registerCheckableButtons(currentKey, checkBoxRef.current);\n    }\n  }, [currentKey, registerCheckableButtons]);\n  const className = plain ? classNames(styles.CheckableButton, styles['CheckableButton-plain']) : classNames(styles.CheckableButton, selectMode && styles['CheckableButton-selectMode'], selected && styles['CheckableButton-selected'], measuring && styles['CheckableButton-measuring']);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    onClick: onToggleAll\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Checkbox\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    label: accessibilityLabel,\n    labelHidden: true,\n    checked: selected,\n    disabled: disabled,\n    onChange: onToggleAll,\n    ref: checkBoxRef\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Label\n  }, label));\n}\nexport { CheckableButton };","map":{"version":3,"names":["React","useRef","useContext","useEffect","classNames","styles","ResourceListContext","Checkbox","CheckableButton","accessibilityLabel","label","onToggleAll","selected","selectMode","plain","measuring","disabled","smallScreen","checkBoxRef","registerCheckableButtons","currentKey","current","className","createElement","onClick","labelHidden","checked","onChange","ref","Label"],"sources":["/home/cedcoss/Desktop/redux-xhat-app/node_modules/@shopify/polaris/build/esm/components/CheckableButton/CheckableButton.js"],"sourcesContent":["import React, { useRef, useContext, useEffect } from 'react';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './CheckableButton.scss.js';\nimport { ResourceListContext } from '../../utilities/resource-list/context.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\n\nfunction CheckableButton({\n  accessibilityLabel,\n  label = '',\n  onToggleAll,\n  selected,\n  selectMode,\n  plain,\n  measuring,\n  disabled,\n  smallScreen\n}) {\n  const checkBoxRef = useRef(null);\n  const {\n    registerCheckableButtons\n  } = useContext(ResourceListContext);\n  let currentKey = 'bulkLg';\n\n  if (plain) {\n    currentKey = 'plain';\n  } else if (smallScreen) {\n    currentKey = 'bulkSm';\n  }\n\n  useEffect(() => {\n    if (checkBoxRef.current && registerCheckableButtons) {\n      registerCheckableButtons(currentKey, checkBoxRef.current);\n    }\n  }, [currentKey, registerCheckableButtons]);\n  const className = plain ? classNames(styles.CheckableButton, styles['CheckableButton-plain']) : classNames(styles.CheckableButton, selectMode && styles['CheckableButton-selectMode'], selected && styles['CheckableButton-selected'], measuring && styles['CheckableButton-measuring']);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    onClick: onToggleAll\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Checkbox\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    label: accessibilityLabel,\n    labelHidden: true,\n    checked: selected,\n    disabled: disabled,\n    onChange: onToggleAll,\n    ref: checkBoxRef\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Label\n  }, label));\n}\n\nexport { CheckableButton };\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC5D,SAASC,UAAU,QAAQ,wBAAwB;AACnD,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,SAASC,mBAAmB,QAAQ,0CAA0C;AAC9E,SAASC,QAAQ,QAAQ,yBAAyB;AAElD,SAASC,eAAe,OAUrB;EAAA,IAVsB;IACvBC,kBAAkB;IAClBC,KAAK,GAAG,EAAE;IACVC,WAAW;IACXC,QAAQ;IACRC,UAAU;IACVC,KAAK;IACLC,SAAS;IACTC,QAAQ;IACRC;EACF,CAAC;EACC,MAAMC,WAAW,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM;IACJkB;EACF,CAAC,GAAGjB,UAAU,CAACI,mBAAmB,CAAC;EACnC,IAAIc,UAAU,GAAG,QAAQ;EAEzB,IAAIN,KAAK,EAAE;IACTM,UAAU,GAAG,OAAO;EACtB,CAAC,MAAM,IAAIH,WAAW,EAAE;IACtBG,UAAU,GAAG,QAAQ;EACvB;EAEAjB,SAAS,CAAC,MAAM;IACd,IAAIe,WAAW,CAACG,OAAO,IAAIF,wBAAwB,EAAE;MACnDA,wBAAwB,CAACC,UAAU,EAAEF,WAAW,CAACG,OAAO,CAAC;IAC3D;EACF,CAAC,EAAE,CAACD,UAAU,EAAED,wBAAwB,CAAC,CAAC;EAC1C,MAAMG,SAAS,GAAGR,KAAK,GAAGV,UAAU,CAACC,MAAM,CAACG,eAAe,EAAEH,MAAM,CAAC,uBAAuB,CAAC,CAAC,GAAGD,UAAU,CAACC,MAAM,CAACG,eAAe,EAAEK,UAAU,IAAIR,MAAM,CAAC,4BAA4B,CAAC,EAAEO,QAAQ,IAAIP,MAAM,CAAC,0BAA0B,CAAC,EAAEU,SAAS,IAAIV,MAAM,CAAC,2BAA2B,CAAC,CAAC;EACxR,OAAO,aAAaL,KAAK,CAACuB,aAAa,CAAC,KAAK,EAAE;IAC7CD,SAAS,EAAEA,SAAS;IACpBE,OAAO,EAAEb;EACX,CAAC,EAAE,aAAaX,KAAK,CAACuB,aAAa,CAAC,KAAK,EAAE;IACzCD,SAAS,EAAEjB,MAAM,CAACE;EACpB,CAAC,EAAE,aAAaP,KAAK,CAACuB,aAAa,CAAChB,QAAQ,EAAE;IAC5CG,KAAK,EAAED,kBAAkB;IACzBgB,WAAW,EAAE,IAAI;IACjBC,OAAO,EAAEd,QAAQ;IACjBI,QAAQ,EAAEA,QAAQ;IAClBW,QAAQ,EAAEhB,WAAW;IACrBiB,GAAG,EAAEV;EACP,CAAC,CAAC,CAAC,EAAE,aAAalB,KAAK,CAACuB,aAAa,CAAC,MAAM,EAAE;IAC5CD,SAAS,EAAEjB,MAAM,CAACwB;EACpB,CAAC,EAAEnB,KAAK,CAAC,CAAC;AACZ;AAEA,SAASF,eAAe"},"metadata":{},"sourceType":"module"}