{"ast":null,"code":"import { clamp } from '../../../../utilities/clamp.js';\nconst VERTICAL_PADDING = 13;\nfunction calculateDraggerY(alpha, sliderHeight, draggerHeight) {\n  const offset = offsetForAlpha(alpha, sliderHeight, draggerHeight);\n  return clamp(offset, 0, sliderHeight);\n}\nfunction alphaForDraggerY(y, sliderHeight) {\n  const offsetY = clamp(y, 0, sliderHeight);\n  return alphaForOffset(offsetY, sliderHeight);\n}\nfunction alphaForOffset(offset, sliderHeight) {\n  const selectionHeight = offset - VERTICAL_PADDING;\n  const slidableArea = sliderHeight - VERTICAL_PADDING * 2;\n  return clamp(1 - selectionHeight / slidableArea, 0, 1);\n}\nfunction offsetForAlpha(alpha, sliderHeight, draggerHeight) {\n  const slidableArea = sliderHeight - (draggerHeight + VERTICAL_PADDING);\n  return clamp((1 - alpha) * slidableArea + VERTICAL_PADDING, 0, sliderHeight - draggerHeight);\n}\nexport { alphaForDraggerY, alphaForOffset, calculateDraggerY };","map":{"version":3,"names":["clamp","VERTICAL_PADDING","calculateDraggerY","alpha","sliderHeight","draggerHeight","offset","offsetForAlpha","alphaForDraggerY","y","offsetY","alphaForOffset","selectionHeight","slidableArea"],"sources":["/home/cedcoss/Desktop/redux-xhat-app/node_modules/@shopify/polaris/build/esm/components/ColorPicker/components/AlphaPicker/utilities.js"],"sourcesContent":["import { clamp } from '../../../../utilities/clamp.js';\n\nconst VERTICAL_PADDING = 13;\nfunction calculateDraggerY(alpha, sliderHeight, draggerHeight) {\n  const offset = offsetForAlpha(alpha, sliderHeight, draggerHeight);\n  return clamp(offset, 0, sliderHeight);\n}\nfunction alphaForDraggerY(y, sliderHeight) {\n  const offsetY = clamp(y, 0, sliderHeight);\n  return alphaForOffset(offsetY, sliderHeight);\n}\nfunction alphaForOffset(offset, sliderHeight) {\n  const selectionHeight = offset - VERTICAL_PADDING;\n  const slidableArea = sliderHeight - VERTICAL_PADDING * 2;\n  return clamp(1 - selectionHeight / slidableArea, 0, 1);\n}\n\nfunction offsetForAlpha(alpha, sliderHeight, draggerHeight) {\n  const slidableArea = sliderHeight - (draggerHeight + VERTICAL_PADDING);\n  return clamp((1 - alpha) * slidableArea + VERTICAL_PADDING, 0, sliderHeight - draggerHeight);\n}\n\nexport { alphaForDraggerY, alphaForOffset, calculateDraggerY };\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,gCAAgC;AAEtD,MAAMC,gBAAgB,GAAG,EAAE;AAC3B,SAASC,iBAAiB,CAACC,KAAK,EAAEC,YAAY,EAAEC,aAAa,EAAE;EAC7D,MAAMC,MAAM,GAAGC,cAAc,CAACJ,KAAK,EAAEC,YAAY,EAAEC,aAAa,CAAC;EACjE,OAAOL,KAAK,CAACM,MAAM,EAAE,CAAC,EAAEF,YAAY,CAAC;AACvC;AACA,SAASI,gBAAgB,CAACC,CAAC,EAAEL,YAAY,EAAE;EACzC,MAAMM,OAAO,GAAGV,KAAK,CAACS,CAAC,EAAE,CAAC,EAAEL,YAAY,CAAC;EACzC,OAAOO,cAAc,CAACD,OAAO,EAAEN,YAAY,CAAC;AAC9C;AACA,SAASO,cAAc,CAACL,MAAM,EAAEF,YAAY,EAAE;EAC5C,MAAMQ,eAAe,GAAGN,MAAM,GAAGL,gBAAgB;EACjD,MAAMY,YAAY,GAAGT,YAAY,GAAGH,gBAAgB,GAAG,CAAC;EACxD,OAAOD,KAAK,CAAC,CAAC,GAAGY,eAAe,GAAGC,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;AACxD;AAEA,SAASN,cAAc,CAACJ,KAAK,EAAEC,YAAY,EAAEC,aAAa,EAAE;EAC1D,MAAMQ,YAAY,GAAGT,YAAY,IAAIC,aAAa,GAAGJ,gBAAgB,CAAC;EACtE,OAAOD,KAAK,CAAC,CAAC,CAAC,GAAGG,KAAK,IAAIU,YAAY,GAAGZ,gBAAgB,EAAE,CAAC,EAAEG,YAAY,GAAGC,aAAa,CAAC;AAC9F;AAEA,SAASG,gBAAgB,EAAEG,cAAc,EAAET,iBAAiB"},"metadata":{},"sourceType":"module"}