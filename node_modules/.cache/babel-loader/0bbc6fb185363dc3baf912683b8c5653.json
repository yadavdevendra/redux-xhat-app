{"ast":null,"code":"import React, { PureComponent } from 'react';\nimport { classNames } from '../../utilities/css.js';\nimport { getRectForNode, Rect } from '../../utilities/geometry.js';\nimport { dataPolarisTopBar, layer } from '../shared.js';\nimport { windowRect, calculateVerticalPosition, calculateHorizontalPosition, rectIsOutsideOfRect, intersectionWithViewport } from './utilities/math.js';\nimport styles from './PositionedOverlay.scss.js';\nimport { Scrollable } from '../Scrollable/Scrollable.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nconst OBSERVER_CONFIG = {\n  childList: true,\n  subtree: true,\n  characterData: true\n};\nclass PositionedOverlay extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      measuring: true,\n      activatorRect: getRectForNode(this.props.activator),\n      right: undefined,\n      left: undefined,\n      top: 0,\n      height: 0,\n      width: null,\n      positioning: 'below',\n      zIndex: null,\n      outsideScrollableContainer: false,\n      lockPosition: false\n    };\n    this.overlay = null;\n    this.scrollableContainer = null;\n    this.observer = void 0;\n    this.overlayDetails = () => {\n      const {\n        measuring,\n        left,\n        right,\n        positioning,\n        height,\n        activatorRect\n      } = this.state;\n      return {\n        measuring,\n        left,\n        right,\n        desiredHeight: height,\n        positioning,\n        activatorRect\n      };\n    };\n    this.setOverlay = node => {\n      this.overlay = node;\n    };\n    this.handleMeasurement = () => {\n      const {\n        lockPosition,\n        top\n      } = this.state;\n      this.observer.disconnect();\n      this.setState(_ref => {\n        let {\n          left,\n          top,\n          right\n        } = _ref;\n        return {\n          left,\n          right,\n          top,\n          height: 0,\n          positioning: 'below',\n          measuring: true\n        };\n      }, () => {\n        if (this.overlay == null || this.scrollableContainer == null) {\n          return;\n        }\n        const {\n          activator,\n          preferredPosition = 'below',\n          preferredAlignment = 'center',\n          onScrollOut,\n          fullWidth,\n          fixed,\n          preferInputActivator = true\n        } = this.props;\n        const preferredActivator = preferInputActivator ? activator.querySelector('input') || activator : activator;\n        const activatorRect = getRectForNode(preferredActivator);\n        const currentOverlayRect = getRectForNode(this.overlay);\n        const scrollableElement = isDocument(this.scrollableContainer) ? document.body : this.scrollableContainer;\n        const scrollableContainerRect = getRectForNode(scrollableElement);\n        const overlayRect = fullWidth ? new Rect({\n          ...currentOverlayRect,\n          width: activatorRect.width\n        }) : currentOverlayRect; // If `body` is 100% height, it still acts as though it were not constrained to that size. This adjusts for that.\n\n        if (scrollableElement === document.body) {\n          scrollableContainerRect.height = document.body.scrollHeight;\n        }\n        let topBarOffset = 0;\n        const topBarElement = scrollableElement.querySelector(`${dataPolarisTopBar.selector}`);\n        if (topBarElement) {\n          topBarOffset = topBarElement.clientHeight;\n        }\n        const overlayMargins = this.overlay.firstElementChild && this.overlay.firstChild instanceof HTMLElement ? getMarginsForNode(this.overlay.firstElementChild) : {\n          activator: 0,\n          container: 0,\n          horizontal: 0\n        };\n        const containerRect = windowRect();\n        const zIndexForLayer = getZIndexForLayerFromNode(activator);\n        const zIndex = zIndexForLayer == null ? zIndexForLayer : zIndexForLayer + 1;\n        const verticalPosition = calculateVerticalPosition(activatorRect, overlayRect, overlayMargins, scrollableContainerRect, containerRect, preferredPosition, fixed, topBarOffset);\n        const horizontalPosition = calculateHorizontalPosition(activatorRect, overlayRect, containerRect, overlayMargins, preferredAlignment);\n        this.setState({\n          measuring: false,\n          activatorRect: getRectForNode(activator),\n          left: preferredAlignment !== 'right' ? horizontalPosition : undefined,\n          right: preferredAlignment === 'right' ? horizontalPosition : undefined,\n          top: lockPosition ? top : verticalPosition.top,\n          lockPosition: Boolean(fixed),\n          height: verticalPosition.height || 0,\n          width: fullWidth ? overlayRect.width : null,\n          positioning: verticalPosition.positioning,\n          outsideScrollableContainer: onScrollOut != null && rectIsOutsideOfRect(activatorRect, intersectionWithViewport(scrollableContainerRect)),\n          zIndex\n        }, () => {\n          if (!this.overlay) return;\n          this.observer.observe(this.overlay, OBSERVER_CONFIG);\n          this.observer.observe(activator, OBSERVER_CONFIG);\n        });\n      });\n    };\n    this.observer = new MutationObserver(this.handleMeasurement);\n  }\n  componentDidMount() {\n    this.scrollableContainer = Scrollable.forNode(this.props.activator);\n    if (this.scrollableContainer && !this.props.fixed) {\n      this.scrollableContainer.addEventListener('scroll', this.handleMeasurement);\n    }\n    this.handleMeasurement();\n  }\n  componentWillUnmount() {\n    this.observer.disconnect();\n    if (this.scrollableContainer && !this.props.fixed) {\n      this.scrollableContainer.removeEventListener('scroll', this.handleMeasurement);\n    }\n  }\n  componentDidUpdate() {\n    const {\n      outsideScrollableContainer,\n      top\n    } = this.state;\n    const {\n      onScrollOut,\n      active\n    } = this.props;\n    if (active && onScrollOut != null && top !== 0 && outsideScrollableContainer) {\n      onScrollOut();\n    }\n  }\n  render() {\n    const {\n      left,\n      right,\n      top,\n      zIndex,\n      width\n    } = this.state;\n    const {\n      render,\n      fixed,\n      preventInteraction,\n      classNames: propClassNames,\n      zIndexOverride\n    } = this.props;\n    const style = {\n      top: top == null || isNaN(top) ? undefined : top,\n      left: left == null || isNaN(left) ? undefined : left,\n      right: right == null || isNaN(right) ? undefined : right,\n      width: width == null || isNaN(width) ? undefined : width,\n      zIndex: zIndexOverride || zIndex || undefined\n    };\n    const className = classNames(styles.PositionedOverlay, fixed && styles.fixed, preventInteraction && styles.preventInteraction, propClassNames);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className,\n      style: style,\n      ref: this.setOverlay\n    }, /*#__PURE__*/React.createElement(EventListener, {\n      event: \"resize\",\n      handler: this.handleMeasurement\n    }), render(this.overlayDetails()));\n  }\n  forceUpdatePosition() {\n    // Wait a single animation frame before re-measuring.\n    // Consumer's may also need to setup their own timers for\n    // triggering forceUpdatePosition() `children` use animation.\n    // Ideally, forceUpdatePosition() is fired at the end of a transition event.\n    requestAnimationFrame(this.handleMeasurement);\n  }\n}\nfunction getMarginsForNode(node) {\n  const nodeStyles = window.getComputedStyle(node);\n  return {\n    activator: parseFloat(nodeStyles.marginTop || '0'),\n    container: parseFloat(nodeStyles.marginBottom || '0'),\n    horizontal: parseFloat(nodeStyles.marginLeft || '0')\n  };\n}\nfunction getZIndexForLayerFromNode(node) {\n  const layerNode = node.closest(layer.selector) || document.body;\n  const zIndex = layerNode === document.body ? 'auto' : parseInt(window.getComputedStyle(layerNode).zIndex || '0', 10);\n  return zIndex === 'auto' || isNaN(zIndex) ? null : zIndex;\n}\nfunction isDocument(node) {\n  return node === document;\n}\nexport { PositionedOverlay };","map":{"version":3,"names":["React","PureComponent","classNames","getRectForNode","Rect","dataPolarisTopBar","layer","windowRect","calculateVerticalPosition","calculateHorizontalPosition","rectIsOutsideOfRect","intersectionWithViewport","styles","Scrollable","EventListener","OBSERVER_CONFIG","childList","subtree","characterData","PositionedOverlay","constructor","props","state","measuring","activatorRect","activator","right","undefined","left","top","height","width","positioning","zIndex","outsideScrollableContainer","lockPosition","overlay","scrollableContainer","observer","overlayDetails","desiredHeight","setOverlay","node","handleMeasurement","disconnect","setState","preferredPosition","preferredAlignment","onScrollOut","fullWidth","fixed","preferInputActivator","preferredActivator","querySelector","currentOverlayRect","scrollableElement","isDocument","document","body","scrollableContainerRect","overlayRect","scrollHeight","topBarOffset","topBarElement","selector","clientHeight","overlayMargins","firstElementChild","firstChild","HTMLElement","getMarginsForNode","container","horizontal","containerRect","zIndexForLayer","getZIndexForLayerFromNode","verticalPosition","horizontalPosition","Boolean","observe","MutationObserver","componentDidMount","forNode","addEventListener","componentWillUnmount","removeEventListener","componentDidUpdate","active","render","preventInteraction","propClassNames","zIndexOverride","style","isNaN","className","createElement","ref","event","handler","forceUpdatePosition","requestAnimationFrame","nodeStyles","window","getComputedStyle","parseFloat","marginTop","marginBottom","marginLeft","layerNode","closest","parseInt"],"sources":["/home/cedcoss/Desktop/redux-xhat-app/node_modules/@shopify/polaris/build/esm/components/PositionedOverlay/PositionedOverlay.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport { classNames } from '../../utilities/css.js';\nimport { getRectForNode, Rect } from '../../utilities/geometry.js';\nimport { dataPolarisTopBar, layer } from '../shared.js';\nimport { windowRect, calculateVerticalPosition, calculateHorizontalPosition, rectIsOutsideOfRect, intersectionWithViewport } from './utilities/math.js';\nimport styles from './PositionedOverlay.scss.js';\nimport { Scrollable } from '../Scrollable/Scrollable.js';\nimport { EventListener } from '../EventListener/EventListener.js';\n\nconst OBSERVER_CONFIG = {\n  childList: true,\n  subtree: true,\n  characterData: true\n};\nclass PositionedOverlay extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      measuring: true,\n      activatorRect: getRectForNode(this.props.activator),\n      right: undefined,\n      left: undefined,\n      top: 0,\n      height: 0,\n      width: null,\n      positioning: 'below',\n      zIndex: null,\n      outsideScrollableContainer: false,\n      lockPosition: false\n    };\n    this.overlay = null;\n    this.scrollableContainer = null;\n    this.observer = void 0;\n\n    this.overlayDetails = () => {\n      const {\n        measuring,\n        left,\n        right,\n        positioning,\n        height,\n        activatorRect\n      } = this.state;\n      return {\n        measuring,\n        left,\n        right,\n        desiredHeight: height,\n        positioning,\n        activatorRect\n      };\n    };\n\n    this.setOverlay = node => {\n      this.overlay = node;\n    };\n\n    this.handleMeasurement = () => {\n      const {\n        lockPosition,\n        top\n      } = this.state;\n      this.observer.disconnect();\n      this.setState(({\n        left,\n        top,\n        right\n      }) => ({\n        left,\n        right,\n        top,\n        height: 0,\n        positioning: 'below',\n        measuring: true\n      }), () => {\n        if (this.overlay == null || this.scrollableContainer == null) {\n          return;\n        }\n\n        const {\n          activator,\n          preferredPosition = 'below',\n          preferredAlignment = 'center',\n          onScrollOut,\n          fullWidth,\n          fixed,\n          preferInputActivator = true\n        } = this.props;\n        const preferredActivator = preferInputActivator ? activator.querySelector('input') || activator : activator;\n        const activatorRect = getRectForNode(preferredActivator);\n        const currentOverlayRect = getRectForNode(this.overlay);\n        const scrollableElement = isDocument(this.scrollableContainer) ? document.body : this.scrollableContainer;\n        const scrollableContainerRect = getRectForNode(scrollableElement);\n        const overlayRect = fullWidth ? new Rect({ ...currentOverlayRect,\n          width: activatorRect.width\n        }) : currentOverlayRect; // If `body` is 100% height, it still acts as though it were not constrained to that size. This adjusts for that.\n\n        if (scrollableElement === document.body) {\n          scrollableContainerRect.height = document.body.scrollHeight;\n        }\n\n        let topBarOffset = 0;\n        const topBarElement = scrollableElement.querySelector(`${dataPolarisTopBar.selector}`);\n\n        if (topBarElement) {\n          topBarOffset = topBarElement.clientHeight;\n        }\n\n        const overlayMargins = this.overlay.firstElementChild && this.overlay.firstChild instanceof HTMLElement ? getMarginsForNode(this.overlay.firstElementChild) : {\n          activator: 0,\n          container: 0,\n          horizontal: 0\n        };\n        const containerRect = windowRect();\n        const zIndexForLayer = getZIndexForLayerFromNode(activator);\n        const zIndex = zIndexForLayer == null ? zIndexForLayer : zIndexForLayer + 1;\n        const verticalPosition = calculateVerticalPosition(activatorRect, overlayRect, overlayMargins, scrollableContainerRect, containerRect, preferredPosition, fixed, topBarOffset);\n        const horizontalPosition = calculateHorizontalPosition(activatorRect, overlayRect, containerRect, overlayMargins, preferredAlignment);\n        this.setState({\n          measuring: false,\n          activatorRect: getRectForNode(activator),\n          left: preferredAlignment !== 'right' ? horizontalPosition : undefined,\n          right: preferredAlignment === 'right' ? horizontalPosition : undefined,\n          top: lockPosition ? top : verticalPosition.top,\n          lockPosition: Boolean(fixed),\n          height: verticalPosition.height || 0,\n          width: fullWidth ? overlayRect.width : null,\n          positioning: verticalPosition.positioning,\n          outsideScrollableContainer: onScrollOut != null && rectIsOutsideOfRect(activatorRect, intersectionWithViewport(scrollableContainerRect)),\n          zIndex\n        }, () => {\n          if (!this.overlay) return;\n          this.observer.observe(this.overlay, OBSERVER_CONFIG);\n          this.observer.observe(activator, OBSERVER_CONFIG);\n        });\n      });\n    };\n\n    this.observer = new MutationObserver(this.handleMeasurement);\n  }\n\n  componentDidMount() {\n    this.scrollableContainer = Scrollable.forNode(this.props.activator);\n\n    if (this.scrollableContainer && !this.props.fixed) {\n      this.scrollableContainer.addEventListener('scroll', this.handleMeasurement);\n    }\n\n    this.handleMeasurement();\n  }\n\n  componentWillUnmount() {\n    this.observer.disconnect();\n\n    if (this.scrollableContainer && !this.props.fixed) {\n      this.scrollableContainer.removeEventListener('scroll', this.handleMeasurement);\n    }\n  }\n\n  componentDidUpdate() {\n    const {\n      outsideScrollableContainer,\n      top\n    } = this.state;\n    const {\n      onScrollOut,\n      active\n    } = this.props;\n\n    if (active && onScrollOut != null && top !== 0 && outsideScrollableContainer) {\n      onScrollOut();\n    }\n  }\n\n  render() {\n    const {\n      left,\n      right,\n      top,\n      zIndex,\n      width\n    } = this.state;\n    const {\n      render,\n      fixed,\n      preventInteraction,\n      classNames: propClassNames,\n      zIndexOverride\n    } = this.props;\n    const style = {\n      top: top == null || isNaN(top) ? undefined : top,\n      left: left == null || isNaN(left) ? undefined : left,\n      right: right == null || isNaN(right) ? undefined : right,\n      width: width == null || isNaN(width) ? undefined : width,\n      zIndex: zIndexOverride || zIndex || undefined\n    };\n    const className = classNames(styles.PositionedOverlay, fixed && styles.fixed, preventInteraction && styles.preventInteraction, propClassNames);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className,\n      style: style,\n      ref: this.setOverlay\n    }, /*#__PURE__*/React.createElement(EventListener, {\n      event: \"resize\",\n      handler: this.handleMeasurement\n    }), render(this.overlayDetails()));\n  }\n\n  forceUpdatePosition() {\n    // Wait a single animation frame before re-measuring.\n    // Consumer's may also need to setup their own timers for\n    // triggering forceUpdatePosition() `children` use animation.\n    // Ideally, forceUpdatePosition() is fired at the end of a transition event.\n    requestAnimationFrame(this.handleMeasurement);\n  }\n\n}\n\nfunction getMarginsForNode(node) {\n  const nodeStyles = window.getComputedStyle(node);\n  return {\n    activator: parseFloat(nodeStyles.marginTop || '0'),\n    container: parseFloat(nodeStyles.marginBottom || '0'),\n    horizontal: parseFloat(nodeStyles.marginLeft || '0')\n  };\n}\n\nfunction getZIndexForLayerFromNode(node) {\n  const layerNode = node.closest(layer.selector) || document.body;\n  const zIndex = layerNode === document.body ? 'auto' : parseInt(window.getComputedStyle(layerNode).zIndex || '0', 10);\n  return zIndex === 'auto' || isNaN(zIndex) ? null : zIndex;\n}\n\nfunction isDocument(node) {\n  return node === document;\n}\n\nexport { PositionedOverlay };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}