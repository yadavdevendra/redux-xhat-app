{"ast":null,"code":"function measureColumn(tableData) {\n  return function (column, index) {\n    const {\n      firstVisibleColumnIndex,\n      tableLeftVisibleEdge: tableStart,\n      tableRightVisibleEdge: tableEnd\n    } = tableData;\n    const leftEdge = column.offsetLeft;\n    const rightEdge = leftEdge + column.offsetWidth;\n    const isVisibleLeft = isEdgeVisible(leftEdge, tableStart, tableEnd, 'left');\n    const isVisibleRight = isEdgeVisible(rightEdge, tableStart, tableEnd, 'right');\n    const isVisible = isVisibleLeft || isVisibleRight;\n    const width = column.offsetWidth;\n    if (isVisible) {\n      tableData.firstVisibleColumnIndex = Math.min(firstVisibleColumnIndex, index);\n    }\n    return {\n      leftEdge,\n      rightEdge,\n      isVisible,\n      width,\n      index\n    };\n  };\n}\nfunction isEdgeVisible(position, start, end, edgeType) {\n  const minVisiblePixels = 30;\n  return position >= start + (edgeType === 'left' ? 0 : minVisiblePixels) && position <= end - minVisiblePixels;\n}\nfunction getPrevAndCurrentColumns(tableData, columnData) {\n  const {\n    firstVisibleColumnIndex\n  } = tableData;\n  const previousColumnIndex = Math.max(firstVisibleColumnIndex - 1, 0);\n  const previousColumn = columnData[previousColumnIndex];\n  const currentColumn = columnData[firstVisibleColumnIndex];\n  return {\n    previousColumn,\n    currentColumn\n  };\n}\nexport { getPrevAndCurrentColumns, isEdgeVisible, measureColumn };","map":{"version":3,"names":["measureColumn","tableData","column","index","firstVisibleColumnIndex","tableLeftVisibleEdge","tableStart","tableRightVisibleEdge","tableEnd","leftEdge","offsetLeft","rightEdge","offsetWidth","isVisibleLeft","isEdgeVisible","isVisibleRight","isVisible","width","Math","min","position","start","end","edgeType","minVisiblePixels","getPrevAndCurrentColumns","columnData","previousColumnIndex","max","previousColumn","currentColumn"],"sources":["/home/cedcoss/Desktop/redux-xhat-app/node_modules/@shopify/polaris/build/esm/components/DataTable/utilities.js"],"sourcesContent":["function measureColumn(tableData) {\n  return function (column, index) {\n    const {\n      firstVisibleColumnIndex,\n      tableLeftVisibleEdge: tableStart,\n      tableRightVisibleEdge: tableEnd\n    } = tableData;\n    const leftEdge = column.offsetLeft;\n    const rightEdge = leftEdge + column.offsetWidth;\n    const isVisibleLeft = isEdgeVisible(leftEdge, tableStart, tableEnd, 'left');\n    const isVisibleRight = isEdgeVisible(rightEdge, tableStart, tableEnd, 'right');\n    const isVisible = isVisibleLeft || isVisibleRight;\n    const width = column.offsetWidth;\n\n    if (isVisible) {\n      tableData.firstVisibleColumnIndex = Math.min(firstVisibleColumnIndex, index);\n    }\n\n    return {\n      leftEdge,\n      rightEdge,\n      isVisible,\n      width,\n      index\n    };\n  };\n}\nfunction isEdgeVisible(position, start, end, edgeType) {\n  const minVisiblePixels = 30;\n  return position >= start + (edgeType === 'left' ? 0 : minVisiblePixels) && position <= end - minVisiblePixels;\n}\nfunction getPrevAndCurrentColumns(tableData, columnData) {\n  const {\n    firstVisibleColumnIndex\n  } = tableData;\n  const previousColumnIndex = Math.max(firstVisibleColumnIndex - 1, 0);\n  const previousColumn = columnData[previousColumnIndex];\n  const currentColumn = columnData[firstVisibleColumnIndex];\n  return {\n    previousColumn,\n    currentColumn\n  };\n}\n\nexport { getPrevAndCurrentColumns, isEdgeVisible, measureColumn };\n"],"mappings":"AAAA,SAASA,aAAa,CAACC,SAAS,EAAE;EAChC,OAAO,UAAUC,MAAM,EAAEC,KAAK,EAAE;IAC9B,MAAM;MACJC,uBAAuB;MACvBC,oBAAoB,EAAEC,UAAU;MAChCC,qBAAqB,EAAEC;IACzB,CAAC,GAAGP,SAAS;IACb,MAAMQ,QAAQ,GAAGP,MAAM,CAACQ,UAAU;IAClC,MAAMC,SAAS,GAAGF,QAAQ,GAAGP,MAAM,CAACU,WAAW;IAC/C,MAAMC,aAAa,GAAGC,aAAa,CAACL,QAAQ,EAAEH,UAAU,EAAEE,QAAQ,EAAE,MAAM,CAAC;IAC3E,MAAMO,cAAc,GAAGD,aAAa,CAACH,SAAS,EAAEL,UAAU,EAAEE,QAAQ,EAAE,OAAO,CAAC;IAC9E,MAAMQ,SAAS,GAAGH,aAAa,IAAIE,cAAc;IACjD,MAAME,KAAK,GAAGf,MAAM,CAACU,WAAW;IAEhC,IAAII,SAAS,EAAE;MACbf,SAAS,CAACG,uBAAuB,GAAGc,IAAI,CAACC,GAAG,CAACf,uBAAuB,EAAED,KAAK,CAAC;IAC9E;IAEA,OAAO;MACLM,QAAQ;MACRE,SAAS;MACTK,SAAS;MACTC,KAAK;MACLd;IACF,CAAC;EACH,CAAC;AACH;AACA,SAASW,aAAa,CAACM,QAAQ,EAAEC,KAAK,EAAEC,GAAG,EAAEC,QAAQ,EAAE;EACrD,MAAMC,gBAAgB,GAAG,EAAE;EAC3B,OAAOJ,QAAQ,IAAIC,KAAK,IAAIE,QAAQ,KAAK,MAAM,GAAG,CAAC,GAAGC,gBAAgB,CAAC,IAAIJ,QAAQ,IAAIE,GAAG,GAAGE,gBAAgB;AAC/G;AACA,SAASC,wBAAwB,CAACxB,SAAS,EAAEyB,UAAU,EAAE;EACvD,MAAM;IACJtB;EACF,CAAC,GAAGH,SAAS;EACb,MAAM0B,mBAAmB,GAAGT,IAAI,CAACU,GAAG,CAACxB,uBAAuB,GAAG,CAAC,EAAE,CAAC,CAAC;EACpE,MAAMyB,cAAc,GAAGH,UAAU,CAACC,mBAAmB,CAAC;EACtD,MAAMG,aAAa,GAAGJ,UAAU,CAACtB,uBAAuB,CAAC;EACzD,OAAO;IACLyB,cAAc;IACdC;EACF,CAAC;AACH;AAEA,SAASL,wBAAwB,EAAEX,aAAa,EAAEd,aAAa"},"metadata":{},"sourceType":"module"}