{"ast":null,"code":"import React, { PureComponent, createRef } from 'react';\nimport isEqual from 'react-fast-compare';\nimport { debounce } from '../../utilities/debounce.js';\nimport { classNames } from '../../utilities/css.js';\nimport { headerCell } from '../shared.js';\nimport { measureColumn, getPrevAndCurrentColumns } from './utilities.js';\nimport styles from './DataTable.scss.js';\nimport { Cell } from './components/Cell/Cell.js';\nimport { AfterInitialMount } from '../AfterInitialMount/AfterInitialMount.js';\nimport { Sticky } from '../Sticky/Sticky.js';\nimport { Navigation } from './components/Navigation/Navigation.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nconst getRowClientHeights = rows => {\n  const heights = [];\n  if (!rows) {\n    return heights;\n  }\n  rows.forEach(row => {\n    heights.push(row.clientHeight);\n  });\n  return heights;\n};\nclass DataTableInner extends PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      condensed: false,\n      columnVisibilityData: [],\n      isScrolledFarthestLeft: true,\n      isScrolledFarthestRight: false,\n      rowHovered: undefined\n    };\n    this.dataTable = /*#__PURE__*/createRef();\n    this.scrollContainer = /*#__PURE__*/createRef();\n    this.table = /*#__PURE__*/createRef();\n    this.stickyTable = /*#__PURE__*/createRef();\n    this.stickyNav = null;\n    this.headerNav = null;\n    this.tableHeadings = [];\n    this.stickyHeadings = [];\n    this.tableHeadingWidths = [];\n    this.stickyHeaderActive = false;\n    this.scrollStopTimer = null;\n    this.handleResize = debounce(() => {\n      const {\n        table: {\n          current: table\n        },\n        scrollContainer: {\n          current: scrollContainer\n        }\n      } = this;\n      let condensed = false;\n      if (table && scrollContainer) {\n        // safari sometimes incorrectly sets the scrollwidth too large by 1px\n        condensed = table.scrollWidth > scrollContainer.clientWidth + 1;\n      }\n      this.setState({\n        condensed,\n        ...this.calculateColumnVisibilityData(condensed)\n      });\n    });\n    this.setCellRef = _ref => {\n      let {\n        ref,\n        index,\n        inStickyHeader\n      } = _ref;\n      if (ref == null) {\n        return;\n      }\n      if (inStickyHeader) {\n        this.stickyHeadings[index] = ref;\n        const button = ref.querySelector('button');\n        if (button == null) {\n          return;\n        }\n        button.addEventListener('focus', this.handleHeaderButtonFocus);\n      } else {\n        this.tableHeadings[index] = ref;\n        this.tableHeadingWidths[index] = ref.clientWidth;\n      }\n    };\n    this.changeHeadingFocus = () => {\n      const {\n        tableHeadings,\n        stickyHeadings,\n        stickyNav,\n        headerNav\n      } = this;\n      const stickyFocusedItemIndex = stickyHeadings.findIndex(item => {\n        var _document$activeEleme;\n        return item === ((_document$activeEleme = document.activeElement) === null || _document$activeEleme === void 0 ? void 0 : _document$activeEleme.parentElement);\n      });\n      const tableFocusedItemIndex = tableHeadings.findIndex(item => {\n        var _document$activeEleme2;\n        return item === ((_document$activeEleme2 = document.activeElement) === null || _document$activeEleme2 === void 0 ? void 0 : _document$activeEleme2.parentElement);\n      });\n      const arrowsInStickyNav = stickyNav === null || stickyNav === void 0 ? void 0 : stickyNav.querySelectorAll('button');\n      const arrowsInHeaderNav = headerNav === null || headerNav === void 0 ? void 0 : headerNav.querySelectorAll('button');\n      let stickyFocusedNavIndex = -1;\n      arrowsInStickyNav === null || arrowsInStickyNav === void 0 ? void 0 : arrowsInStickyNav.forEach((item, index) => {\n        if (item === document.activeElement) {\n          stickyFocusedNavIndex = index;\n        }\n      });\n      let headerFocusedNavIndex = -1;\n      arrowsInHeaderNav === null || arrowsInHeaderNav === void 0 ? void 0 : arrowsInHeaderNav.forEach((item, index) => {\n        if (item === document.activeElement) {\n          headerFocusedNavIndex = index;\n        }\n      });\n      if (stickyFocusedItemIndex < 0 && tableFocusedItemIndex < 0 && stickyFocusedNavIndex < 0 && headerFocusedNavIndex < 0) {\n        return null;\n      }\n      let button;\n      if (stickyFocusedItemIndex >= 0) {\n        button = tableHeadings[stickyFocusedItemIndex].querySelector('button');\n      } else if (tableFocusedItemIndex >= 0) {\n        button = stickyHeadings[tableFocusedItemIndex].querySelector('button');\n      }\n      if (stickyFocusedNavIndex >= 0) {\n        button = arrowsInHeaderNav === null || arrowsInHeaderNav === void 0 ? void 0 : arrowsInHeaderNav[stickyFocusedNavIndex];\n      } else if (headerFocusedNavIndex >= 0) {\n        button = arrowsInStickyNav === null || arrowsInStickyNav === void 0 ? void 0 : arrowsInStickyNav[headerFocusedNavIndex];\n      }\n      if (button == null) {\n        return null;\n      }\n      button.style.visibility = 'visible';\n      button.focus();\n      button.style.removeProperty('visibility');\n    };\n    this.calculateColumnVisibilityData = condensed => {\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const {\n        table: {\n          current: table\n        },\n        scrollContainer: {\n          current: scrollContainer\n        },\n        dataTable: {\n          current: dataTable\n        }\n      } = this;\n      const {\n        stickyHeader\n      } = this.props;\n      if ((stickyHeader || condensed) && table && scrollContainer && dataTable) {\n        const headerCells = table.querySelectorAll(headerCell.selector);\n        const rightMostHeader = headerCells[fixedFirstColumns - 1];\n        const nthColumnWidth = fixedFirstColumns ? rightMostHeader.offsetLeft + rightMostHeader.offsetWidth : 0;\n        if (headerCells.length > 0) {\n          const firstVisibleColumnIndex = headerCells.length - 1;\n          const tableLeftVisibleEdge = scrollContainer.scrollLeft + nthColumnWidth;\n          const tableRightVisibleEdge = scrollContainer.scrollLeft + dataTable.offsetWidth;\n          const tableData = {\n            firstVisibleColumnIndex,\n            tableLeftVisibleEdge,\n            tableRightVisibleEdge\n          };\n          const columnVisibilityData = [...headerCells].map(measureColumn(tableData));\n          const lastColumn = columnVisibilityData[columnVisibilityData.length - 1];\n          const isScrolledFarthestLeft = fixedFirstColumns ? tableLeftVisibleEdge === nthColumnWidth : tableLeftVisibleEdge === 0;\n          return {\n            columnVisibilityData,\n            ...getPrevAndCurrentColumns(tableData, columnVisibilityData),\n            isScrolledFarthestLeft,\n            isScrolledFarthestRight: lastColumn.rightEdge <= tableRightVisibleEdge\n          };\n        }\n      }\n      return {\n        columnVisibilityData: [],\n        previousColumn: undefined,\n        currentColumn: undefined\n      };\n    };\n    this.handleHeaderButtonFocus = event => {\n      var _this$state$columnVis;\n      const fixedFirstColumns = this.fixedFirstColumns();\n      if (this.scrollContainer.current == null || event.target == null || this.state.columnVisibilityData.length === 0) {\n        return;\n      }\n      const target = event.target;\n      const currentCell = target.parentNode;\n      const tableScrollLeft = this.scrollContainer.current.scrollLeft;\n      const tableViewableWidth = this.scrollContainer.current.offsetWidth;\n      const tableRightEdge = tableScrollLeft + tableViewableWidth;\n      const nthColumnWidth = this.state.columnVisibilityData.length > 0 ? (_this$state$columnVis = this.state.columnVisibilityData[fixedFirstColumns]) === null || _this$state$columnVis === void 0 ? void 0 : _this$state$columnVis.rightEdge : 0;\n      const currentColumnLeftEdge = currentCell.offsetLeft;\n      const currentColumnRightEdge = currentCell.offsetLeft + currentCell.offsetWidth;\n      if (tableScrollLeft > currentColumnLeftEdge - nthColumnWidth) {\n        this.scrollContainer.current.scrollLeft = currentColumnLeftEdge - nthColumnWidth;\n      }\n      if (currentColumnRightEdge > tableRightEdge) {\n        this.scrollContainer.current.scrollLeft = currentColumnRightEdge - tableViewableWidth;\n      }\n    };\n    this.stickyHeaderScrolling = () => {\n      const {\n        current: stickyTable\n      } = this.stickyTable;\n      const {\n        current: scrollContainer\n      } = this.scrollContainer;\n      if (stickyTable == null || scrollContainer == null) {\n        return;\n      }\n      stickyTable.scrollLeft = scrollContainer.scrollLeft;\n    };\n    this.scrollListener = () => {\n      var _this$scrollContainer;\n      if (this.scrollStopTimer) {\n        clearTimeout(this.scrollStopTimer);\n      }\n      this.scrollStopTimer = setTimeout(() => {\n        this.setState(prevState => ({\n          ...this.calculateColumnVisibilityData(prevState.condensed)\n        }));\n      }, 100);\n      this.setState({\n        isScrolledFarthestLeft: ((_this$scrollContainer = this.scrollContainer.current) === null || _this$scrollContainer === void 0 ? void 0 : _this$scrollContainer.scrollLeft) === 0\n      });\n      if (this.props.stickyHeader && this.stickyHeaderActive) {\n        this.stickyHeaderScrolling();\n      }\n    };\n    this.handleHover = row => () => {\n      this.setState({\n        rowHovered: row\n      });\n    };\n    this.handleFocus = event => {\n      var _this$state$columnVis2;\n      const fixedFirstColumns = this.fixedFirstColumns();\n      if (this.scrollContainer.current == null || event.target == null) {\n        return;\n      }\n      const currentCell = event.target.parentNode;\n      const fixedNthColumn = this.props;\n      const nthColumnWidth = fixedNthColumn ? (_this$state$columnVis2 = this.state.columnVisibilityData[fixedFirstColumns]) === null || _this$state$columnVis2 === void 0 ? void 0 : _this$state$columnVis2.rightEdge : 0;\n      const currentColumnLeftEdge = currentCell.offsetLeft;\n      const desiredScrollLeft = currentColumnLeftEdge - nthColumnWidth;\n      if (this.scrollContainer.current.scrollLeft > desiredScrollLeft) {\n        this.scrollContainer.current.scrollLeft = desiredScrollLeft;\n      } // focus fixed first column if present\n    };\n\n    this.navigateTable = direction => {\n      var _this$state$columnVis3;\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const {\n        currentColumn,\n        previousColumn\n      } = this.state;\n      const nthColumnWidth = (_this$state$columnVis3 = this.state.columnVisibilityData[fixedFirstColumns - 1]) === null || _this$state$columnVis3 === void 0 ? void 0 : _this$state$columnVis3.rightEdge;\n      if (!currentColumn || !previousColumn) {\n        return;\n      }\n      let prevWidths = 0;\n      for (let index = 0; index < currentColumn.index; index++) {\n        prevWidths += this.state.columnVisibilityData[index].width;\n      }\n      const {\n        current: scrollContainer\n      } = this.scrollContainer;\n      const handleScroll = () => {\n        let newScrollLeft = 0;\n        if (fixedFirstColumns) {\n          newScrollLeft = direction === 'right' ? prevWidths - nthColumnWidth + currentColumn.width : prevWidths - previousColumn.width - nthColumnWidth;\n        } else {\n          newScrollLeft = direction === 'right' ? currentColumn.rightEdge : previousColumn.leftEdge;\n        }\n        if (scrollContainer) {\n          scrollContainer.scrollLeft = newScrollLeft;\n          requestAnimationFrame(() => {\n            this.setState(prevState => ({\n              ...this.calculateColumnVisibilityData(prevState.condensed)\n            }));\n          });\n        }\n      };\n      return handleScroll;\n    };\n    this.renderHeading = _ref2 => {\n      let {\n        heading,\n        headingIndex,\n        inFixedNthColumn,\n        inStickyHeader\n      } = _ref2;\n      const {\n        sortable,\n        truncate = false,\n        columnContentTypes,\n        defaultSortDirection,\n        initialSortColumnIndex = 0,\n        verticalAlign,\n        firstColumnMinWidth\n      } = this.props;\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const {\n        sortDirection = defaultSortDirection,\n        sortedColumnIndex = initialSortColumnIndex,\n        isScrolledFarthestLeft\n      } = this.state;\n      let sortableHeadingProps;\n      const headingCellId = `heading-cell-${headingIndex}`;\n      const stickyHeaderId = `stickyheader-${headingIndex}`;\n      const id = inStickyHeader ? stickyHeaderId : headingCellId;\n      if (sortable) {\n        const isSortable = sortable[headingIndex];\n        const isSorted = isSortable && sortedColumnIndex === headingIndex;\n        const direction = isSorted ? sortDirection : 'none';\n        sortableHeadingProps = {\n          defaultSortDirection,\n          sorted: isSorted,\n          sortable: isSortable,\n          sortDirection: direction,\n          onSort: this.defaultOnSort(headingIndex),\n          fixedNthColumn: fixedFirstColumns,\n          inFixedNthColumn: fixedFirstColumns\n        };\n      }\n      const stickyCellWidth = inStickyHeader ? this.tableHeadingWidths[headingIndex] : undefined;\n      const fixedCellVisible = !isScrolledFarthestLeft;\n      const cellProps = {\n        header: true,\n        stickyHeadingCell: inStickyHeader,\n        content: heading,\n        contentType: columnContentTypes[headingIndex],\n        nthColumn: headingIndex < fixedFirstColumns,\n        fixedFirstColumns,\n        truncate,\n        headingIndex,\n        ...sortableHeadingProps,\n        verticalAlign,\n        handleFocus: this.handleFocus,\n        stickyCellWidth,\n        fixedCellVisible,\n        firstColumnMinWidth\n      };\n      if (inFixedNthColumn && inStickyHeader) {\n        var _this$state$columnVis4;\n\n        // need two cells for fixed first column (actual cell and the overlapping one)\n        // the sticky cell is second so that the index is associated with the sticky\n        // cell and not the underlying one. This helps `changeHeadingFocus` to put\n        // focus on the right cell when switching from sticky to non-sticky headers\n        return [/*#__PURE__*/React.createElement(Cell, Object.assign({\n          key: id\n        }, cellProps, {\n          setRef: ref => {\n            this.setCellRef({\n              ref,\n              index: headingIndex,\n              inStickyHeader\n            });\n          },\n          inFixedNthColumn: false\n        })), /*#__PURE__*/React.createElement(Cell, Object.assign({\n          key: `${id}-sticky`\n        }, cellProps, {\n          setRef: ref => {\n            this.setCellRef({\n              ref,\n              index: headingIndex,\n              inStickyHeader\n            });\n          },\n          inFixedNthColumn: Boolean(fixedFirstColumns),\n          lastFixedFirstColumn: headingIndex === fixedFirstColumns - 1,\n          style: {\n            left: (_this$state$columnVis4 = this.state.columnVisibilityData[headingIndex]) === null || _this$state$columnVis4 === void 0 ? void 0 : _this$state$columnVis4.leftEdge\n          }\n        }))];\n      }\n      return /*#__PURE__*/React.createElement(Cell, Object.assign({\n        key: id\n      }, cellProps, {\n        setRef: ref => {\n          this.setCellRef({\n            ref,\n            index: headingIndex,\n            inStickyHeader\n          });\n        },\n        lastFixedFirstColumn: headingIndex === fixedFirstColumns - 1,\n        inFixedNthColumn: inFixedNthColumn\n      }));\n    };\n    this.totalsRowHeading = () => {\n      const {\n        i18n,\n        totals,\n        totalsName\n      } = this.props;\n      const totalsLabel = totalsName ? totalsName : {\n        singular: i18n.translate('Polaris.DataTable.totalRowHeading'),\n        plural: i18n.translate('Polaris.DataTable.totalsRowHeading')\n      };\n      return totals && totals.filter(total => total !== '').length > 1 ? totalsLabel.plural : totalsLabel.singular;\n    };\n    this.renderTotals = _ref3 => {\n      let {\n        total,\n        index\n      } = _ref3;\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const id = `totals-cell-${index}`;\n      const {\n        truncate = false,\n        verticalAlign\n      } = this.props;\n      let content;\n      let contentType;\n      if (index === 0) {\n        content = this.totalsRowHeading();\n      }\n      if (total !== '' && index > 0) {\n        contentType = 'numeric';\n        content = total;\n      }\n      const totalInFooter = this.props.showTotalsInFooter;\n      return /*#__PURE__*/React.createElement(Cell, {\n        total: true,\n        totalInFooter: totalInFooter,\n        nthColumn: index <= fixedFirstColumns - 1,\n        firstColumn: index === 0,\n        key: id,\n        content: content,\n        contentType: contentType,\n        truncate: truncate,\n        verticalAlign: verticalAlign\n      });\n    };\n    this.getColSpan = (rowLength, headingsLength, contentTypesLength, cellIndex) => {\n      // We decided that it shouldn't be possible to have fixed \"n\" columns and content that spans multiple columns\n      const fixedFirstColumns = this.fixedFirstColumns();\n      if (fixedFirstColumns) {\n        return 1;\n      }\n      const rowLen = rowLength ? rowLength : 1;\n      const colLen = headingsLength ? headingsLength : contentTypesLength;\n      const colSpan = Math.floor(colLen / rowLen);\n      const remainder = colLen % rowLen;\n      return cellIndex === 0 ? colSpan + remainder : colSpan;\n    };\n    this.defaultRenderRow = _ref4 => {\n      let {\n        row,\n        index,\n        inFixedNthColumn,\n        rowHeights\n      } = _ref4;\n      const {\n        columnContentTypes,\n        truncate = false,\n        verticalAlign,\n        hoverable = true,\n        headings\n      } = this.props;\n      const {\n        condensed\n      } = this.state;\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const className = classNames(styles.TableRow, hoverable && styles.hoverable);\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: `row-${index}`,\n        className: className,\n        onMouseEnter: this.handleHover(index),\n        onMouseLeave: this.handleHover()\n      }, row.map((content, cellIndex) => {\n        const hovered = index === this.state.rowHovered;\n        const id = `cell-${cellIndex}-row-${index}`;\n        const colSpan = this.getColSpan(row.length, headings.length, columnContentTypes.length, cellIndex);\n        return /*#__PURE__*/React.createElement(Cell, {\n          key: id,\n          content: content,\n          contentType: columnContentTypes[cellIndex],\n          nthColumn: cellIndex <= fixedFirstColumns - 1,\n          firstColumn: cellIndex === 0,\n          truncate: truncate,\n          verticalAlign: verticalAlign,\n          colSpan: colSpan,\n          hovered: hovered,\n          style: rowHeights ? {\n            height: `${rowHeights[index]}px`\n          } : {},\n          inFixedNthColumn: condensed && inFixedNthColumn\n        });\n      }));\n    };\n    this.defaultOnSort = headingIndex => {\n      const {\n        onSort,\n        defaultSortDirection = 'ascending',\n        initialSortColumnIndex\n      } = this.props;\n      const {\n        sortDirection = defaultSortDirection,\n        sortedColumnIndex = initialSortColumnIndex\n      } = this.state;\n      let newSortDirection = defaultSortDirection;\n      if (sortedColumnIndex === headingIndex) {\n        newSortDirection = sortDirection === 'ascending' ? 'descending' : 'ascending';\n      }\n      const handleSort = () => {\n        this.setState({\n          sortDirection: newSortDirection,\n          sortedColumnIndex: headingIndex\n        }, () => {\n          if (onSort) {\n            onSort(headingIndex, newSortDirection);\n          }\n        });\n      };\n      return handleSort;\n    };\n  }\n  componentDidMount() {\n    // We need to defer the calculation in development so the styles have time to be injected.\n    if (process.env.NODE_ENV === 'development') {\n      setTimeout(() => {\n        this.handleResize();\n      }, 10);\n    } else {\n      this.handleResize();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (isEqual(prevProps, this.props)) {\n      return;\n    }\n    this.handleResize();\n  }\n  componentWillUnmount() {\n    this.handleResize.cancel();\n  }\n  render() {\n    var _this$table$current, _this$table$current2, _columnVisibilityData;\n    const {\n      headings,\n      totals,\n      showTotalsInFooter,\n      rows,\n      footerContent,\n      hideScrollIndicator = false,\n      increasedTableDensity = false,\n      hasZebraStripingOnData = false,\n      stickyHeader = false,\n      hasFixedFirstColumn: fixedFirstColumn = false\n    } = this.props;\n    const {\n      condensed,\n      columnVisibilityData,\n      isScrolledFarthestLeft,\n      isScrolledFarthestRight\n    } = this.state;\n    if (fixedFirstColumn && process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn('Deprecation: The `hasFixedFirstColumn` prop on the `DataTable` has been deprecated. Use fixedFirstColumns={n} instead.');\n    }\n    const fixedFirstColumns = this.fixedFirstColumns();\n    const rowCountIsEven = rows.length % 2 === 0;\n    const className = classNames(styles.DataTable, condensed && styles.condensed, totals && styles.ShowTotals, showTotalsInFooter && styles.ShowTotalsInFooter, hasZebraStripingOnData && styles.ZebraStripingOnData, hasZebraStripingOnData && rowCountIsEven && styles.RowCountIsEven);\n    const wrapperClassName = classNames(styles.TableWrapper, condensed && styles.condensed, increasedTableDensity && styles.IncreasedTableDensity, stickyHeader && styles.StickyHeaderEnabled);\n    const headingMarkup = /*#__PURE__*/React.createElement(\"tr\", null, headings.map((heading, index) => this.renderHeading({\n      heading,\n      headingIndex: index,\n      inFixedNthColumn: false,\n      inStickyHeader: false\n    })));\n    const totalsMarkup = totals ? /*#__PURE__*/React.createElement(\"tr\", null, totals.map((total, index) => this.renderTotals({\n      total,\n      index\n    }))) : null;\n    const nthColumns = rows.map(row => row.slice(0, fixedFirstColumns));\n    const nthHeadings = headings.slice(0, fixedFirstColumns);\n    const nthTotals = totals === null || totals === void 0 ? void 0 : totals.slice(0, fixedFirstColumns);\n    const tableHeaderRows = (_this$table$current = this.table.current) === null || _this$table$current === void 0 ? void 0 : _this$table$current.children[0].childNodes;\n    const tableBodyRows = (_this$table$current2 = this.table.current) === null || _this$table$current2 === void 0 ? void 0 : _this$table$current2.children[1].childNodes;\n    const headerRowHeights = getRowClientHeights(tableHeaderRows);\n    const bodyRowHeights = getRowClientHeights(tableBodyRows);\n    const fixedNthColumnMarkup = condensed && fixedFirstColumns !== 0 && /*#__PURE__*/React.createElement(\"table\", {\n      className: classNames(styles.FixedFirstColumn, !isScrolledFarthestLeft && styles.separate),\n      style: {\n        width: `${(_columnVisibilityData = columnVisibilityData[fixedFirstColumns - 1]) === null || _columnVisibilityData === void 0 ? void 0 : _columnVisibilityData.rightEdge}px`\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        height: `${headerRowHeights[0]}px`\n      }\n    }, nthHeadings.map((heading, index) => this.renderHeading({\n      heading,\n      headingIndex: index,\n      inFixedNthColumn: true,\n      inStickyHeader: false\n    }))), totals && !showTotalsInFooter && /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        height: `${headerRowHeights[1]}px`\n      }\n    }, nthTotals === null || nthTotals === void 0 ? void 0 : nthTotals.map((total, index) => this.renderTotals({\n      total,\n      index\n    })))), /*#__PURE__*/React.createElement(\"tbody\", null, nthColumns.map((row, index) => this.defaultRenderRow({\n      row,\n      index,\n      inFixedNthColumn: true,\n      rowHeights: bodyRowHeights\n    }))), totals && showTotalsInFooter && /*#__PURE__*/React.createElement(\"tfoot\", null, /*#__PURE__*/React.createElement(\"tr\", null, nthTotals === null || nthTotals === void 0 ? void 0 : nthTotals.map((total, index) => this.renderTotals({\n      total,\n      index\n    })))));\n    const bodyMarkup = rows.map((row, index) => this.defaultRenderRow({\n      row,\n      index,\n      inFixedNthColumn: false\n    }));\n    const footerMarkup = footerContent ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Footer\n    }, footerContent) : null;\n    const headerTotalsMarkup = !showTotalsInFooter ? totalsMarkup : null;\n    const footerTotalsMarkup = showTotalsInFooter ? /*#__PURE__*/React.createElement(\"tfoot\", null, totalsMarkup) : null;\n    const navigationMarkup = location => hideScrollIndicator ? null : /*#__PURE__*/React.createElement(Navigation, {\n      columnVisibilityData: columnVisibilityData,\n      isScrolledFarthestLeft: isScrolledFarthestLeft,\n      isScrolledFarthestRight: isScrolledFarthestRight,\n      navigateTableLeft: this.navigateTable('left'),\n      navigateTableRight: this.navigateTable('right'),\n      fixedFirstColumns: fixedFirstColumns,\n      setRef: ref => {\n        if (location === 'header') {\n          this.headerNav = ref;\n        } else if (location === 'sticky') {\n          this.stickyNav = ref;\n        }\n      }\n    });\n    const stickyHeaderMarkup = stickyHeader ? /*#__PURE__*/React.createElement(AfterInitialMount, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyHeaderWrapper,\n      role: \"presentation\"\n    }, /*#__PURE__*/React.createElement(Sticky, {\n      boundingElement: this.dataTable.current,\n      onStickyChange: isSticky => {\n        this.changeHeadingFocus();\n        this.stickyHeaderActive = isSticky;\n      }\n    }, isSticky => {\n      const stickyHeaderInnerClassNames = classNames(styles.StickyHeaderInner, isSticky && styles['StickyHeaderInner-isSticky']);\n      const stickyHeaderTableClassNames = classNames(styles.StickyHeaderTable, !isScrolledFarthestLeft && styles.separate);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: stickyHeaderInnerClassNames\n      }, /*#__PURE__*/React.createElement(\"div\", null, navigationMarkup('sticky')), /*#__PURE__*/React.createElement(\"table\", {\n        className: stickyHeaderTableClassNames,\n        ref: this.stickyTable\n      }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n        className: styles.StickyTableHeadingsRow\n      }, headings.map((heading, index) => {\n        return this.renderHeading({\n          heading,\n          headingIndex: index,\n          inFixedNthColumn: Boolean(index <= fixedFirstColumns - 1 && fixedFirstColumns),\n          inStickyHeader: true\n        });\n      })))));\n    }))) : null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: wrapperClassName,\n      ref: this.dataTable\n    }, stickyHeaderMarkup, navigationMarkup('header'), /*#__PURE__*/React.createElement(\"div\", {\n      className: className\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ScrollContainer,\n      ref: this.scrollContainer\n    }, /*#__PURE__*/React.createElement(EventListener, {\n      event: \"resize\",\n      handler: this.handleResize\n    }), /*#__PURE__*/React.createElement(EventListener, {\n      capture: true,\n      passive: true,\n      event: \"scroll\",\n      handler: this.scrollListener\n    }), fixedNthColumnMarkup, /*#__PURE__*/React.createElement(\"table\", {\n      className: styles.Table,\n      ref: this.table\n    }, /*#__PURE__*/React.createElement(\"thead\", null, headingMarkup, headerTotalsMarkup), /*#__PURE__*/React.createElement(\"tbody\", null, bodyMarkup), footerTotalsMarkup)), footerMarkup));\n  }\n  fixedFirstColumns() {\n    const {\n      hasFixedFirstColumn,\n      fixedFirstColumns = 0,\n      headings\n    } = this.props;\n    const numberOfFixedFirstColumns = hasFixedFirstColumn && !fixedFirstColumns ? 1 : fixedFirstColumns;\n    if (numberOfFixedFirstColumns >= headings.length) {\n      return 0;\n    }\n    return numberOfFixedFirstColumns;\n  }\n}\nfunction DataTable(props) {\n  const i18n = useI18n();\n  return /*#__PURE__*/React.createElement(DataTableInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\nexport { DataTable };","map":{"version":3,"names":["React","PureComponent","createRef","isEqual","debounce","classNames","headerCell","measureColumn","getPrevAndCurrentColumns","styles","Cell","AfterInitialMount","Sticky","Navigation","useI18n","EventListener","getRowClientHeights","rows","heights","forEach","row","push","clientHeight","DataTableInner","constructor","state","condensed","columnVisibilityData","isScrolledFarthestLeft","isScrolledFarthestRight","rowHovered","undefined","dataTable","scrollContainer","table","stickyTable","stickyNav","headerNav","tableHeadings","stickyHeadings","tableHeadingWidths","stickyHeaderActive","scrollStopTimer","handleResize","current","scrollWidth","clientWidth","setState","calculateColumnVisibilityData","setCellRef","ref","index","inStickyHeader","button","querySelector","addEventListener","handleHeaderButtonFocus","changeHeadingFocus","stickyFocusedItemIndex","findIndex","item","_document$activeEleme","document","activeElement","parentElement","tableFocusedItemIndex","_document$activeEleme2","arrowsInStickyNav","querySelectorAll","arrowsInHeaderNav","stickyFocusedNavIndex","headerFocusedNavIndex","style","visibility","focus","removeProperty","fixedFirstColumns","stickyHeader","props","headerCells","selector","rightMostHeader","nthColumnWidth","offsetLeft","offsetWidth","length","firstVisibleColumnIndex","tableLeftVisibleEdge","scrollLeft","tableRightVisibleEdge","tableData","map","lastColumn","rightEdge","previousColumn","currentColumn","event","_this$state$columnVis","target","currentCell","parentNode","tableScrollLeft","tableViewableWidth","tableRightEdge","currentColumnLeftEdge","currentColumnRightEdge","stickyHeaderScrolling","scrollListener","_this$scrollContainer","clearTimeout","setTimeout","prevState","handleHover","handleFocus","_this$state$columnVis2","fixedNthColumn","desiredScrollLeft","navigateTable","direction","_this$state$columnVis3","prevWidths","width","handleScroll","newScrollLeft","leftEdge","requestAnimationFrame","renderHeading","heading","headingIndex","inFixedNthColumn","sortable","truncate","columnContentTypes","defaultSortDirection","initialSortColumnIndex","verticalAlign","firstColumnMinWidth","sortDirection","sortedColumnIndex","sortableHeadingProps","headingCellId","stickyHeaderId","id","isSortable","isSorted","sorted","onSort","defaultOnSort","stickyCellWidth","fixedCellVisible","cellProps","header","stickyHeadingCell","content","contentType","nthColumn","_this$state$columnVis4","createElement","Object","assign","key","setRef","Boolean","lastFixedFirstColumn","left","totalsRowHeading","i18n","totals","totalsName","totalsLabel","singular","translate","plural","filter","total","renderTotals","totalInFooter","showTotalsInFooter","firstColumn","getColSpan","rowLength","headingsLength","contentTypesLength","cellIndex","rowLen","colLen","colSpan","Math","floor","remainder","defaultRenderRow","rowHeights","hoverable","headings","className","TableRow","onMouseEnter","onMouseLeave","hovered","height","newSortDirection","handleSort","componentDidMount","process","env","NODE_ENV","componentDidUpdate","prevProps","componentWillUnmount","cancel","render","_this$table$current","_this$table$current2","_columnVisibilityData","footerContent","hideScrollIndicator","increasedTableDensity","hasZebraStripingOnData","hasFixedFirstColumn","fixedFirstColumn","console","warn","rowCountIsEven","DataTable","ShowTotals","ShowTotalsInFooter","ZebraStripingOnData","RowCountIsEven","wrapperClassName","TableWrapper","IncreasedTableDensity","StickyHeaderEnabled","headingMarkup","totalsMarkup","nthColumns","slice","nthHeadings","nthTotals","tableHeaderRows","children","childNodes","tableBodyRows","headerRowHeights","bodyRowHeights","fixedNthColumnMarkup","FixedFirstColumn","separate","bodyMarkup","footerMarkup","Footer","headerTotalsMarkup","footerTotalsMarkup","navigationMarkup","location","navigateTableLeft","navigateTableRight","stickyHeaderMarkup","StickyHeaderWrapper","role","boundingElement","onStickyChange","isSticky","stickyHeaderInnerClassNames","StickyHeaderInner","stickyHeaderTableClassNames","StickyHeaderTable","StickyTableHeadingsRow","ScrollContainer","handler","capture","passive","Table","numberOfFixedFirstColumns"],"sources":["/home/cedcoss/Desktop/redux-xhat-app/node_modules/@shopify/polaris/build/esm/components/DataTable/DataTable.js"],"sourcesContent":["import React, { PureComponent, createRef } from 'react';\nimport isEqual from 'react-fast-compare';\nimport { debounce } from '../../utilities/debounce.js';\nimport { classNames } from '../../utilities/css.js';\nimport { headerCell } from '../shared.js';\nimport { measureColumn, getPrevAndCurrentColumns } from './utilities.js';\nimport styles from './DataTable.scss.js';\nimport { Cell } from './components/Cell/Cell.js';\nimport { AfterInitialMount } from '../AfterInitialMount/AfterInitialMount.js';\nimport { Sticky } from '../Sticky/Sticky.js';\nimport { Navigation } from './components/Navigation/Navigation.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { EventListener } from '../EventListener/EventListener.js';\n\nconst getRowClientHeights = rows => {\n  const heights = [];\n\n  if (!rows) {\n    return heights;\n  }\n\n  rows.forEach(row => {\n    heights.push(row.clientHeight);\n  });\n  return heights;\n};\n\nclass DataTableInner extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      condensed: false,\n      columnVisibilityData: [],\n      isScrolledFarthestLeft: true,\n      isScrolledFarthestRight: false,\n      rowHovered: undefined\n    };\n    this.dataTable = /*#__PURE__*/createRef();\n    this.scrollContainer = /*#__PURE__*/createRef();\n    this.table = /*#__PURE__*/createRef();\n    this.stickyTable = /*#__PURE__*/createRef();\n    this.stickyNav = null;\n    this.headerNav = null;\n    this.tableHeadings = [];\n    this.stickyHeadings = [];\n    this.tableHeadingWidths = [];\n    this.stickyHeaderActive = false;\n    this.scrollStopTimer = null;\n    this.handleResize = debounce(() => {\n      const {\n        table: {\n          current: table\n        },\n        scrollContainer: {\n          current: scrollContainer\n        }\n      } = this;\n      let condensed = false;\n\n      if (table && scrollContainer) {\n        // safari sometimes incorrectly sets the scrollwidth too large by 1px\n        condensed = table.scrollWidth > scrollContainer.clientWidth + 1;\n      }\n\n      this.setState({\n        condensed,\n        ...this.calculateColumnVisibilityData(condensed)\n      });\n    });\n\n    this.setCellRef = ({\n      ref,\n      index,\n      inStickyHeader\n    }) => {\n      if (ref == null) {\n        return;\n      }\n\n      if (inStickyHeader) {\n        this.stickyHeadings[index] = ref;\n        const button = ref.querySelector('button');\n\n        if (button == null) {\n          return;\n        }\n\n        button.addEventListener('focus', this.handleHeaderButtonFocus);\n      } else {\n        this.tableHeadings[index] = ref;\n        this.tableHeadingWidths[index] = ref.clientWidth;\n      }\n    };\n\n    this.changeHeadingFocus = () => {\n      const {\n        tableHeadings,\n        stickyHeadings,\n        stickyNav,\n        headerNav\n      } = this;\n      const stickyFocusedItemIndex = stickyHeadings.findIndex(item => {\n        var _document$activeEleme;\n\n        return item === ((_document$activeEleme = document.activeElement) === null || _document$activeEleme === void 0 ? void 0 : _document$activeEleme.parentElement);\n      });\n      const tableFocusedItemIndex = tableHeadings.findIndex(item => {\n        var _document$activeEleme2;\n\n        return item === ((_document$activeEleme2 = document.activeElement) === null || _document$activeEleme2 === void 0 ? void 0 : _document$activeEleme2.parentElement);\n      });\n      const arrowsInStickyNav = stickyNav === null || stickyNav === void 0 ? void 0 : stickyNav.querySelectorAll('button');\n      const arrowsInHeaderNav = headerNav === null || headerNav === void 0 ? void 0 : headerNav.querySelectorAll('button');\n      let stickyFocusedNavIndex = -1;\n      arrowsInStickyNav === null || arrowsInStickyNav === void 0 ? void 0 : arrowsInStickyNav.forEach((item, index) => {\n        if (item === document.activeElement) {\n          stickyFocusedNavIndex = index;\n        }\n      });\n      let headerFocusedNavIndex = -1;\n      arrowsInHeaderNav === null || arrowsInHeaderNav === void 0 ? void 0 : arrowsInHeaderNav.forEach((item, index) => {\n        if (item === document.activeElement) {\n          headerFocusedNavIndex = index;\n        }\n      });\n\n      if (stickyFocusedItemIndex < 0 && tableFocusedItemIndex < 0 && stickyFocusedNavIndex < 0 && headerFocusedNavIndex < 0) {\n        return null;\n      }\n\n      let button;\n\n      if (stickyFocusedItemIndex >= 0) {\n        button = tableHeadings[stickyFocusedItemIndex].querySelector('button');\n      } else if (tableFocusedItemIndex >= 0) {\n        button = stickyHeadings[tableFocusedItemIndex].querySelector('button');\n      }\n\n      if (stickyFocusedNavIndex >= 0) {\n        button = arrowsInHeaderNav === null || arrowsInHeaderNav === void 0 ? void 0 : arrowsInHeaderNav[stickyFocusedNavIndex];\n      } else if (headerFocusedNavIndex >= 0) {\n        button = arrowsInStickyNav === null || arrowsInStickyNav === void 0 ? void 0 : arrowsInStickyNav[headerFocusedNavIndex];\n      }\n\n      if (button == null) {\n        return null;\n      }\n\n      button.style.visibility = 'visible';\n      button.focus();\n      button.style.removeProperty('visibility');\n    };\n\n    this.calculateColumnVisibilityData = condensed => {\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const {\n        table: {\n          current: table\n        },\n        scrollContainer: {\n          current: scrollContainer\n        },\n        dataTable: {\n          current: dataTable\n        }\n      } = this;\n      const {\n        stickyHeader\n      } = this.props;\n\n      if ((stickyHeader || condensed) && table && scrollContainer && dataTable) {\n        const headerCells = table.querySelectorAll(headerCell.selector);\n        const rightMostHeader = headerCells[fixedFirstColumns - 1];\n        const nthColumnWidth = fixedFirstColumns ? rightMostHeader.offsetLeft + rightMostHeader.offsetWidth : 0;\n\n        if (headerCells.length > 0) {\n          const firstVisibleColumnIndex = headerCells.length - 1;\n          const tableLeftVisibleEdge = scrollContainer.scrollLeft + nthColumnWidth;\n          const tableRightVisibleEdge = scrollContainer.scrollLeft + dataTable.offsetWidth;\n          const tableData = {\n            firstVisibleColumnIndex,\n            tableLeftVisibleEdge,\n            tableRightVisibleEdge\n          };\n          const columnVisibilityData = [...headerCells].map(measureColumn(tableData));\n          const lastColumn = columnVisibilityData[columnVisibilityData.length - 1];\n          const isScrolledFarthestLeft = fixedFirstColumns ? tableLeftVisibleEdge === nthColumnWidth : tableLeftVisibleEdge === 0;\n          return {\n            columnVisibilityData,\n            ...getPrevAndCurrentColumns(tableData, columnVisibilityData),\n            isScrolledFarthestLeft,\n            isScrolledFarthestRight: lastColumn.rightEdge <= tableRightVisibleEdge\n          };\n        }\n      }\n\n      return {\n        columnVisibilityData: [],\n        previousColumn: undefined,\n        currentColumn: undefined\n      };\n    };\n\n    this.handleHeaderButtonFocus = event => {\n      var _this$state$columnVis;\n\n      const fixedFirstColumns = this.fixedFirstColumns();\n\n      if (this.scrollContainer.current == null || event.target == null || this.state.columnVisibilityData.length === 0) {\n        return;\n      }\n\n      const target = event.target;\n      const currentCell = target.parentNode;\n      const tableScrollLeft = this.scrollContainer.current.scrollLeft;\n      const tableViewableWidth = this.scrollContainer.current.offsetWidth;\n      const tableRightEdge = tableScrollLeft + tableViewableWidth;\n      const nthColumnWidth = this.state.columnVisibilityData.length > 0 ? (_this$state$columnVis = this.state.columnVisibilityData[fixedFirstColumns]) === null || _this$state$columnVis === void 0 ? void 0 : _this$state$columnVis.rightEdge : 0;\n      const currentColumnLeftEdge = currentCell.offsetLeft;\n      const currentColumnRightEdge = currentCell.offsetLeft + currentCell.offsetWidth;\n\n      if (tableScrollLeft > currentColumnLeftEdge - nthColumnWidth) {\n        this.scrollContainer.current.scrollLeft = currentColumnLeftEdge - nthColumnWidth;\n      }\n\n      if (currentColumnRightEdge > tableRightEdge) {\n        this.scrollContainer.current.scrollLeft = currentColumnRightEdge - tableViewableWidth;\n      }\n    };\n\n    this.stickyHeaderScrolling = () => {\n      const {\n        current: stickyTable\n      } = this.stickyTable;\n      const {\n        current: scrollContainer\n      } = this.scrollContainer;\n\n      if (stickyTable == null || scrollContainer == null) {\n        return;\n      }\n\n      stickyTable.scrollLeft = scrollContainer.scrollLeft;\n    };\n\n    this.scrollListener = () => {\n      var _this$scrollContainer;\n\n      if (this.scrollStopTimer) {\n        clearTimeout(this.scrollStopTimer);\n      }\n\n      this.scrollStopTimer = setTimeout(() => {\n        this.setState(prevState => ({ ...this.calculateColumnVisibilityData(prevState.condensed)\n        }));\n      }, 100);\n      this.setState({\n        isScrolledFarthestLeft: ((_this$scrollContainer = this.scrollContainer.current) === null || _this$scrollContainer === void 0 ? void 0 : _this$scrollContainer.scrollLeft) === 0\n      });\n\n      if (this.props.stickyHeader && this.stickyHeaderActive) {\n        this.stickyHeaderScrolling();\n      }\n    };\n\n    this.handleHover = row => () => {\n      this.setState({\n        rowHovered: row\n      });\n    };\n\n    this.handleFocus = event => {\n      var _this$state$columnVis2;\n\n      const fixedFirstColumns = this.fixedFirstColumns();\n\n      if (this.scrollContainer.current == null || event.target == null) {\n        return;\n      }\n\n      const currentCell = event.target.parentNode;\n      const fixedNthColumn = this.props;\n      const nthColumnWidth = fixedNthColumn ? (_this$state$columnVis2 = this.state.columnVisibilityData[fixedFirstColumns]) === null || _this$state$columnVis2 === void 0 ? void 0 : _this$state$columnVis2.rightEdge : 0;\n      const currentColumnLeftEdge = currentCell.offsetLeft;\n      const desiredScrollLeft = currentColumnLeftEdge - nthColumnWidth;\n\n      if (this.scrollContainer.current.scrollLeft > desiredScrollLeft) {\n        this.scrollContainer.current.scrollLeft = desiredScrollLeft;\n      } // focus fixed first column if present\n\n    };\n\n    this.navigateTable = direction => {\n      var _this$state$columnVis3;\n\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const {\n        currentColumn,\n        previousColumn\n      } = this.state;\n      const nthColumnWidth = (_this$state$columnVis3 = this.state.columnVisibilityData[fixedFirstColumns - 1]) === null || _this$state$columnVis3 === void 0 ? void 0 : _this$state$columnVis3.rightEdge;\n\n      if (!currentColumn || !previousColumn) {\n        return;\n      }\n\n      let prevWidths = 0;\n\n      for (let index = 0; index < currentColumn.index; index++) {\n        prevWidths += this.state.columnVisibilityData[index].width;\n      }\n\n      const {\n        current: scrollContainer\n      } = this.scrollContainer;\n\n      const handleScroll = () => {\n        let newScrollLeft = 0;\n\n        if (fixedFirstColumns) {\n          newScrollLeft = direction === 'right' ? prevWidths - nthColumnWidth + currentColumn.width : prevWidths - previousColumn.width - nthColumnWidth;\n        } else {\n          newScrollLeft = direction === 'right' ? currentColumn.rightEdge : previousColumn.leftEdge;\n        }\n\n        if (scrollContainer) {\n          scrollContainer.scrollLeft = newScrollLeft;\n          requestAnimationFrame(() => {\n            this.setState(prevState => ({ ...this.calculateColumnVisibilityData(prevState.condensed)\n            }));\n          });\n        }\n      };\n\n      return handleScroll;\n    };\n\n    this.renderHeading = ({\n      heading,\n      headingIndex,\n      inFixedNthColumn,\n      inStickyHeader\n    }) => {\n      const {\n        sortable,\n        truncate = false,\n        columnContentTypes,\n        defaultSortDirection,\n        initialSortColumnIndex = 0,\n        verticalAlign,\n        firstColumnMinWidth\n      } = this.props;\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const {\n        sortDirection = defaultSortDirection,\n        sortedColumnIndex = initialSortColumnIndex,\n        isScrolledFarthestLeft\n      } = this.state;\n      let sortableHeadingProps;\n      const headingCellId = `heading-cell-${headingIndex}`;\n      const stickyHeaderId = `stickyheader-${headingIndex}`;\n      const id = inStickyHeader ? stickyHeaderId : headingCellId;\n\n      if (sortable) {\n        const isSortable = sortable[headingIndex];\n        const isSorted = isSortable && sortedColumnIndex === headingIndex;\n        const direction = isSorted ? sortDirection : 'none';\n        sortableHeadingProps = {\n          defaultSortDirection,\n          sorted: isSorted,\n          sortable: isSortable,\n          sortDirection: direction,\n          onSort: this.defaultOnSort(headingIndex),\n          fixedNthColumn: fixedFirstColumns,\n          inFixedNthColumn: fixedFirstColumns\n        };\n      }\n\n      const stickyCellWidth = inStickyHeader ? this.tableHeadingWidths[headingIndex] : undefined;\n      const fixedCellVisible = !isScrolledFarthestLeft;\n      const cellProps = {\n        header: true,\n        stickyHeadingCell: inStickyHeader,\n        content: heading,\n        contentType: columnContentTypes[headingIndex],\n        nthColumn: headingIndex < fixedFirstColumns,\n        fixedFirstColumns,\n        truncate,\n        headingIndex,\n        ...sortableHeadingProps,\n        verticalAlign,\n        handleFocus: this.handleFocus,\n        stickyCellWidth,\n        fixedCellVisible,\n        firstColumnMinWidth\n      };\n\n      if (inFixedNthColumn && inStickyHeader) {\n        var _this$state$columnVis4;\n\n        // need two cells for fixed first column (actual cell and the overlapping one)\n        // the sticky cell is second so that the index is associated with the sticky\n        // cell and not the underlying one. This helps `changeHeadingFocus` to put\n        // focus on the right cell when switching from sticky to non-sticky headers\n        return [/*#__PURE__*/React.createElement(Cell, Object.assign({\n          key: id\n        }, cellProps, {\n          setRef: ref => {\n            this.setCellRef({\n              ref,\n              index: headingIndex,\n              inStickyHeader\n            });\n          },\n          inFixedNthColumn: false\n        })), /*#__PURE__*/React.createElement(Cell, Object.assign({\n          key: `${id}-sticky`\n        }, cellProps, {\n          setRef: ref => {\n            this.setCellRef({\n              ref,\n              index: headingIndex,\n              inStickyHeader\n            });\n          },\n          inFixedNthColumn: Boolean(fixedFirstColumns),\n          lastFixedFirstColumn: headingIndex === fixedFirstColumns - 1,\n          style: {\n            left: (_this$state$columnVis4 = this.state.columnVisibilityData[headingIndex]) === null || _this$state$columnVis4 === void 0 ? void 0 : _this$state$columnVis4.leftEdge\n          }\n        }))];\n      }\n\n      return /*#__PURE__*/React.createElement(Cell, Object.assign({\n        key: id\n      }, cellProps, {\n        setRef: ref => {\n          this.setCellRef({\n            ref,\n            index: headingIndex,\n            inStickyHeader\n          });\n        },\n        lastFixedFirstColumn: headingIndex === fixedFirstColumns - 1,\n        inFixedNthColumn: inFixedNthColumn\n      }));\n    };\n\n    this.totalsRowHeading = () => {\n      const {\n        i18n,\n        totals,\n        totalsName\n      } = this.props;\n      const totalsLabel = totalsName ? totalsName : {\n        singular: i18n.translate('Polaris.DataTable.totalRowHeading'),\n        plural: i18n.translate('Polaris.DataTable.totalsRowHeading')\n      };\n      return totals && totals.filter(total => total !== '').length > 1 ? totalsLabel.plural : totalsLabel.singular;\n    };\n\n    this.renderTotals = ({\n      total,\n      index\n    }) => {\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const id = `totals-cell-${index}`;\n      const {\n        truncate = false,\n        verticalAlign\n      } = this.props;\n      let content;\n      let contentType;\n\n      if (index === 0) {\n        content = this.totalsRowHeading();\n      }\n\n      if (total !== '' && index > 0) {\n        contentType = 'numeric';\n        content = total;\n      }\n\n      const totalInFooter = this.props.showTotalsInFooter;\n      return /*#__PURE__*/React.createElement(Cell, {\n        total: true,\n        totalInFooter: totalInFooter,\n        nthColumn: index <= fixedFirstColumns - 1,\n        firstColumn: index === 0,\n        key: id,\n        content: content,\n        contentType: contentType,\n        truncate: truncate,\n        verticalAlign: verticalAlign\n      });\n    };\n\n    this.getColSpan = (rowLength, headingsLength, contentTypesLength, cellIndex) => {\n      // We decided that it shouldn't be possible to have fixed \"n\" columns and content that spans multiple columns\n      const fixedFirstColumns = this.fixedFirstColumns();\n\n      if (fixedFirstColumns) {\n        return 1;\n      }\n\n      const rowLen = rowLength ? rowLength : 1;\n      const colLen = headingsLength ? headingsLength : contentTypesLength;\n      const colSpan = Math.floor(colLen / rowLen);\n      const remainder = colLen % rowLen;\n      return cellIndex === 0 ? colSpan + remainder : colSpan;\n    };\n\n    this.defaultRenderRow = ({\n      row,\n      index,\n      inFixedNthColumn,\n      rowHeights\n    }) => {\n      const {\n        columnContentTypes,\n        truncate = false,\n        verticalAlign,\n        hoverable = true,\n        headings\n      } = this.props;\n      const {\n        condensed\n      } = this.state;\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const className = classNames(styles.TableRow, hoverable && styles.hoverable);\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: `row-${index}`,\n        className: className,\n        onMouseEnter: this.handleHover(index),\n        onMouseLeave: this.handleHover()\n      }, row.map((content, cellIndex) => {\n        const hovered = index === this.state.rowHovered;\n        const id = `cell-${cellIndex}-row-${index}`;\n        const colSpan = this.getColSpan(row.length, headings.length, columnContentTypes.length, cellIndex);\n        return /*#__PURE__*/React.createElement(Cell, {\n          key: id,\n          content: content,\n          contentType: columnContentTypes[cellIndex],\n          nthColumn: cellIndex <= fixedFirstColumns - 1,\n          firstColumn: cellIndex === 0,\n          truncate: truncate,\n          verticalAlign: verticalAlign,\n          colSpan: colSpan,\n          hovered: hovered,\n          style: rowHeights ? {\n            height: `${rowHeights[index]}px`\n          } : {},\n          inFixedNthColumn: condensed && inFixedNthColumn\n        });\n      }));\n    };\n\n    this.defaultOnSort = headingIndex => {\n      const {\n        onSort,\n        defaultSortDirection = 'ascending',\n        initialSortColumnIndex\n      } = this.props;\n      const {\n        sortDirection = defaultSortDirection,\n        sortedColumnIndex = initialSortColumnIndex\n      } = this.state;\n      let newSortDirection = defaultSortDirection;\n\n      if (sortedColumnIndex === headingIndex) {\n        newSortDirection = sortDirection === 'ascending' ? 'descending' : 'ascending';\n      }\n\n      const handleSort = () => {\n        this.setState({\n          sortDirection: newSortDirection,\n          sortedColumnIndex: headingIndex\n        }, () => {\n          if (onSort) {\n            onSort(headingIndex, newSortDirection);\n          }\n        });\n      };\n\n      return handleSort;\n    };\n  }\n\n  componentDidMount() {\n    // We need to defer the calculation in development so the styles have time to be injected.\n    if (process.env.NODE_ENV === 'development') {\n      setTimeout(() => {\n        this.handleResize();\n      }, 10);\n    } else {\n      this.handleResize();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (isEqual(prevProps, this.props)) {\n      return;\n    }\n\n    this.handleResize();\n  }\n\n  componentWillUnmount() {\n    this.handleResize.cancel();\n  }\n\n  render() {\n    var _this$table$current, _this$table$current2, _columnVisibilityData;\n\n    const {\n      headings,\n      totals,\n      showTotalsInFooter,\n      rows,\n      footerContent,\n      hideScrollIndicator = false,\n      increasedTableDensity = false,\n      hasZebraStripingOnData = false,\n      stickyHeader = false,\n      hasFixedFirstColumn: fixedFirstColumn = false\n    } = this.props;\n    const {\n      condensed,\n      columnVisibilityData,\n      isScrolledFarthestLeft,\n      isScrolledFarthestRight\n    } = this.state;\n\n    if (fixedFirstColumn && process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn('Deprecation: The `hasFixedFirstColumn` prop on the `DataTable` has been deprecated. Use fixedFirstColumns={n} instead.');\n    }\n\n    const fixedFirstColumns = this.fixedFirstColumns();\n    const rowCountIsEven = rows.length % 2 === 0;\n    const className = classNames(styles.DataTable, condensed && styles.condensed, totals && styles.ShowTotals, showTotalsInFooter && styles.ShowTotalsInFooter, hasZebraStripingOnData && styles.ZebraStripingOnData, hasZebraStripingOnData && rowCountIsEven && styles.RowCountIsEven);\n    const wrapperClassName = classNames(styles.TableWrapper, condensed && styles.condensed, increasedTableDensity && styles.IncreasedTableDensity, stickyHeader && styles.StickyHeaderEnabled);\n    const headingMarkup = /*#__PURE__*/React.createElement(\"tr\", null, headings.map((heading, index) => this.renderHeading({\n      heading,\n      headingIndex: index,\n      inFixedNthColumn: false,\n      inStickyHeader: false\n    })));\n    const totalsMarkup = totals ? /*#__PURE__*/React.createElement(\"tr\", null, totals.map((total, index) => this.renderTotals({\n      total,\n      index\n    }))) : null;\n    const nthColumns = rows.map(row => row.slice(0, fixedFirstColumns));\n    const nthHeadings = headings.slice(0, fixedFirstColumns);\n    const nthTotals = totals === null || totals === void 0 ? void 0 : totals.slice(0, fixedFirstColumns);\n    const tableHeaderRows = (_this$table$current = this.table.current) === null || _this$table$current === void 0 ? void 0 : _this$table$current.children[0].childNodes;\n    const tableBodyRows = (_this$table$current2 = this.table.current) === null || _this$table$current2 === void 0 ? void 0 : _this$table$current2.children[1].childNodes;\n    const headerRowHeights = getRowClientHeights(tableHeaderRows);\n    const bodyRowHeights = getRowClientHeights(tableBodyRows);\n    const fixedNthColumnMarkup = condensed && fixedFirstColumns !== 0 && /*#__PURE__*/React.createElement(\"table\", {\n      className: classNames(styles.FixedFirstColumn, !isScrolledFarthestLeft && styles.separate),\n      style: {\n        width: `${(_columnVisibilityData = columnVisibilityData[fixedFirstColumns - 1]) === null || _columnVisibilityData === void 0 ? void 0 : _columnVisibilityData.rightEdge}px`\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        height: `${headerRowHeights[0]}px`\n      }\n    }, nthHeadings.map((heading, index) => this.renderHeading({\n      heading,\n      headingIndex: index,\n      inFixedNthColumn: true,\n      inStickyHeader: false\n    }))), totals && !showTotalsInFooter && /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        height: `${headerRowHeights[1]}px`\n      }\n    }, nthTotals === null || nthTotals === void 0 ? void 0 : nthTotals.map((total, index) => this.renderTotals({\n      total,\n      index\n    })))), /*#__PURE__*/React.createElement(\"tbody\", null, nthColumns.map((row, index) => this.defaultRenderRow({\n      row,\n      index,\n      inFixedNthColumn: true,\n      rowHeights: bodyRowHeights\n    }))), totals && showTotalsInFooter && /*#__PURE__*/React.createElement(\"tfoot\", null, /*#__PURE__*/React.createElement(\"tr\", null, nthTotals === null || nthTotals === void 0 ? void 0 : nthTotals.map((total, index) => this.renderTotals({\n      total,\n      index\n    })))));\n    const bodyMarkup = rows.map((row, index) => this.defaultRenderRow({\n      row,\n      index,\n      inFixedNthColumn: false\n    }));\n    const footerMarkup = footerContent ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Footer\n    }, footerContent) : null;\n    const headerTotalsMarkup = !showTotalsInFooter ? totalsMarkup : null;\n    const footerTotalsMarkup = showTotalsInFooter ? /*#__PURE__*/React.createElement(\"tfoot\", null, totalsMarkup) : null;\n\n    const navigationMarkup = location => hideScrollIndicator ? null : /*#__PURE__*/React.createElement(Navigation, {\n      columnVisibilityData: columnVisibilityData,\n      isScrolledFarthestLeft: isScrolledFarthestLeft,\n      isScrolledFarthestRight: isScrolledFarthestRight,\n      navigateTableLeft: this.navigateTable('left'),\n      navigateTableRight: this.navigateTable('right'),\n      fixedFirstColumns: fixedFirstColumns,\n      setRef: ref => {\n        if (location === 'header') {\n          this.headerNav = ref;\n        } else if (location === 'sticky') {\n          this.stickyNav = ref;\n        }\n      }\n    });\n\n    const stickyHeaderMarkup = stickyHeader ? /*#__PURE__*/React.createElement(AfterInitialMount, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyHeaderWrapper,\n      role: \"presentation\"\n    }, /*#__PURE__*/React.createElement(Sticky, {\n      boundingElement: this.dataTable.current,\n      onStickyChange: isSticky => {\n        this.changeHeadingFocus();\n        this.stickyHeaderActive = isSticky;\n      }\n    }, isSticky => {\n      const stickyHeaderInnerClassNames = classNames(styles.StickyHeaderInner, isSticky && styles['StickyHeaderInner-isSticky']);\n      const stickyHeaderTableClassNames = classNames(styles.StickyHeaderTable, !isScrolledFarthestLeft && styles.separate);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: stickyHeaderInnerClassNames\n      }, /*#__PURE__*/React.createElement(\"div\", null, navigationMarkup('sticky')), /*#__PURE__*/React.createElement(\"table\", {\n        className: stickyHeaderTableClassNames,\n        ref: this.stickyTable\n      }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n        className: styles.StickyTableHeadingsRow\n      }, headings.map((heading, index) => {\n        return this.renderHeading({\n          heading,\n          headingIndex: index,\n          inFixedNthColumn: Boolean(index <= fixedFirstColumns - 1 && fixedFirstColumns),\n          inStickyHeader: true\n        });\n      })))));\n    }))) : null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: wrapperClassName,\n      ref: this.dataTable\n    }, stickyHeaderMarkup, navigationMarkup('header'), /*#__PURE__*/React.createElement(\"div\", {\n      className: className\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ScrollContainer,\n      ref: this.scrollContainer\n    }, /*#__PURE__*/React.createElement(EventListener, {\n      event: \"resize\",\n      handler: this.handleResize\n    }), /*#__PURE__*/React.createElement(EventListener, {\n      capture: true,\n      passive: true,\n      event: \"scroll\",\n      handler: this.scrollListener\n    }), fixedNthColumnMarkup, /*#__PURE__*/React.createElement(\"table\", {\n      className: styles.Table,\n      ref: this.table\n    }, /*#__PURE__*/React.createElement(\"thead\", null, headingMarkup, headerTotalsMarkup), /*#__PURE__*/React.createElement(\"tbody\", null, bodyMarkup), footerTotalsMarkup)), footerMarkup));\n  }\n\n  fixedFirstColumns() {\n    const {\n      hasFixedFirstColumn,\n      fixedFirstColumns = 0,\n      headings\n    } = this.props;\n    const numberOfFixedFirstColumns = hasFixedFirstColumn && !fixedFirstColumns ? 1 : fixedFirstColumns;\n\n    if (numberOfFixedFirstColumns >= headings.length) {\n      return 0;\n    }\n\n    return numberOfFixedFirstColumns;\n  }\n\n}\n\nfunction DataTable(props) {\n  const i18n = useI18n();\n  return /*#__PURE__*/React.createElement(DataTableInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\n\nexport { DataTable };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}