{"ast":null,"code":"import React, { useState, useRef, useEffect, useCallback, createElement } from 'react';\nimport { CircleCancelMinor } from '@shopify/polaris-icons';\nimport { classNames, variationName } from '../../utilities/css.js';\nimport { useIsAfterInitialMount } from '../../utilities/use-is-after-initial-mount.js';\nimport { Key } from '../../types.js';\nimport styles from './TextField.scss.js';\nimport { Spinner } from './components/Spinner/Spinner.js';\nimport { Labelled, helpTextID } from '../Labelled/Labelled.js';\nimport { Connected } from '../Connected/Connected.js';\nimport { Resizer } from './components/Resizer/Resizer.js';\nimport { labelID } from '../Label/Label.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.js';\nimport { Icon } from '../Icon/Icon.js';\nfunction TextField(_ref) {\n  let {\n    prefix,\n    suffix,\n    verticalContent,\n    placeholder,\n    value = '',\n    helpText,\n    label,\n    labelAction,\n    labelHidden,\n    disabled,\n    clearButton,\n    readOnly,\n    autoFocus,\n    focused,\n    multiline,\n    error,\n    connectedRight,\n    connectedLeft,\n    type = 'text',\n    name,\n    id: idProp,\n    role,\n    step,\n    autoComplete,\n    max,\n    maxLength,\n    maxHeight,\n    min,\n    minLength,\n    pattern,\n    inputMode,\n    spellCheck,\n    ariaOwns,\n    ariaControls,\n    ariaExpanded,\n    ariaActiveDescendant,\n    ariaAutocomplete,\n    showCharacterCount,\n    align,\n    requiredIndicator,\n    monospaced,\n    selectTextOnFocus,\n    suggestion,\n    onClearButtonClick,\n    onChange,\n    onFocus,\n    onBlur\n  } = _ref;\n  const i18n = useI18n();\n  const [height, setHeight] = useState(null);\n  const [focus, setFocus] = useState(Boolean(focused));\n  const isAfterInitial = useIsAfterInitialMount();\n  const id = useUniqueId('TextField', idProp);\n  const inputRef = useRef(null);\n  const textAreaRef = useRef(null);\n  const prefixRef = useRef(null);\n  const suffixRef = useRef(null);\n  const verticalContentRef = useRef(null);\n  const buttonPressTimer = useRef();\n  const spinnerRef = useRef(null);\n  useEffect(() => {\n    const input = multiline ? textAreaRef.current : inputRef.current;\n    if (!input || focused === undefined) return;\n    focused ? input.focus() : input.blur();\n  }, [focused, verticalContent, multiline]);\n  useEffect(() => {\n    const input = inputRef.current;\n    const isSupportedInputType = type === 'text' || type === 'tel' || type === 'search' || type === 'url' || type === 'password';\n    if (!input || !isSupportedInputType || !suggestion) {\n      return;\n    }\n    input.setSelectionRange(value.length, suggestion.length);\n  }, [focus, value, type, suggestion]);\n  const normalizedValue = suggestion ? suggestion : value;\n  const normalizedStep = step != null ? step : 1;\n  const normalizedMax = max != null ? max : Infinity;\n  const normalizedMin = min != null ? min : -Infinity;\n  const className = classNames(styles.TextField, Boolean(normalizedValue) && styles.hasValue, disabled && styles.disabled, readOnly && styles.readOnly, error && styles.error, multiline && styles.multiline, focus && styles.focus);\n  const inputType = type === 'currency' ? 'text' : type;\n  const prefixMarkup = prefix ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Prefix,\n    id: `${id}-Prefix`,\n    ref: prefixRef\n  }, prefix) : null;\n  const suffixMarkup = suffix ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Suffix,\n    id: `${id}-Suffix`,\n    ref: suffixRef\n  }, suffix) : null;\n  let characterCountMarkup = null;\n  if (showCharacterCount) {\n    const characterCount = normalizedValue.length;\n    const characterCountLabel = maxLength ? i18n.translate('Polaris.TextField.characterCountWithMaxLength', {\n      count: characterCount,\n      limit: maxLength\n    }) : i18n.translate('Polaris.TextField.characterCount', {\n      count: characterCount\n    });\n    const characterCountClassName = classNames(styles.CharacterCount, multiline && styles.AlignFieldBottom);\n    const characterCountText = !maxLength ? characterCount : `${characterCount}/${maxLength}`;\n    characterCountMarkup = /*#__PURE__*/React.createElement(\"div\", {\n      id: `${id}-CharacterCounter`,\n      className: characterCountClassName,\n      \"aria-label\": characterCountLabel,\n      \"aria-live\": focus ? 'polite' : 'off',\n      \"aria-atomic\": \"true\",\n      onClick: handleClickChild\n    }, characterCountText);\n  }\n  const clearButtonVisible = normalizedValue !== '';\n  const clearButtonMarkup = clearButton && clearButtonVisible ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: styles.ClearButton,\n    onClick: handleClearButtonPress,\n    disabled: disabled\n  }, /*#__PURE__*/React.createElement(VisuallyHidden, null, i18n.translate('Polaris.Common.clear')), /*#__PURE__*/React.createElement(Icon, {\n    source: CircleCancelMinor,\n    color: \"base\"\n  })) : null;\n  const handleNumberChange = useCallback(steps => {\n    if (onChange == null) {\n      return;\n    } // Returns the length of decimal places in a number\n\n    const dpl = num => (num.toString().split('.')[1] || []).length;\n    const numericValue = value ? parseFloat(value) : 0;\n    if (isNaN(numericValue)) {\n      return;\n    } // Making sure the new value has the same length of decimal places as the\n    // step / value has.\n\n    const decimalPlaces = Math.max(dpl(numericValue), dpl(normalizedStep));\n    const newValue = Math.min(Number(normalizedMax), Math.max(numericValue + steps * normalizedStep, Number(normalizedMin)));\n    onChange(String(newValue.toFixed(decimalPlaces)), id);\n  }, [id, normalizedMax, normalizedMin, onChange, normalizedStep, value]);\n  const handleButtonRelease = useCallback(() => {\n    clearTimeout(buttonPressTimer.current);\n  }, []);\n  const handleButtonPress = useCallback(onChange => {\n    const minInterval = 50;\n    const decrementBy = 10;\n    let interval = 200;\n    const onChangeInterval = () => {\n      if (interval > minInterval) interval -= decrementBy;\n      onChange(0);\n      buttonPressTimer.current = window.setTimeout(onChangeInterval, interval);\n    };\n    buttonPressTimer.current = window.setTimeout(onChangeInterval, interval);\n    document.addEventListener('mouseup', handleButtonRelease, {\n      once: true\n    });\n  }, [handleButtonRelease]);\n  const spinnerMarkup = type === 'number' && step !== 0 && !disabled && !readOnly ? /*#__PURE__*/React.createElement(Spinner, {\n    onClick: handleClickChild,\n    onChange: handleNumberChange,\n    onMouseDown: handleButtonPress,\n    onMouseUp: handleButtonRelease,\n    ref: spinnerRef\n  }) : null;\n  const style = multiline && height ? {\n    height,\n    maxHeight\n  } : null;\n  const handleExpandingResize = useCallback(height => {\n    setHeight(height);\n  }, []);\n  const resizer = multiline && isAfterInitial ? /*#__PURE__*/React.createElement(Resizer, {\n    contents: normalizedValue || placeholder,\n    currentHeight: height,\n    minimumLines: typeof multiline === 'number' ? multiline : 1,\n    onHeightChange: handleExpandingResize\n  }) : null;\n  const describedBy = [];\n  if (error) {\n    describedBy.push(`${id}Error`);\n  }\n  if (helpText) {\n    describedBy.push(helpTextID(id));\n  }\n  if (showCharacterCount) {\n    describedBy.push(`${id}-CharacterCounter`);\n  }\n  const labelledBy = [];\n  if (prefix) {\n    labelledBy.push(`${id}-Prefix`);\n  }\n  if (suffix) {\n    labelledBy.push(`${id}-Suffix`);\n  }\n  if (verticalContent) {\n    labelledBy.push(`${id}-VerticalContent`);\n  }\n  labelledBy.unshift(labelID(id));\n  const inputClassName = classNames(styles.Input, align && styles[variationName('Input-align', align)], suffix && styles['Input-suffixed'], clearButton && styles['Input-hasClearButton'], monospaced && styles.monospaced, suggestion && styles.suggestion);\n  const handleOnFocus = event => {\n    setFocus(true);\n    if (selectTextOnFocus && !suggestion) {\n      const input = multiline ? textAreaRef.current : inputRef.current;\n      input === null || input === void 0 ? void 0 : input.select();\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const handleOnBlur = event => {\n    setFocus(false);\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const input = /*#__PURE__*/createElement(multiline ? 'textarea' : 'input', {\n    name,\n    id,\n    disabled,\n    readOnly,\n    role,\n    autoFocus,\n    value: normalizedValue,\n    placeholder,\n    style,\n    autoComplete,\n    className: inputClassName,\n    ref: multiline ? textAreaRef : inputRef,\n    min,\n    max,\n    step,\n    minLength,\n    maxLength,\n    spellCheck,\n    pattern,\n    inputMode,\n    type: inputType,\n    rows: getRows(multiline),\n    'aria-describedby': describedBy.length ? describedBy.join(' ') : undefined,\n    'aria-labelledby': labelledBy.join(' '),\n    'aria-invalid': Boolean(error),\n    'aria-owns': ariaOwns,\n    'aria-activedescendant': ariaActiveDescendant,\n    'aria-autocomplete': ariaAutocomplete,\n    'aria-controls': ariaControls,\n    'aria-expanded': ariaExpanded,\n    'aria-required': requiredIndicator,\n    ...normalizeAriaMultiline(multiline),\n    onFocus: handleOnFocus,\n    onBlur: handleOnBlur,\n    onClick: handleClickChild,\n    onKeyPress: handleKeyPress,\n    onChange: !suggestion ? handleChange : undefined,\n    onInput: suggestion ? handleChange : undefined\n  });\n  const inputWithVerticalContentMarkup = verticalContent ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.VerticalContent,\n    id: `${id}-VerticalContent`,\n    ref: verticalContentRef,\n    onClick: handleClickChild\n  }, verticalContent, input) : null;\n  const inputMarkup = verticalContent ? inputWithVerticalContentMarkup : input;\n  const backdropMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(styles.Backdrop, connectedLeft && styles['Backdrop-connectedLeft'], connectedRight && styles['Backdrop-connectedRight'])\n  });\n  return /*#__PURE__*/React.createElement(Labelled, {\n    label: label,\n    id: id,\n    error: error,\n    action: labelAction,\n    labelHidden: labelHidden,\n    helpText: helpText,\n    requiredIndicator: requiredIndicator\n  }, /*#__PURE__*/React.createElement(Connected, {\n    left: connectedLeft,\n    right: connectedRight\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    onClick: handleClick\n  }, prefixMarkup, inputMarkup, suffixMarkup, characterCountMarkup, clearButtonMarkup, spinnerMarkup, backdropMarkup, resizer)));\n  function handleChange(event) {\n    onChange && onChange(event.currentTarget.value, id);\n  }\n  function handleClick(event) {\n    var _inputRef$current, _inputRef$current3;\n    const {\n      target\n    } = event; // For TextFields used with Combobox, focus needs to be set again even\n    // if the TextField is already focused to trigger the logic to open the\n    // Combobox activator\n\n    const inputRefRole = inputRef === null || inputRef === void 0 ? void 0 : (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.getAttribute('role');\n    if (target === inputRef.current && inputRefRole === 'combobox') {\n      var _inputRef$current2;\n      (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.focus();\n      handleOnFocus(event);\n      return;\n    }\n    if (isPrefixOrSuffix(target) || isVerticalContent(target) || isInput(target) || isSpinner(target) || focus) {\n      return;\n    }\n    (_inputRef$current3 = inputRef.current) === null || _inputRef$current3 === void 0 ? void 0 : _inputRef$current3.focus();\n  }\n  function handleClickChild(event) {\n    if (!isSpinner(event.target) && !isInput(event.target)) {\n      event.stopPropagation();\n    }\n    if (isPrefixOrSuffix(event.target) || isVerticalContent(event.target) || isInput(event.target) || focus) {\n      return;\n    }\n    setFocus(true);\n  }\n  function handleClearButtonPress() {\n    onClearButtonClick && onClearButtonClick(id);\n  }\n  function handleKeyPress(event) {\n    const {\n      key,\n      which\n    } = event;\n    const numbersSpec = /[\\d.eE+-]$/;\n    if (type !== 'number' || which === Key.Enter || numbersSpec.test(key)) {\n      return;\n    }\n    event.preventDefault();\n  }\n  function isInput(target) {\n    return target instanceof HTMLElement && inputRef.current && (inputRef.current.contains(target) || inputRef.current.contains(document.activeElement));\n  }\n  function isPrefixOrSuffix(target) {\n    return target instanceof Element && (prefixRef.current && prefixRef.current.contains(target) || suffixRef.current && suffixRef.current.contains(target));\n  }\n  function isSpinner(target) {\n    return target instanceof Element && spinnerRef.current && spinnerRef.current.contains(target);\n  }\n  function isVerticalContent(target) {\n    return target instanceof Element && verticalContentRef.current && (verticalContentRef.current.contains(target) || verticalContentRef.current.contains(document.activeElement));\n  }\n}\nfunction getRows(multiline) {\n  if (!multiline) return undefined;\n  return typeof multiline === 'number' ? multiline : 1;\n}\nfunction normalizeAriaMultiline(multiline) {\n  if (!multiline) return undefined;\n  return Boolean(multiline) || multiline > 0 ? {\n    'aria-multiline': true\n  } : undefined;\n}\nexport { TextField };","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","createElement","CircleCancelMinor","classNames","variationName","useIsAfterInitialMount","Key","styles","Spinner","Labelled","helpTextID","Connected","Resizer","labelID","useI18n","useUniqueId","VisuallyHidden","Icon","TextField","prefix","suffix","verticalContent","placeholder","value","helpText","label","labelAction","labelHidden","disabled","clearButton","readOnly","autoFocus","focused","multiline","error","connectedRight","connectedLeft","type","name","id","idProp","role","step","autoComplete","max","maxLength","maxHeight","min","minLength","pattern","inputMode","spellCheck","ariaOwns","ariaControls","ariaExpanded","ariaActiveDescendant","ariaAutocomplete","showCharacterCount","align","requiredIndicator","monospaced","selectTextOnFocus","suggestion","onClearButtonClick","onChange","onFocus","onBlur","i18n","height","setHeight","focus","setFocus","Boolean","isAfterInitial","inputRef","textAreaRef","prefixRef","suffixRef","verticalContentRef","buttonPressTimer","spinnerRef","input","current","undefined","blur","isSupportedInputType","setSelectionRange","length","normalizedValue","normalizedStep","normalizedMax","Infinity","normalizedMin","className","hasValue","inputType","prefixMarkup","Prefix","ref","suffixMarkup","Suffix","characterCountMarkup","characterCount","characterCountLabel","translate","count","limit","characterCountClassName","CharacterCount","AlignFieldBottom","characterCountText","onClick","handleClickChild","clearButtonVisible","clearButtonMarkup","ClearButton","handleClearButtonPress","source","color","handleNumberChange","steps","dpl","num","toString","split","numericValue","parseFloat","isNaN","decimalPlaces","Math","newValue","Number","String","toFixed","handleButtonRelease","clearTimeout","handleButtonPress","minInterval","decrementBy","interval","onChangeInterval","window","setTimeout","document","addEventListener","once","spinnerMarkup","onMouseDown","onMouseUp","style","handleExpandingResize","resizer","contents","currentHeight","minimumLines","onHeightChange","describedBy","push","labelledBy","unshift","inputClassName","Input","handleOnFocus","event","select","handleOnBlur","rows","getRows","join","normalizeAriaMultiline","onKeyPress","handleKeyPress","handleChange","onInput","inputWithVerticalContentMarkup","VerticalContent","inputMarkup","backdropMarkup","Backdrop","action","left","right","handleClick","currentTarget","_inputRef$current","_inputRef$current3","target","inputRefRole","getAttribute","_inputRef$current2","isPrefixOrSuffix","isVerticalContent","isInput","isSpinner","stopPropagation","key","which","numbersSpec","Enter","test","preventDefault","HTMLElement","contains","activeElement","Element"],"sources":["/home/cedcoss/Desktop/redux-xhat-app/node_modules/@shopify/polaris/build/esm/components/TextField/TextField.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback, createElement } from 'react';\nimport { CircleCancelMinor } from '@shopify/polaris-icons';\nimport { classNames, variationName } from '../../utilities/css.js';\nimport { useIsAfterInitialMount } from '../../utilities/use-is-after-initial-mount.js';\nimport { Key } from '../../types.js';\nimport styles from './TextField.scss.js';\nimport { Spinner } from './components/Spinner/Spinner.js';\nimport { Labelled, helpTextID } from '../Labelled/Labelled.js';\nimport { Connected } from '../Connected/Connected.js';\nimport { Resizer } from './components/Resizer/Resizer.js';\nimport { labelID } from '../Label/Label.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.js';\nimport { Icon } from '../Icon/Icon.js';\n\nfunction TextField({\n  prefix,\n  suffix,\n  verticalContent,\n  placeholder,\n  value = '',\n  helpText,\n  label,\n  labelAction,\n  labelHidden,\n  disabled,\n  clearButton,\n  readOnly,\n  autoFocus,\n  focused,\n  multiline,\n  error,\n  connectedRight,\n  connectedLeft,\n  type = 'text',\n  name,\n  id: idProp,\n  role,\n  step,\n  autoComplete,\n  max,\n  maxLength,\n  maxHeight,\n  min,\n  minLength,\n  pattern,\n  inputMode,\n  spellCheck,\n  ariaOwns,\n  ariaControls,\n  ariaExpanded,\n  ariaActiveDescendant,\n  ariaAutocomplete,\n  showCharacterCount,\n  align,\n  requiredIndicator,\n  monospaced,\n  selectTextOnFocus,\n  suggestion,\n  onClearButtonClick,\n  onChange,\n  onFocus,\n  onBlur\n}) {\n  const i18n = useI18n();\n  const [height, setHeight] = useState(null);\n  const [focus, setFocus] = useState(Boolean(focused));\n  const isAfterInitial = useIsAfterInitialMount();\n  const id = useUniqueId('TextField', idProp);\n  const inputRef = useRef(null);\n  const textAreaRef = useRef(null);\n  const prefixRef = useRef(null);\n  const suffixRef = useRef(null);\n  const verticalContentRef = useRef(null);\n  const buttonPressTimer = useRef();\n  const spinnerRef = useRef(null);\n  useEffect(() => {\n    const input = multiline ? textAreaRef.current : inputRef.current;\n    if (!input || focused === undefined) return;\n    focused ? input.focus() : input.blur();\n  }, [focused, verticalContent, multiline]);\n  useEffect(() => {\n    const input = inputRef.current;\n    const isSupportedInputType = type === 'text' || type === 'tel' || type === 'search' || type === 'url' || type === 'password';\n\n    if (!input || !isSupportedInputType || !suggestion) {\n      return;\n    }\n\n    input.setSelectionRange(value.length, suggestion.length);\n  }, [focus, value, type, suggestion]);\n  const normalizedValue = suggestion ? suggestion : value;\n  const normalizedStep = step != null ? step : 1;\n  const normalizedMax = max != null ? max : Infinity;\n  const normalizedMin = min != null ? min : -Infinity;\n  const className = classNames(styles.TextField, Boolean(normalizedValue) && styles.hasValue, disabled && styles.disabled, readOnly && styles.readOnly, error && styles.error, multiline && styles.multiline, focus && styles.focus);\n  const inputType = type === 'currency' ? 'text' : type;\n  const prefixMarkup = prefix ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Prefix,\n    id: `${id}-Prefix`,\n    ref: prefixRef\n  }, prefix) : null;\n  const suffixMarkup = suffix ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Suffix,\n    id: `${id}-Suffix`,\n    ref: suffixRef\n  }, suffix) : null;\n  let characterCountMarkup = null;\n\n  if (showCharacterCount) {\n    const characterCount = normalizedValue.length;\n    const characterCountLabel = maxLength ? i18n.translate('Polaris.TextField.characterCountWithMaxLength', {\n      count: characterCount,\n      limit: maxLength\n    }) : i18n.translate('Polaris.TextField.characterCount', {\n      count: characterCount\n    });\n    const characterCountClassName = classNames(styles.CharacterCount, multiline && styles.AlignFieldBottom);\n    const characterCountText = !maxLength ? characterCount : `${characterCount}/${maxLength}`;\n    characterCountMarkup = /*#__PURE__*/React.createElement(\"div\", {\n      id: `${id}-CharacterCounter`,\n      className: characterCountClassName,\n      \"aria-label\": characterCountLabel,\n      \"aria-live\": focus ? 'polite' : 'off',\n      \"aria-atomic\": \"true\",\n      onClick: handleClickChild\n    }, characterCountText);\n  }\n\n  const clearButtonVisible = normalizedValue !== '';\n  const clearButtonMarkup = clearButton && clearButtonVisible ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: styles.ClearButton,\n    onClick: handleClearButtonPress,\n    disabled: disabled\n  }, /*#__PURE__*/React.createElement(VisuallyHidden, null, i18n.translate('Polaris.Common.clear')), /*#__PURE__*/React.createElement(Icon, {\n    source: CircleCancelMinor,\n    color: \"base\"\n  })) : null;\n  const handleNumberChange = useCallback(steps => {\n    if (onChange == null) {\n      return;\n    } // Returns the length of decimal places in a number\n\n\n    const dpl = num => (num.toString().split('.')[1] || []).length;\n\n    const numericValue = value ? parseFloat(value) : 0;\n\n    if (isNaN(numericValue)) {\n      return;\n    } // Making sure the new value has the same length of decimal places as the\n    // step / value has.\n\n\n    const decimalPlaces = Math.max(dpl(numericValue), dpl(normalizedStep));\n    const newValue = Math.min(Number(normalizedMax), Math.max(numericValue + steps * normalizedStep, Number(normalizedMin)));\n    onChange(String(newValue.toFixed(decimalPlaces)), id);\n  }, [id, normalizedMax, normalizedMin, onChange, normalizedStep, value]);\n  const handleButtonRelease = useCallback(() => {\n    clearTimeout(buttonPressTimer.current);\n  }, []);\n  const handleButtonPress = useCallback(onChange => {\n    const minInterval = 50;\n    const decrementBy = 10;\n    let interval = 200;\n\n    const onChangeInterval = () => {\n      if (interval > minInterval) interval -= decrementBy;\n      onChange(0);\n      buttonPressTimer.current = window.setTimeout(onChangeInterval, interval);\n    };\n\n    buttonPressTimer.current = window.setTimeout(onChangeInterval, interval);\n    document.addEventListener('mouseup', handleButtonRelease, {\n      once: true\n    });\n  }, [handleButtonRelease]);\n  const spinnerMarkup = type === 'number' && step !== 0 && !disabled && !readOnly ? /*#__PURE__*/React.createElement(Spinner, {\n    onClick: handleClickChild,\n    onChange: handleNumberChange,\n    onMouseDown: handleButtonPress,\n    onMouseUp: handleButtonRelease,\n    ref: spinnerRef\n  }) : null;\n  const style = multiline && height ? {\n    height,\n    maxHeight\n  } : null;\n  const handleExpandingResize = useCallback(height => {\n    setHeight(height);\n  }, []);\n  const resizer = multiline && isAfterInitial ? /*#__PURE__*/React.createElement(Resizer, {\n    contents: normalizedValue || placeholder,\n    currentHeight: height,\n    minimumLines: typeof multiline === 'number' ? multiline : 1,\n    onHeightChange: handleExpandingResize\n  }) : null;\n  const describedBy = [];\n\n  if (error) {\n    describedBy.push(`${id}Error`);\n  }\n\n  if (helpText) {\n    describedBy.push(helpTextID(id));\n  }\n\n  if (showCharacterCount) {\n    describedBy.push(`${id}-CharacterCounter`);\n  }\n\n  const labelledBy = [];\n\n  if (prefix) {\n    labelledBy.push(`${id}-Prefix`);\n  }\n\n  if (suffix) {\n    labelledBy.push(`${id}-Suffix`);\n  }\n\n  if (verticalContent) {\n    labelledBy.push(`${id}-VerticalContent`);\n  }\n\n  labelledBy.unshift(labelID(id));\n  const inputClassName = classNames(styles.Input, align && styles[variationName('Input-align', align)], suffix && styles['Input-suffixed'], clearButton && styles['Input-hasClearButton'], monospaced && styles.monospaced, suggestion && styles.suggestion);\n\n  const handleOnFocus = event => {\n    setFocus(true);\n\n    if (selectTextOnFocus && !suggestion) {\n      const input = multiline ? textAreaRef.current : inputRef.current;\n      input === null || input === void 0 ? void 0 : input.select();\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const handleOnBlur = event => {\n    setFocus(false);\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const input = /*#__PURE__*/createElement(multiline ? 'textarea' : 'input', {\n    name,\n    id,\n    disabled,\n    readOnly,\n    role,\n    autoFocus,\n    value: normalizedValue,\n    placeholder,\n    style,\n    autoComplete,\n    className: inputClassName,\n    ref: multiline ? textAreaRef : inputRef,\n    min,\n    max,\n    step,\n    minLength,\n    maxLength,\n    spellCheck,\n    pattern,\n    inputMode,\n    type: inputType,\n    rows: getRows(multiline),\n    'aria-describedby': describedBy.length ? describedBy.join(' ') : undefined,\n    'aria-labelledby': labelledBy.join(' '),\n    'aria-invalid': Boolean(error),\n    'aria-owns': ariaOwns,\n    'aria-activedescendant': ariaActiveDescendant,\n    'aria-autocomplete': ariaAutocomplete,\n    'aria-controls': ariaControls,\n    'aria-expanded': ariaExpanded,\n    'aria-required': requiredIndicator,\n    ...normalizeAriaMultiline(multiline),\n    onFocus: handleOnFocus,\n    onBlur: handleOnBlur,\n    onClick: handleClickChild,\n    onKeyPress: handleKeyPress,\n    onChange: !suggestion ? handleChange : undefined,\n    onInput: suggestion ? handleChange : undefined\n  });\n  const inputWithVerticalContentMarkup = verticalContent ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.VerticalContent,\n    id: `${id}-VerticalContent`,\n    ref: verticalContentRef,\n    onClick: handleClickChild\n  }, verticalContent, input) : null;\n  const inputMarkup = verticalContent ? inputWithVerticalContentMarkup : input;\n  const backdropMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(styles.Backdrop, connectedLeft && styles['Backdrop-connectedLeft'], connectedRight && styles['Backdrop-connectedRight'])\n  });\n  return /*#__PURE__*/React.createElement(Labelled, {\n    label: label,\n    id: id,\n    error: error,\n    action: labelAction,\n    labelHidden: labelHidden,\n    helpText: helpText,\n    requiredIndicator: requiredIndicator\n  }, /*#__PURE__*/React.createElement(Connected, {\n    left: connectedLeft,\n    right: connectedRight\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    onClick: handleClick\n  }, prefixMarkup, inputMarkup, suffixMarkup, characterCountMarkup, clearButtonMarkup, spinnerMarkup, backdropMarkup, resizer)));\n\n  function handleChange(event) {\n    onChange && onChange(event.currentTarget.value, id);\n  }\n\n  function handleClick(event) {\n    var _inputRef$current, _inputRef$current3;\n\n    const {\n      target\n    } = event; // For TextFields used with Combobox, focus needs to be set again even\n    // if the TextField is already focused to trigger the logic to open the\n    // Combobox activator\n\n    const inputRefRole = inputRef === null || inputRef === void 0 ? void 0 : (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.getAttribute('role');\n\n    if (target === inputRef.current && inputRefRole === 'combobox') {\n      var _inputRef$current2;\n\n      (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.focus();\n      handleOnFocus(event);\n      return;\n    }\n\n    if (isPrefixOrSuffix(target) || isVerticalContent(target) || isInput(target) || isSpinner(target) || focus) {\n      return;\n    }\n\n    (_inputRef$current3 = inputRef.current) === null || _inputRef$current3 === void 0 ? void 0 : _inputRef$current3.focus();\n  }\n\n  function handleClickChild(event) {\n    if (!isSpinner(event.target) && !isInput(event.target)) {\n      event.stopPropagation();\n    }\n\n    if (isPrefixOrSuffix(event.target) || isVerticalContent(event.target) || isInput(event.target) || focus) {\n      return;\n    }\n\n    setFocus(true);\n  }\n\n  function handleClearButtonPress() {\n    onClearButtonClick && onClearButtonClick(id);\n  }\n\n  function handleKeyPress(event) {\n    const {\n      key,\n      which\n    } = event;\n    const numbersSpec = /[\\d.eE+-]$/;\n\n    if (type !== 'number' || which === Key.Enter || numbersSpec.test(key)) {\n      return;\n    }\n\n    event.preventDefault();\n  }\n\n  function isInput(target) {\n    return target instanceof HTMLElement && inputRef.current && (inputRef.current.contains(target) || inputRef.current.contains(document.activeElement));\n  }\n\n  function isPrefixOrSuffix(target) {\n    return target instanceof Element && (prefixRef.current && prefixRef.current.contains(target) || suffixRef.current && suffixRef.current.contains(target));\n  }\n\n  function isSpinner(target) {\n    return target instanceof Element && spinnerRef.current && spinnerRef.current.contains(target);\n  }\n\n  function isVerticalContent(target) {\n    return target instanceof Element && verticalContentRef.current && (verticalContentRef.current.contains(target) || verticalContentRef.current.contains(document.activeElement));\n  }\n}\n\nfunction getRows(multiline) {\n  if (!multiline) return undefined;\n  return typeof multiline === 'number' ? multiline : 1;\n}\n\nfunction normalizeAriaMultiline(multiline) {\n  if (!multiline) return undefined;\n  return Boolean(multiline) || multiline > 0 ? {\n    'aria-multiline': true\n  } : undefined;\n}\n\nexport { TextField };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}