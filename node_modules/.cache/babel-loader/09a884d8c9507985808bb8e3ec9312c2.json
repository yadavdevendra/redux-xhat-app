{"ast":null,"code":"import React, { useCallback, useMemo } from 'react';\nimport { isSection } from '../../utilities/options.js';\nimport styles from './Autocomplete.scss.js';\nimport { MappedOption } from './components/MappedOption/MappedOption.js';\nimport { Listbox, AutoSelection } from '../Listbox/Listbox.js';\nimport { Combobox } from '../Combobox/Combobox.js';\nimport { MappedAction } from './components/MappedAction/MappedAction.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\n\n// TypeScript can't generate types that correctly infer the typing of\n// subcomponents so explicitly state the subcomponents in the type definition.\n// Letting this be implicit works in this project but fails in projects that use\n// generated *.d.ts files.\nconst Autocomplete = function Autocomplete(_ref) {\n  let {\n    options,\n    selected,\n    textField,\n    preferredPosition,\n    listTitle,\n    allowMultiple,\n    loading,\n    actionBefore,\n    willLoadMoreResults,\n    emptyState,\n    onSelect,\n    onLoadMoreResults\n  } = _ref;\n  const i18n = useI18n();\n  const buildMappedOptionFromOption = useCallback(options => {\n    return options.map(option => /*#__PURE__*/React.createElement(MappedOption, Object.assign({\n      key: option.id || option.value\n    }, option, {\n      selected: selected.includes(option.value),\n      singleSelection: !allowMultiple\n    })));\n  }, [selected, allowMultiple]);\n  const optionsMarkup = useMemo(() => {\n    const conditionalOptions = loading && !willLoadMoreResults ? [] : options;\n    if (isSection(conditionalOptions)) {\n      const noOptionsAvailable = conditionalOptions.every(_ref2 => {\n        let {\n          options\n        } = _ref2;\n        return options.length === 0;\n      });\n      if (noOptionsAvailable) {\n        return null;\n      }\n      const optionsMarkup = conditionalOptions.map(_ref3 => {\n        let {\n          options,\n          title\n        } = _ref3;\n        if (options.length === 0) {\n          return null;\n        }\n        const optionMarkup = buildMappedOptionFromOption(options);\n        return /*#__PURE__*/React.createElement(Listbox.Section, {\n          divider: false,\n          title: /*#__PURE__*/React.createElement(Listbox.Header, null, title),\n          key: title\n        }, optionMarkup);\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.SectionWrapper\n      }, optionsMarkup);\n    }\n    const optionList = conditionalOptions.length > 0 ? buildMappedOptionFromOption(conditionalOptions) : null;\n    if (listTitle) {\n      return /*#__PURE__*/React.createElement(Listbox.Section, {\n        divider: false,\n        title: /*#__PURE__*/React.createElement(Listbox.Header, null, listTitle)\n      }, optionList);\n    }\n    return optionList;\n  }, [listTitle, loading, options, willLoadMoreResults, buildMappedOptionFromOption]);\n  const loadingMarkup = loading ? /*#__PURE__*/React.createElement(Listbox.Loading, {\n    accessibilityLabel: i18n.translate('Polaris.Autocomplete.spinnerAccessibilityLabel')\n  }) : null;\n  const updateSelection = useCallback(newSelection => {\n    if (actionBefore && newSelection === actionBefore.content) {\n      actionBefore.onAction && actionBefore.onAction();\n      return;\n    }\n    if (allowMultiple) {\n      if (selected.includes(newSelection)) {\n        onSelect(selected.filter(option => option !== newSelection));\n      } else {\n        onSelect([...selected, newSelection]);\n      }\n    } else {\n      onSelect([newSelection]);\n    }\n  }, [allowMultiple, onSelect, selected, actionBefore]);\n  const actionMarkup = actionBefore && /*#__PURE__*/React.createElement(MappedAction, actionBefore);\n  const emptyStateMarkup = emptyState && options.length < 1 && !loading && /*#__PURE__*/React.createElement(\"div\", {\n    role: \"status\"\n  }, emptyState);\n  const autoSelection = actionBefore ? AutoSelection.First : undefined;\n  return /*#__PURE__*/React.createElement(Combobox, {\n    activator: textField,\n    allowMultiple: allowMultiple,\n    onScrolledToBottom: onLoadMoreResults,\n    preferredPosition: preferredPosition,\n    willLoadMoreOptions: willLoadMoreResults\n  }, actionMarkup || optionsMarkup || loadingMarkup || emptyStateMarkup ? /*#__PURE__*/React.createElement(Listbox, {\n    autoSelection: autoSelection,\n    onSelect: updateSelection\n  }, actionMarkup, optionsMarkup && (!loading || willLoadMoreResults) ? optionsMarkup : null, loadingMarkup, emptyStateMarkup) : null);\n};\nAutocomplete.TextField = Combobox.TextField;\nexport { Autocomplete };","map":{"version":3,"names":["React","useCallback","useMemo","isSection","styles","MappedOption","Listbox","AutoSelection","Combobox","MappedAction","useI18n","Autocomplete","options","selected","textField","preferredPosition","listTitle","allowMultiple","loading","actionBefore","willLoadMoreResults","emptyState","onSelect","onLoadMoreResults","i18n","buildMappedOptionFromOption","map","option","createElement","Object","assign","key","id","value","includes","singleSelection","optionsMarkup","conditionalOptions","noOptionsAvailable","every","length","title","optionMarkup","Section","divider","Header","className","SectionWrapper","optionList","loadingMarkup","Loading","accessibilityLabel","translate","updateSelection","newSelection","content","onAction","filter","actionMarkup","emptyStateMarkup","role","autoSelection","First","undefined","activator","onScrolledToBottom","willLoadMoreOptions","TextField"],"sources":["/home/cedcoss/Desktop/redux-xhat-app/node_modules/@shopify/polaris/build/esm/components/Autocomplete/Autocomplete.js"],"sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport { isSection } from '../../utilities/options.js';\nimport styles from './Autocomplete.scss.js';\nimport { MappedOption } from './components/MappedOption/MappedOption.js';\nimport { Listbox, AutoSelection } from '../Listbox/Listbox.js';\nimport { Combobox } from '../Combobox/Combobox.js';\nimport { MappedAction } from './components/MappedAction/MappedAction.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\n\n// TypeScript can't generate types that correctly infer the typing of\n// subcomponents so explicitly state the subcomponents in the type definition.\n// Letting this be implicit works in this project but fails in projects that use\n// generated *.d.ts files.\nconst Autocomplete = function Autocomplete({\n  options,\n  selected,\n  textField,\n  preferredPosition,\n  listTitle,\n  allowMultiple,\n  loading,\n  actionBefore,\n  willLoadMoreResults,\n  emptyState,\n  onSelect,\n  onLoadMoreResults\n}) {\n  const i18n = useI18n();\n  const buildMappedOptionFromOption = useCallback(options => {\n    return options.map(option => /*#__PURE__*/React.createElement(MappedOption, Object.assign({\n      key: option.id || option.value\n    }, option, {\n      selected: selected.includes(option.value),\n      singleSelection: !allowMultiple\n    })));\n  }, [selected, allowMultiple]);\n  const optionsMarkup = useMemo(() => {\n    const conditionalOptions = loading && !willLoadMoreResults ? [] : options;\n\n    if (isSection(conditionalOptions)) {\n      const noOptionsAvailable = conditionalOptions.every(({\n        options\n      }) => options.length === 0);\n\n      if (noOptionsAvailable) {\n        return null;\n      }\n\n      const optionsMarkup = conditionalOptions.map(({\n        options,\n        title\n      }) => {\n        if (options.length === 0) {\n          return null;\n        }\n\n        const optionMarkup = buildMappedOptionFromOption(options);\n        return /*#__PURE__*/React.createElement(Listbox.Section, {\n          divider: false,\n          title: /*#__PURE__*/React.createElement(Listbox.Header, null, title),\n          key: title\n        }, optionMarkup);\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.SectionWrapper\n      }, optionsMarkup);\n    }\n\n    const optionList = conditionalOptions.length > 0 ? buildMappedOptionFromOption(conditionalOptions) : null;\n\n    if (listTitle) {\n      return /*#__PURE__*/React.createElement(Listbox.Section, {\n        divider: false,\n        title: /*#__PURE__*/React.createElement(Listbox.Header, null, listTitle)\n      }, optionList);\n    }\n\n    return optionList;\n  }, [listTitle, loading, options, willLoadMoreResults, buildMappedOptionFromOption]);\n  const loadingMarkup = loading ? /*#__PURE__*/React.createElement(Listbox.Loading, {\n    accessibilityLabel: i18n.translate('Polaris.Autocomplete.spinnerAccessibilityLabel')\n  }) : null;\n  const updateSelection = useCallback(newSelection => {\n    if (actionBefore && newSelection === actionBefore.content) {\n      actionBefore.onAction && actionBefore.onAction();\n      return;\n    }\n\n    if (allowMultiple) {\n      if (selected.includes(newSelection)) {\n        onSelect(selected.filter(option => option !== newSelection));\n      } else {\n        onSelect([...selected, newSelection]);\n      }\n    } else {\n      onSelect([newSelection]);\n    }\n  }, [allowMultiple, onSelect, selected, actionBefore]);\n  const actionMarkup = actionBefore && /*#__PURE__*/React.createElement(MappedAction, actionBefore);\n  const emptyStateMarkup = emptyState && options.length < 1 && !loading && /*#__PURE__*/React.createElement(\"div\", {\n    role: \"status\"\n  }, emptyState);\n  const autoSelection = actionBefore ? AutoSelection.First : undefined;\n  return /*#__PURE__*/React.createElement(Combobox, {\n    activator: textField,\n    allowMultiple: allowMultiple,\n    onScrolledToBottom: onLoadMoreResults,\n    preferredPosition: preferredPosition,\n    willLoadMoreOptions: willLoadMoreResults\n  }, actionMarkup || optionsMarkup || loadingMarkup || emptyStateMarkup ? /*#__PURE__*/React.createElement(Listbox, {\n    autoSelection: autoSelection,\n    onSelect: updateSelection\n  }, actionMarkup, optionsMarkup && (!loading || willLoadMoreResults) ? optionsMarkup : null, loadingMarkup, emptyStateMarkup) : null);\n};\nAutocomplete.TextField = Combobox.TextField;\n\nexport { Autocomplete };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}