{"ast":null,"code":"import React, { PureComponent } from 'react';\nimport { debounce } from '../../utilities/debounce.js';\nimport { clamp } from '../../utilities/clamp.js';\nimport { classNames } from '../../utilities/css.js';\nimport { hsbToRgb } from '../../utilities/color-transformers.js';\nimport styles from './ColorPicker.scss.js';\nimport { AlphaPicker } from './components/AlphaPicker/AlphaPicker.js';\nimport { HuePicker } from './components/HuePicker/HuePicker.js';\nimport { Slidable } from './components/Slidable/Slidable.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nconst RESIZE_DEBOUNCE_TIME_MS = 200;\nclass ColorPicker extends PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      pickerSize: {\n        width: 0,\n        height: 0\n      }\n    };\n    this.colorNode = null;\n    this.handleResize = debounce(() => {\n      const {\n        colorNode\n      } = this;\n      if (colorNode == null) {\n        return;\n      }\n      this.setState({\n        pickerSize: {\n          width: colorNode.clientWidth,\n          height: colorNode.clientHeight\n        }\n      });\n    }, RESIZE_DEBOUNCE_TIME_MS, {\n      leading: true,\n      trailing: true,\n      maxWait: RESIZE_DEBOUNCE_TIME_MS\n    });\n    this.setColorNode = node => {\n      this.colorNode = node;\n    };\n    this.handleHueChange = hue => {\n      const {\n        color: {\n          brightness,\n          saturation,\n          alpha = 1\n        },\n        onChange\n      } = this.props;\n      onChange({\n        hue,\n        brightness,\n        saturation,\n        alpha\n      });\n    };\n    this.handleAlphaChange = alpha => {\n      const {\n        color: {\n          hue,\n          brightness,\n          saturation\n        },\n        onChange\n      } = this.props;\n      onChange({\n        hue,\n        brightness,\n        saturation,\n        alpha\n      });\n    };\n    this.handleDraggerMove = _ref => {\n      let {\n        x,\n        y\n      } = _ref;\n      const {\n        pickerSize\n      } = this.state;\n      const {\n        color: {\n          hue,\n          alpha = 1\n        },\n        onChange\n      } = this.props;\n      const saturation = clamp(x / pickerSize.width, 0, 1);\n      const brightness = clamp(1 - y / pickerSize.height, 0, 1);\n      onChange({\n        hue,\n        saturation,\n        brightness,\n        alpha\n      });\n    };\n    this.handlePickerDrag = event => {\n      // prevents external elements from being selected\n      event.preventDefault();\n    };\n  }\n  componentDidMount() {\n    const {\n      colorNode\n    } = this;\n    if (colorNode == null) {\n      return;\n    }\n    this.setState({\n      pickerSize: {\n        width: colorNode.clientWidth,\n        height: colorNode.clientHeight\n      }\n    });\n    if (process.env.NODE_ENV === 'development') {\n      setTimeout(() => {\n        this.setState({\n          pickerSize: {\n            width: colorNode.clientWidth,\n            height: colorNode.clientHeight\n          }\n        });\n      }, 0);\n    }\n  }\n  render() {\n    const {\n      id,\n      color,\n      allowAlpha,\n      fullWidth\n    } = this.props;\n    const {\n      hue,\n      saturation,\n      brightness,\n      alpha: providedAlpha\n    } = color;\n    const {\n      pickerSize\n    } = this.state;\n    const alpha = providedAlpha != null && allowAlpha ? providedAlpha : 1;\n    const {\n      red,\n      green,\n      blue\n    } = hsbToRgb({\n      hue,\n      saturation: 1,\n      brightness: 1\n    });\n    const colorString = `rgba(${red}, ${green}, ${blue}, ${alpha})`;\n    const draggerX = clamp(saturation * pickerSize.width, 0, pickerSize.width);\n    const draggerY = clamp(pickerSize.height - brightness * pickerSize.height, 0, pickerSize.height);\n    const alphaSliderMarkup = allowAlpha ? /*#__PURE__*/React.createElement(AlphaPicker, {\n      alpha: alpha,\n      color: color,\n      onChange: this.handleAlphaChange\n    }) : null;\n    const className = classNames(styles.ColorPicker, fullWidth && styles.fullWidth);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className,\n      id: id,\n      onMouseDown: this.handlePickerDrag\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.setColorNode,\n      className: styles.MainColor\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ColorLayer,\n      style: {\n        backgroundColor: colorString\n      }\n    }), /*#__PURE__*/React.createElement(Slidable, {\n      onChange: this.handleDraggerMove,\n      draggerX: draggerX,\n      draggerY: draggerY\n    })), /*#__PURE__*/React.createElement(HuePicker, {\n      hue: hue,\n      onChange: this.handleHueChange\n    }), alphaSliderMarkup, /*#__PURE__*/React.createElement(EventListener, {\n      event: \"resize\",\n      handler: this.handleResize\n    }));\n  }\n}\nexport { ColorPicker };","map":{"version":3,"names":["React","PureComponent","debounce","clamp","classNames","hsbToRgb","styles","AlphaPicker","HuePicker","Slidable","EventListener","RESIZE_DEBOUNCE_TIME_MS","ColorPicker","constructor","state","pickerSize","width","height","colorNode","handleResize","setState","clientWidth","clientHeight","leading","trailing","maxWait","setColorNode","node","handleHueChange","hue","color","brightness","saturation","alpha","onChange","props","handleAlphaChange","handleDraggerMove","x","y","handlePickerDrag","event","preventDefault","componentDidMount","process","env","NODE_ENV","setTimeout","render","id","allowAlpha","fullWidth","providedAlpha","red","green","blue","colorString","draggerX","draggerY","alphaSliderMarkup","createElement","className","onMouseDown","ref","MainColor","ColorLayer","style","backgroundColor","handler"],"sources":["/home/cedcoss/Desktop/redux-xhat-app/node_modules/@shopify/polaris/build/esm/components/ColorPicker/ColorPicker.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport { debounce } from '../../utilities/debounce.js';\nimport { clamp } from '../../utilities/clamp.js';\nimport { classNames } from '../../utilities/css.js';\nimport { hsbToRgb } from '../../utilities/color-transformers.js';\nimport styles from './ColorPicker.scss.js';\nimport { AlphaPicker } from './components/AlphaPicker/AlphaPicker.js';\nimport { HuePicker } from './components/HuePicker/HuePicker.js';\nimport { Slidable } from './components/Slidable/Slidable.js';\nimport { EventListener } from '../EventListener/EventListener.js';\n\nconst RESIZE_DEBOUNCE_TIME_MS = 200;\nclass ColorPicker extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pickerSize: {\n        width: 0,\n        height: 0\n      }\n    };\n    this.colorNode = null;\n    this.handleResize = debounce(() => {\n      const {\n        colorNode\n      } = this;\n\n      if (colorNode == null) {\n        return;\n      }\n\n      this.setState({\n        pickerSize: {\n          width: colorNode.clientWidth,\n          height: colorNode.clientHeight\n        }\n      });\n    }, RESIZE_DEBOUNCE_TIME_MS, {\n      leading: true,\n      trailing: true,\n      maxWait: RESIZE_DEBOUNCE_TIME_MS\n    });\n\n    this.setColorNode = node => {\n      this.colorNode = node;\n    };\n\n    this.handleHueChange = hue => {\n      const {\n        color: {\n          brightness,\n          saturation,\n          alpha = 1\n        },\n        onChange\n      } = this.props;\n      onChange({\n        hue,\n        brightness,\n        saturation,\n        alpha\n      });\n    };\n\n    this.handleAlphaChange = alpha => {\n      const {\n        color: {\n          hue,\n          brightness,\n          saturation\n        },\n        onChange\n      } = this.props;\n      onChange({\n        hue,\n        brightness,\n        saturation,\n        alpha\n      });\n    };\n\n    this.handleDraggerMove = ({\n      x,\n      y\n    }) => {\n      const {\n        pickerSize\n      } = this.state;\n      const {\n        color: {\n          hue,\n          alpha = 1\n        },\n        onChange\n      } = this.props;\n      const saturation = clamp(x / pickerSize.width, 0, 1);\n      const brightness = clamp(1 - y / pickerSize.height, 0, 1);\n      onChange({\n        hue,\n        saturation,\n        brightness,\n        alpha\n      });\n    };\n\n    this.handlePickerDrag = event => {\n      // prevents external elements from being selected\n      event.preventDefault();\n    };\n  }\n\n  componentDidMount() {\n    const {\n      colorNode\n    } = this;\n\n    if (colorNode == null) {\n      return;\n    }\n\n    this.setState({\n      pickerSize: {\n        width: colorNode.clientWidth,\n        height: colorNode.clientHeight\n      }\n    });\n\n    if (process.env.NODE_ENV === 'development') {\n      setTimeout(() => {\n        this.setState({\n          pickerSize: {\n            width: colorNode.clientWidth,\n            height: colorNode.clientHeight\n          }\n        });\n      }, 0);\n    }\n  }\n\n  render() {\n    const {\n      id,\n      color,\n      allowAlpha,\n      fullWidth\n    } = this.props;\n    const {\n      hue,\n      saturation,\n      brightness,\n      alpha: providedAlpha\n    } = color;\n    const {\n      pickerSize\n    } = this.state;\n    const alpha = providedAlpha != null && allowAlpha ? providedAlpha : 1;\n    const {\n      red,\n      green,\n      blue\n    } = hsbToRgb({\n      hue,\n      saturation: 1,\n      brightness: 1\n    });\n    const colorString = `rgba(${red}, ${green}, ${blue}, ${alpha})`;\n    const draggerX = clamp(saturation * pickerSize.width, 0, pickerSize.width);\n    const draggerY = clamp(pickerSize.height - brightness * pickerSize.height, 0, pickerSize.height);\n    const alphaSliderMarkup = allowAlpha ? /*#__PURE__*/React.createElement(AlphaPicker, {\n      alpha: alpha,\n      color: color,\n      onChange: this.handleAlphaChange\n    }) : null;\n    const className = classNames(styles.ColorPicker, fullWidth && styles.fullWidth);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className,\n      id: id,\n      onMouseDown: this.handlePickerDrag\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.setColorNode,\n      className: styles.MainColor\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ColorLayer,\n      style: {\n        backgroundColor: colorString\n      }\n    }), /*#__PURE__*/React.createElement(Slidable, {\n      onChange: this.handleDraggerMove,\n      draggerX: draggerX,\n      draggerY: draggerY\n    })), /*#__PURE__*/React.createElement(HuePicker, {\n      hue: hue,\n      onChange: this.handleHueChange\n    }), alphaSliderMarkup, /*#__PURE__*/React.createElement(EventListener, {\n      event: \"resize\",\n      handler: this.handleResize\n    }));\n  }\n\n}\n\nexport { ColorPicker };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}