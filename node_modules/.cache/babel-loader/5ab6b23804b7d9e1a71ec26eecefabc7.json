{"ast":null,"code":"import React, { PureComponent, createRef } from 'react';\nimport { Transition, CSSTransition } from 'react-transition-group';\nimport { motion } from '@shopify/polaris-tokens';\nimport { debounce } from '../../utilities/debounce.js';\nimport { classNames } from '../../utilities/css.js';\nimport { clamp } from '../../utilities/clamp.js';\nimport styles from './BulkActions.scss.js';\nimport { BulkActionMenu } from './components/BulkActionMenu/BulkActionMenu.js';\nimport { CheckableButton } from '../CheckableButton/CheckableButton.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Button } from '../Button/Button.js';\nimport { Popover } from '../Popover/Popover.js';\nimport { BulkActionButton } from './components/BulkActionButton/BulkActionButton.js';\nimport { ActionList } from '../ActionList/ActionList.js';\nimport { ButtonGroup } from '../ButtonGroup/ButtonGroup.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nconst MAX_PROMOTED_ACTIONS = 2;\nconst slideClasses = {\n  appear: classNames(styles.Slide, styles['Slide-appear']),\n  appearActive: classNames(styles.Slide, styles['Slide-appearing']),\n  enter: classNames(styles.Slide, styles['Slide-enter']),\n  enterActive: classNames(styles.Slide, styles['Slide-entering']),\n  exit: classNames(styles.Slide, styles['Slide-exit'])\n};\nclass BulkActionsInner extends PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      smallScreenPopoverVisible: false,\n      largeScreenPopoverVisible: false,\n      containerWidth: 0,\n      measuring: true\n    };\n    this.containerNode = null;\n    this.largeScreenButtonsNode = null;\n    this.moreActionsNode = null;\n    this.checkableWrapperNode = /*#__PURE__*/createRef();\n    this.largeScreenGroupNode = /*#__PURE__*/createRef();\n    this.smallScreenGroupNode = /*#__PURE__*/createRef();\n    this.promotedActionsWidths = [];\n    this.bulkActionsWidth = 0;\n    this.addedMoreActionsWidthForMeasuring = 0;\n    this.handleResize = debounce(() => {\n      const {\n        smallScreenPopoverVisible,\n        largeScreenPopoverVisible\n      } = this.state;\n      if (this.containerNode) {\n        const containerWidth = this.containerNode.getBoundingClientRect().width;\n        if (containerWidth > 0) {\n          this.setState({\n            containerWidth\n          });\n        }\n      }\n      if (smallScreenPopoverVisible || largeScreenPopoverVisible) {\n        this.setState({\n          smallScreenPopoverVisible: false,\n          largeScreenPopoverVisible: false\n        });\n      }\n    }, 50, {\n      trailing: true\n    });\n    this.setLargeScreenButtonsNode = node => {\n      this.largeScreenButtonsNode = node;\n    };\n    this.setContainerNode = node => {\n      this.containerNode = node;\n    };\n    this.setMoreActionsNode = node => {\n      this.moreActionsNode = node;\n    };\n    this.setSelectMode = val => {\n      const {\n        onSelectModeToggle\n      } = this.props;\n      if (onSelectModeToggle) {\n        onSelectModeToggle(val);\n      }\n    };\n    this.toggleSmallScreenPopover = () => {\n      if (this.props.onMoreActionPopoverToggle) {\n        this.props.onMoreActionPopoverToggle(this.state.smallScreenPopoverVisible);\n      }\n      this.setState(_ref => {\n        let {\n          smallScreenPopoverVisible\n        } = _ref;\n        return {\n          smallScreenPopoverVisible: !smallScreenPopoverVisible\n        };\n      });\n    };\n    this.toggleLargeScreenPopover = () => {\n      if (this.props.onMoreActionPopoverToggle) {\n        this.props.onMoreActionPopoverToggle(this.state.largeScreenPopoverVisible);\n      }\n      this.setState(_ref2 => {\n        let {\n          largeScreenPopoverVisible\n        } = _ref2;\n        return {\n          largeScreenPopoverVisible: !largeScreenPopoverVisible\n        };\n      });\n    };\n    this.handleMeasurement = width => {\n      const {\n        measuring\n      } = this.state;\n      if (measuring) {\n        this.promotedActionsWidths.push(width);\n      }\n    };\n  }\n  numberOfPromotedActionsToRender() {\n    const {\n      promotedActions\n    } = this.props;\n    const {\n      containerWidth,\n      measuring\n    } = this.state;\n    if (!promotedActions) {\n      return 0;\n    }\n    if (containerWidth >= this.bulkActionsWidth || measuring) {\n      return promotedActions.length;\n    }\n    let sufficientSpace = false;\n    let counter = promotedActions.length - 1;\n    let totalWidth = 0;\n    while (!sufficientSpace && counter >= 0) {\n      totalWidth += this.promotedActionsWidths[counter];\n      const widthWithRemovedAction = this.bulkActionsWidth - totalWidth + this.addedMoreActionsWidthForMeasuring;\n      if (containerWidth >= widthWithRemovedAction) {\n        sufficientSpace = true;\n      } else {\n        counter--;\n      }\n    }\n    return clamp(counter, 0, promotedActions.length);\n  }\n  hasActions() {\n    const {\n      promotedActions,\n      actions\n    } = this.props;\n    return Boolean(promotedActions && promotedActions.length > 0 || actions && actions.length > 0);\n  }\n  actionSections() {\n    const {\n      actions\n    } = this.props;\n    if (!actions || actions.length === 0) {\n      return;\n    }\n    if (instanceOfBulkActionListSectionArray(actions)) {\n      return actions;\n    }\n    if (instanceOfBulkActionArray(actions)) {\n      return [{\n        items: actions\n      }];\n    }\n  }\n  rolledInPromotedActions() {\n    const {\n      promotedActions\n    } = this.props;\n    const numberOfPromotedActionsToRender = this.numberOfPromotedActionsToRender();\n    if (!promotedActions || promotedActions.length === 0 || numberOfPromotedActionsToRender >= promotedActions.length) {\n      return [];\n    }\n    const rolledInPromotedActions = promotedActions.map(action => {\n      if (instanceOfMenuGroupDescriptor(action)) {\n        return {\n          items: [...action.actions]\n        };\n      }\n      return {\n        items: [action]\n      };\n    });\n    return rolledInPromotedActions.slice(numberOfPromotedActionsToRender);\n  } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n  componentDidMount() {\n    const {\n      actions,\n      promotedActions\n    } = this.props;\n    if (promotedActions && !actions && this.moreActionsNode) {\n      this.addedMoreActionsWidthForMeasuring = this.moreActionsNode.getBoundingClientRect().width;\n    }\n    this.bulkActionsWidth = this.largeScreenButtonsNode ? this.largeScreenButtonsNode.getBoundingClientRect().width - this.addedMoreActionsWidthForMeasuring : 0;\n    if (this.containerNode) {\n      this.setState({\n        containerWidth: this.containerNode.getBoundingClientRect().width,\n        measuring: false\n      });\n    }\n  } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n  render() {\n    const {\n      selectMode,\n      accessibilityLabel,\n      label = '',\n      onToggleAll,\n      selected,\n      smallScreen,\n      disabled,\n      promotedActions,\n      paginatedSelectAllText = null,\n      paginatedSelectAllAction,\n      i18n\n    } = this.props;\n    const actionSections = this.actionSections();\n    if (promotedActions && promotedActions.length > MAX_PROMOTED_ACTIONS && process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(i18n.translate('Polaris.ResourceList.BulkActions.warningMessage', {\n        maxPromotedActions: MAX_PROMOTED_ACTIONS\n      }));\n    }\n    const {\n      smallScreenPopoverVisible,\n      largeScreenPopoverVisible,\n      measuring\n    } = this.state;\n    const paginatedSelectAllActionMarkup = paginatedSelectAllAction ? /*#__PURE__*/React.createElement(Button, {\n      onClick: paginatedSelectAllAction.onAction,\n      plain: true,\n      disabled: disabled\n    }, paginatedSelectAllAction.content) : null;\n    const paginatedSelectAllTextMarkup = paginatedSelectAllText && paginatedSelectAllAction ? /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-live\": \"polite\"\n    }, paginatedSelectAllText) : paginatedSelectAllText;\n    const paginatedSelectAllMarkup = paginatedSelectAllActionMarkup || paginatedSelectAllTextMarkup ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.PaginatedSelectAll\n    }, paginatedSelectAllTextMarkup, \" \", paginatedSelectAllActionMarkup) : null;\n    const cancelButton = /*#__PURE__*/React.createElement(Button, {\n      onClick: this.setSelectMode.bind(this, false),\n      disabled: disabled\n    }, i18n.translate('Polaris.Common.cancel'));\n    const numberOfPromotedActionsToRender = this.numberOfPromotedActionsToRender();\n    const allActionsPopover = this.hasActions() ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Popover,\n      ref: this.setMoreActionsNode\n    }, /*#__PURE__*/React.createElement(Popover, {\n      active: smallScreenPopoverVisible,\n      activator: /*#__PURE__*/React.createElement(BulkActionButton, {\n        disclosure: true,\n        onAction: this.toggleSmallScreenPopover,\n        content: i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel'),\n        disabled: disabled,\n        indicator: this.isNewBadgeInBadgeActions()\n      }),\n      onClose: this.toggleSmallScreenPopover\n    }, /*#__PURE__*/React.createElement(ActionList, {\n      items: promotedActions,\n      sections: actionSections,\n      onActionAnyItem: this.toggleSmallScreenPopover\n    }))) : null;\n    const promotedActionsMarkup = promotedActions && numberOfPromotedActionsToRender > 0 ? [...promotedActions].slice(0, numberOfPromotedActionsToRender).map((action, index) => {\n      if (instanceOfMenuGroupDescriptor(action)) {\n        return /*#__PURE__*/React.createElement(BulkActionMenu, Object.assign({\n          key: index\n        }, action, {\n          isNewBadgeInBadgeActions: this.isNewBadgeInBadgeActions()\n        }));\n      }\n      return /*#__PURE__*/React.createElement(BulkActionButton, Object.assign({\n        key: index,\n        disabled: disabled\n      }, action, {\n        handleMeasurement: this.handleMeasurement\n      }));\n    }) : null;\n    const rolledInPromotedActions = this.rolledInPromotedActions();\n    const activatorLabel = !promotedActions || promotedActions && numberOfPromotedActionsToRender === 0 && !measuring ? i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel') : i18n.translate('Polaris.ResourceList.BulkActions.moreActionsActivatorLabel');\n    let combinedActions = [];\n    if (actionSections && rolledInPromotedActions.length > 0) {\n      combinedActions = [...rolledInPromotedActions, ...actionSections];\n    } else if (actionSections) {\n      combinedActions = actionSections;\n    } else if (rolledInPromotedActions.length > 0) {\n      combinedActions = [...rolledInPromotedActions];\n    }\n    const actionsPopover = actionSections || rolledInPromotedActions.length > 0 || measuring ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Popover,\n      ref: this.setMoreActionsNode\n    }, /*#__PURE__*/React.createElement(Popover, {\n      active: largeScreenPopoverVisible,\n      activator: /*#__PURE__*/React.createElement(BulkActionButton, {\n        disclosure: true,\n        onAction: this.toggleLargeScreenPopover,\n        content: activatorLabel,\n        disabled: disabled,\n        indicator: this.isNewBadgeInBadgeActions()\n      }),\n      onClose: this.toggleLargeScreenPopover\n    }, /*#__PURE__*/React.createElement(ActionList, {\n      sections: combinedActions,\n      onActionAnyItem: this.toggleLargeScreenPopover\n    }))) : null;\n    const checkableButtonProps = {\n      accessibilityLabel,\n      label,\n      selected,\n      selectMode,\n      onToggleAll,\n      measuring,\n      disabled\n    };\n    const smallScreenGroup = smallScreen ? /*#__PURE__*/React.createElement(Transition, {\n      timeout: 0,\n      in: selectMode,\n      key: \"smallGroup\",\n      nodeRef: this.smallScreenGroupNode\n    }, status => {\n      const smallScreenGroupClassName = classNames(styles.Group, styles['Group-smallScreen'], styles[`Group-${status}`]);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: smallScreenGroupClassName,\n        ref: this.smallScreenGroupNode\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.ButtonGroupWrapper\n      }, /*#__PURE__*/React.createElement(ButtonGroup, {\n        segmented: true\n      }, /*#__PURE__*/React.createElement(CSSTransition, {\n        nodeRef: this.checkableWrapperNode,\n        in: selectMode,\n        timeout: parseInt(motion['duration-200'], 10),\n        classNames: slideClasses,\n        appear: !selectMode\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.CheckableContainer,\n        ref: this.checkableWrapperNode\n      }, /*#__PURE__*/React.createElement(CheckableButton, Object.assign({}, checkableButtonProps, {\n        smallScreen: true\n      })))), allActionsPopover, cancelButton)), paginatedSelectAllMarkup);\n    }) : null;\n    const largeGroupContent = promotedActionsMarkup || actionsPopover ? /*#__PURE__*/React.createElement(ButtonGroup, {\n      segmented: true\n    }, /*#__PURE__*/React.createElement(CheckableButton, checkableButtonProps), promotedActionsMarkup, actionsPopover) : /*#__PURE__*/React.createElement(CheckableButton, checkableButtonProps);\n    const largeScreenGroup = smallScreen ? null : /*#__PURE__*/React.createElement(Transition, {\n      timeout: 0,\n      in: selectMode,\n      key: \"largeGroup\",\n      nodeRef: this.largeScreenGroupNode\n    }, status => {\n      const largeScreenGroupClassName = classNames(styles.Group, styles['Group-largeScreen'], !measuring && styles[`Group-${status}`], measuring && styles['Group-measuring']);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: largeScreenGroupClassName,\n        ref: this.largeScreenGroupNode\n      }, /*#__PURE__*/React.createElement(EventListener, {\n        event: \"resize\",\n        handler: this.handleResize\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.ButtonGroupWrapper,\n        ref: this.setLargeScreenButtonsNode\n      }, largeGroupContent), paginatedSelectAllMarkup);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.setContainerNode\n    }, smallScreenGroup, largeScreenGroup);\n  }\n  isNewBadgeInBadgeActions() {\n    const actions = this.actionSections();\n    if (!actions) return false;\n    for (const action of actions) {\n      for (const item of action.items) {\n        var _item$badge;\n        if (((_item$badge = item.badge) === null || _item$badge === void 0 ? void 0 : _item$badge.status) === 'new') return true;\n      }\n    }\n    return false;\n  }\n}\nfunction instanceOfBulkActionListSectionArray(actions) {\n  const validList = actions.filter(action => {\n    return action.items;\n  });\n  return actions.length === validList.length;\n}\nfunction instanceOfBulkActionArray(actions) {\n  const validList = actions.filter(action => {\n    return !action.items;\n  });\n  return actions.length === validList.length;\n}\nfunction instanceOfMenuGroupDescriptor(action) {\n  return 'title' in action;\n}\nfunction BulkActions(props) {\n  const i18n = useI18n();\n  return /*#__PURE__*/React.createElement(BulkActionsInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\nexport { BulkActions };","map":{"version":3,"names":["React","PureComponent","createRef","Transition","CSSTransition","motion","debounce","classNames","clamp","styles","BulkActionMenu","CheckableButton","useI18n","Button","Popover","BulkActionButton","ActionList","ButtonGroup","EventListener","MAX_PROMOTED_ACTIONS","slideClasses","appear","Slide","appearActive","enter","enterActive","exit","BulkActionsInner","constructor","state","smallScreenPopoverVisible","largeScreenPopoverVisible","containerWidth","measuring","containerNode","largeScreenButtonsNode","moreActionsNode","checkableWrapperNode","largeScreenGroupNode","smallScreenGroupNode","promotedActionsWidths","bulkActionsWidth","addedMoreActionsWidthForMeasuring","handleResize","getBoundingClientRect","width","setState","trailing","setLargeScreenButtonsNode","node","setContainerNode","setMoreActionsNode","setSelectMode","val","onSelectModeToggle","props","toggleSmallScreenPopover","onMoreActionPopoverToggle","toggleLargeScreenPopover","handleMeasurement","push","numberOfPromotedActionsToRender","promotedActions","length","sufficientSpace","counter","totalWidth","widthWithRemovedAction","hasActions","actions","Boolean","actionSections","instanceOfBulkActionListSectionArray","instanceOfBulkActionArray","items","rolledInPromotedActions","map","action","instanceOfMenuGroupDescriptor","slice","componentDidMount","render","selectMode","accessibilityLabel","label","onToggleAll","selected","smallScreen","disabled","paginatedSelectAllText","paginatedSelectAllAction","i18n","process","env","NODE_ENV","console","warn","translate","maxPromotedActions","paginatedSelectAllActionMarkup","createElement","onClick","onAction","plain","content","paginatedSelectAllTextMarkup","paginatedSelectAllMarkup","className","PaginatedSelectAll","cancelButton","bind","allActionsPopover","ref","active","activator","disclosure","indicator","isNewBadgeInBadgeActions","onClose","sections","onActionAnyItem","promotedActionsMarkup","index","Object","assign","key","activatorLabel","combinedActions","actionsPopover","checkableButtonProps","smallScreenGroup","timeout","in","nodeRef","status","smallScreenGroupClassName","Group","ButtonGroupWrapper","segmented","parseInt","CheckableContainer","largeGroupContent","largeScreenGroup","largeScreenGroupClassName","event","handler","item","_item$badge","badge","validList","filter","BulkActions"],"sources":["/home/cedcoss/Desktop/redux-xhat-app/node_modules/@shopify/polaris/build/esm/components/BulkActions/BulkActions.js"],"sourcesContent":["import React, { PureComponent, createRef } from 'react';\nimport { Transition, CSSTransition } from 'react-transition-group';\nimport { motion } from '@shopify/polaris-tokens';\nimport { debounce } from '../../utilities/debounce.js';\nimport { classNames } from '../../utilities/css.js';\nimport { clamp } from '../../utilities/clamp.js';\nimport styles from './BulkActions.scss.js';\nimport { BulkActionMenu } from './components/BulkActionMenu/BulkActionMenu.js';\nimport { CheckableButton } from '../CheckableButton/CheckableButton.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Button } from '../Button/Button.js';\nimport { Popover } from '../Popover/Popover.js';\nimport { BulkActionButton } from './components/BulkActionButton/BulkActionButton.js';\nimport { ActionList } from '../ActionList/ActionList.js';\nimport { ButtonGroup } from '../ButtonGroup/ButtonGroup.js';\nimport { EventListener } from '../EventListener/EventListener.js';\n\nconst MAX_PROMOTED_ACTIONS = 2;\nconst slideClasses = {\n  appear: classNames(styles.Slide, styles['Slide-appear']),\n  appearActive: classNames(styles.Slide, styles['Slide-appearing']),\n  enter: classNames(styles.Slide, styles['Slide-enter']),\n  enterActive: classNames(styles.Slide, styles['Slide-entering']),\n  exit: classNames(styles.Slide, styles['Slide-exit'])\n};\n\nclass BulkActionsInner extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      smallScreenPopoverVisible: false,\n      largeScreenPopoverVisible: false,\n      containerWidth: 0,\n      measuring: true\n    };\n    this.containerNode = null;\n    this.largeScreenButtonsNode = null;\n    this.moreActionsNode = null;\n    this.checkableWrapperNode = /*#__PURE__*/createRef();\n    this.largeScreenGroupNode = /*#__PURE__*/createRef();\n    this.smallScreenGroupNode = /*#__PURE__*/createRef();\n    this.promotedActionsWidths = [];\n    this.bulkActionsWidth = 0;\n    this.addedMoreActionsWidthForMeasuring = 0;\n    this.handleResize = debounce(() => {\n      const {\n        smallScreenPopoverVisible,\n        largeScreenPopoverVisible\n      } = this.state;\n\n      if (this.containerNode) {\n        const containerWidth = this.containerNode.getBoundingClientRect().width;\n\n        if (containerWidth > 0) {\n          this.setState({\n            containerWidth\n          });\n        }\n      }\n\n      if (smallScreenPopoverVisible || largeScreenPopoverVisible) {\n        this.setState({\n          smallScreenPopoverVisible: false,\n          largeScreenPopoverVisible: false\n        });\n      }\n    }, 50, {\n      trailing: true\n    });\n\n    this.setLargeScreenButtonsNode = node => {\n      this.largeScreenButtonsNode = node;\n    };\n\n    this.setContainerNode = node => {\n      this.containerNode = node;\n    };\n\n    this.setMoreActionsNode = node => {\n      this.moreActionsNode = node;\n    };\n\n    this.setSelectMode = val => {\n      const {\n        onSelectModeToggle\n      } = this.props;\n\n      if (onSelectModeToggle) {\n        onSelectModeToggle(val);\n      }\n    };\n\n    this.toggleSmallScreenPopover = () => {\n      if (this.props.onMoreActionPopoverToggle) {\n        this.props.onMoreActionPopoverToggle(this.state.smallScreenPopoverVisible);\n      }\n\n      this.setState(({\n        smallScreenPopoverVisible\n      }) => ({\n        smallScreenPopoverVisible: !smallScreenPopoverVisible\n      }));\n    };\n\n    this.toggleLargeScreenPopover = () => {\n      if (this.props.onMoreActionPopoverToggle) {\n        this.props.onMoreActionPopoverToggle(this.state.largeScreenPopoverVisible);\n      }\n\n      this.setState(({\n        largeScreenPopoverVisible\n      }) => ({\n        largeScreenPopoverVisible: !largeScreenPopoverVisible\n      }));\n    };\n\n    this.handleMeasurement = width => {\n      const {\n        measuring\n      } = this.state;\n\n      if (measuring) {\n        this.promotedActionsWidths.push(width);\n      }\n    };\n  }\n\n  numberOfPromotedActionsToRender() {\n    const {\n      promotedActions\n    } = this.props;\n    const {\n      containerWidth,\n      measuring\n    } = this.state;\n\n    if (!promotedActions) {\n      return 0;\n    }\n\n    if (containerWidth >= this.bulkActionsWidth || measuring) {\n      return promotedActions.length;\n    }\n\n    let sufficientSpace = false;\n    let counter = promotedActions.length - 1;\n    let totalWidth = 0;\n\n    while (!sufficientSpace && counter >= 0) {\n      totalWidth += this.promotedActionsWidths[counter];\n      const widthWithRemovedAction = this.bulkActionsWidth - totalWidth + this.addedMoreActionsWidthForMeasuring;\n\n      if (containerWidth >= widthWithRemovedAction) {\n        sufficientSpace = true;\n      } else {\n        counter--;\n      }\n    }\n\n    return clamp(counter, 0, promotedActions.length);\n  }\n\n  hasActions() {\n    const {\n      promotedActions,\n      actions\n    } = this.props;\n    return Boolean(promotedActions && promotedActions.length > 0 || actions && actions.length > 0);\n  }\n\n  actionSections() {\n    const {\n      actions\n    } = this.props;\n\n    if (!actions || actions.length === 0) {\n      return;\n    }\n\n    if (instanceOfBulkActionListSectionArray(actions)) {\n      return actions;\n    }\n\n    if (instanceOfBulkActionArray(actions)) {\n      return [{\n        items: actions\n      }];\n    }\n  }\n\n  rolledInPromotedActions() {\n    const {\n      promotedActions\n    } = this.props;\n    const numberOfPromotedActionsToRender = this.numberOfPromotedActionsToRender();\n\n    if (!promotedActions || promotedActions.length === 0 || numberOfPromotedActionsToRender >= promotedActions.length) {\n      return [];\n    }\n\n    const rolledInPromotedActions = promotedActions.map(action => {\n      if (instanceOfMenuGroupDescriptor(action)) {\n        return {\n          items: [...action.actions]\n        };\n      }\n\n      return {\n        items: [action]\n      };\n    });\n    return rolledInPromotedActions.slice(numberOfPromotedActionsToRender);\n  } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n\n  componentDidMount() {\n    const {\n      actions,\n      promotedActions\n    } = this.props;\n\n    if (promotedActions && !actions && this.moreActionsNode) {\n      this.addedMoreActionsWidthForMeasuring = this.moreActionsNode.getBoundingClientRect().width;\n    }\n\n    this.bulkActionsWidth = this.largeScreenButtonsNode ? this.largeScreenButtonsNode.getBoundingClientRect().width - this.addedMoreActionsWidthForMeasuring : 0;\n\n    if (this.containerNode) {\n      this.setState({\n        containerWidth: this.containerNode.getBoundingClientRect().width,\n        measuring: false\n      });\n    }\n  } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n\n  render() {\n    const {\n      selectMode,\n      accessibilityLabel,\n      label = '',\n      onToggleAll,\n      selected,\n      smallScreen,\n      disabled,\n      promotedActions,\n      paginatedSelectAllText = null,\n      paginatedSelectAllAction,\n      i18n\n    } = this.props;\n    const actionSections = this.actionSections();\n\n    if (promotedActions && promotedActions.length > MAX_PROMOTED_ACTIONS && process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(i18n.translate('Polaris.ResourceList.BulkActions.warningMessage', {\n        maxPromotedActions: MAX_PROMOTED_ACTIONS\n      }));\n    }\n\n    const {\n      smallScreenPopoverVisible,\n      largeScreenPopoverVisible,\n      measuring\n    } = this.state;\n    const paginatedSelectAllActionMarkup = paginatedSelectAllAction ? /*#__PURE__*/React.createElement(Button, {\n      onClick: paginatedSelectAllAction.onAction,\n      plain: true,\n      disabled: disabled\n    }, paginatedSelectAllAction.content) : null;\n    const paginatedSelectAllTextMarkup = paginatedSelectAllText && paginatedSelectAllAction ? /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-live\": \"polite\"\n    }, paginatedSelectAllText) : paginatedSelectAllText;\n    const paginatedSelectAllMarkup = paginatedSelectAllActionMarkup || paginatedSelectAllTextMarkup ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.PaginatedSelectAll\n    }, paginatedSelectAllTextMarkup, \" \", paginatedSelectAllActionMarkup) : null;\n    const cancelButton = /*#__PURE__*/React.createElement(Button, {\n      onClick: this.setSelectMode.bind(this, false),\n      disabled: disabled\n    }, i18n.translate('Polaris.Common.cancel'));\n    const numberOfPromotedActionsToRender = this.numberOfPromotedActionsToRender();\n    const allActionsPopover = this.hasActions() ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Popover,\n      ref: this.setMoreActionsNode\n    }, /*#__PURE__*/React.createElement(Popover, {\n      active: smallScreenPopoverVisible,\n      activator: /*#__PURE__*/React.createElement(BulkActionButton, {\n        disclosure: true,\n        onAction: this.toggleSmallScreenPopover,\n        content: i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel'),\n        disabled: disabled,\n        indicator: this.isNewBadgeInBadgeActions()\n      }),\n      onClose: this.toggleSmallScreenPopover\n    }, /*#__PURE__*/React.createElement(ActionList, {\n      items: promotedActions,\n      sections: actionSections,\n      onActionAnyItem: this.toggleSmallScreenPopover\n    }))) : null;\n    const promotedActionsMarkup = promotedActions && numberOfPromotedActionsToRender > 0 ? [...promotedActions].slice(0, numberOfPromotedActionsToRender).map((action, index) => {\n      if (instanceOfMenuGroupDescriptor(action)) {\n        return /*#__PURE__*/React.createElement(BulkActionMenu, Object.assign({\n          key: index\n        }, action, {\n          isNewBadgeInBadgeActions: this.isNewBadgeInBadgeActions()\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(BulkActionButton, Object.assign({\n        key: index,\n        disabled: disabled\n      }, action, {\n        handleMeasurement: this.handleMeasurement\n      }));\n    }) : null;\n    const rolledInPromotedActions = this.rolledInPromotedActions();\n    const activatorLabel = !promotedActions || promotedActions && numberOfPromotedActionsToRender === 0 && !measuring ? i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel') : i18n.translate('Polaris.ResourceList.BulkActions.moreActionsActivatorLabel');\n    let combinedActions = [];\n\n    if (actionSections && rolledInPromotedActions.length > 0) {\n      combinedActions = [...rolledInPromotedActions, ...actionSections];\n    } else if (actionSections) {\n      combinedActions = actionSections;\n    } else if (rolledInPromotedActions.length > 0) {\n      combinedActions = [...rolledInPromotedActions];\n    }\n\n    const actionsPopover = actionSections || rolledInPromotedActions.length > 0 || measuring ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Popover,\n      ref: this.setMoreActionsNode\n    }, /*#__PURE__*/React.createElement(Popover, {\n      active: largeScreenPopoverVisible,\n      activator: /*#__PURE__*/React.createElement(BulkActionButton, {\n        disclosure: true,\n        onAction: this.toggleLargeScreenPopover,\n        content: activatorLabel,\n        disabled: disabled,\n        indicator: this.isNewBadgeInBadgeActions()\n      }),\n      onClose: this.toggleLargeScreenPopover\n    }, /*#__PURE__*/React.createElement(ActionList, {\n      sections: combinedActions,\n      onActionAnyItem: this.toggleLargeScreenPopover\n    }))) : null;\n    const checkableButtonProps = {\n      accessibilityLabel,\n      label,\n      selected,\n      selectMode,\n      onToggleAll,\n      measuring,\n      disabled\n    };\n    const smallScreenGroup = smallScreen ? /*#__PURE__*/React.createElement(Transition, {\n      timeout: 0,\n      in: selectMode,\n      key: \"smallGroup\",\n      nodeRef: this.smallScreenGroupNode\n    }, status => {\n      const smallScreenGroupClassName = classNames(styles.Group, styles['Group-smallScreen'], styles[`Group-${status}`]);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: smallScreenGroupClassName,\n        ref: this.smallScreenGroupNode\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.ButtonGroupWrapper\n      }, /*#__PURE__*/React.createElement(ButtonGroup, {\n        segmented: true\n      }, /*#__PURE__*/React.createElement(CSSTransition, {\n        nodeRef: this.checkableWrapperNode,\n        in: selectMode,\n        timeout: parseInt(motion['duration-200'], 10),\n        classNames: slideClasses,\n        appear: !selectMode\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.CheckableContainer,\n        ref: this.checkableWrapperNode\n      }, /*#__PURE__*/React.createElement(CheckableButton, Object.assign({}, checkableButtonProps, {\n        smallScreen: true\n      })))), allActionsPopover, cancelButton)), paginatedSelectAllMarkup);\n    }) : null;\n    const largeGroupContent = promotedActionsMarkup || actionsPopover ? /*#__PURE__*/React.createElement(ButtonGroup, {\n      segmented: true\n    }, /*#__PURE__*/React.createElement(CheckableButton, checkableButtonProps), promotedActionsMarkup, actionsPopover) : /*#__PURE__*/React.createElement(CheckableButton, checkableButtonProps);\n    const largeScreenGroup = smallScreen ? null : /*#__PURE__*/React.createElement(Transition, {\n      timeout: 0,\n      in: selectMode,\n      key: \"largeGroup\",\n      nodeRef: this.largeScreenGroupNode\n    }, status => {\n      const largeScreenGroupClassName = classNames(styles.Group, styles['Group-largeScreen'], !measuring && styles[`Group-${status}`], measuring && styles['Group-measuring']);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: largeScreenGroupClassName,\n        ref: this.largeScreenGroupNode\n      }, /*#__PURE__*/React.createElement(EventListener, {\n        event: \"resize\",\n        handler: this.handleResize\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.ButtonGroupWrapper,\n        ref: this.setLargeScreenButtonsNode\n      }, largeGroupContent), paginatedSelectAllMarkup);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.setContainerNode\n    }, smallScreenGroup, largeScreenGroup);\n  }\n\n  isNewBadgeInBadgeActions() {\n    const actions = this.actionSections();\n    if (!actions) return false;\n\n    for (const action of actions) {\n      for (const item of action.items) {\n        var _item$badge;\n\n        if (((_item$badge = item.badge) === null || _item$badge === void 0 ? void 0 : _item$badge.status) === 'new') return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nfunction instanceOfBulkActionListSectionArray(actions) {\n  const validList = actions.filter(action => {\n    return action.items;\n  });\n  return actions.length === validList.length;\n}\n\nfunction instanceOfBulkActionArray(actions) {\n  const validList = actions.filter(action => {\n    return !action.items;\n  });\n  return actions.length === validList.length;\n}\n\nfunction instanceOfMenuGroupDescriptor(action) {\n  return 'title' in action;\n}\n\nfunction BulkActions(props) {\n  const i18n = useI18n();\n  return /*#__PURE__*/React.createElement(BulkActionsInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\n\nexport { BulkActions };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}