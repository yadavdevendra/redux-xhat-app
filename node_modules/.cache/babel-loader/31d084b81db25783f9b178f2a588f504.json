{"ast":null,"code":"import { tokensToRems } from './utilities.mjs';\nimport { breakpoints } from './token-groups/breakpoints.mjs';\nimport { depth } from './token-groups/depth.mjs';\nimport { font } from './token-groups/font.mjs';\nimport { legacy } from './token-groups/legacy.mjs';\nimport { colors } from './token-groups/colors.mjs';\nimport { motion } from './token-groups/motion.mjs';\nimport { shape } from './token-groups/shape.mjs';\nimport { spacing } from './token-groups/spacing.mjs';\nimport { zIndex } from './token-groups/zIndex.mjs';\nvar metadata = createMetadata({\n  breakpoints: tokensToRems(breakpoints),\n  colors: colors,\n  depth: depth,\n  font: tokensToRems(font),\n  legacy: tokensToRems(legacy),\n  motion: motion,\n  shape: tokensToRems(shape),\n  spacing: tokensToRems(spacing),\n  zIndex: zIndex\n});\n\n/**\n * Identity function that simply returns the provided tokens with metadata, but additionally\n * validates the input matches the `Metadata` type exactly and infers all members.\n */\nfunction createMetadata(metadata) {\n  return metadata;\n}\nexport { createMetadata, metadata };","map":{"version":3,"names":["tokensToRems","breakpoints","depth","font","legacy","colors","motion","shape","spacing","zIndex","metadata","createMetadata"],"sources":["/home/cedcoss/Desktop/redux-xhat-app/node_modules/@shopify/polaris-tokens/dist/esm/src/metadata.mjs"],"sourcesContent":["import { tokensToRems } from './utilities.mjs';\nimport { breakpoints } from './token-groups/breakpoints.mjs';\nimport { depth } from './token-groups/depth.mjs';\nimport { font } from './token-groups/font.mjs';\nimport { legacy } from './token-groups/legacy.mjs';\nimport { colors } from './token-groups/colors.mjs';\nimport { motion } from './token-groups/motion.mjs';\nimport { shape } from './token-groups/shape.mjs';\nimport { spacing } from './token-groups/spacing.mjs';\nimport { zIndex } from './token-groups/zIndex.mjs';\n\nvar metadata = createMetadata({\n  breakpoints: tokensToRems(breakpoints),\n  colors: colors,\n  depth: depth,\n  font: tokensToRems(font),\n  legacy: tokensToRems(legacy),\n  motion: motion,\n  shape: tokensToRems(shape),\n  spacing: tokensToRems(spacing),\n  zIndex: zIndex\n});\n\n/**\n * Identity function that simply returns the provided tokens with metadata, but additionally\n * validates the input matches the `Metadata` type exactly and infers all members.\n */\nfunction createMetadata(metadata) {\n  return metadata;\n}\n\nexport { createMetadata, metadata };\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,SAASC,KAAK,QAAQ,0BAA0B;AAChD,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,SAASC,MAAM,QAAQ,2BAA2B;AAClD,SAASC,MAAM,QAAQ,2BAA2B;AAClD,SAASC,MAAM,QAAQ,2BAA2B;AAClD,SAASC,KAAK,QAAQ,0BAA0B;AAChD,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,MAAM,QAAQ,2BAA2B;AAElD,IAAIC,QAAQ,GAAGC,cAAc,CAAC;EAC5BV,WAAW,EAAED,YAAY,CAACC,WAAW,CAAC;EACtCI,MAAM,EAAEA,MAAM;EACdH,KAAK,EAAEA,KAAK;EACZC,IAAI,EAAEH,YAAY,CAACG,IAAI,CAAC;EACxBC,MAAM,EAAEJ,YAAY,CAACI,MAAM,CAAC;EAC5BE,MAAM,EAAEA,MAAM;EACdC,KAAK,EAAEP,YAAY,CAACO,KAAK,CAAC;EAC1BC,OAAO,EAAER,YAAY,CAACQ,OAAO,CAAC;EAC9BC,MAAM,EAAEA;AACV,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA,SAASE,cAAc,CAACD,QAAQ,EAAE;EAChC,OAAOA,QAAQ;AACjB;AAEA,SAASC,cAAc,EAAED,QAAQ"},"metadata":{},"sourceType":"module"}