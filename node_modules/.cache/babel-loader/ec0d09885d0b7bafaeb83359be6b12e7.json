{"ast":null,"code":"/**\n * returns true if the given object is a promise\n */\nexport function isPromise(obj) {\n  if (obj && typeof obj.then === 'function') {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function sleep(time) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(res, time);\n  });\n}\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n/**\n * https://stackoverflow.com/a/8084248\n */\n\nexport function randomToken() {\n  return Math.random().toString(36).substring(2);\n}\nvar lastMs = 0;\nvar additional = 0;\n/**\n * returns the current time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\n\nexport function microSeconds() {\n  var ms = new Date().getTime();\n  if (ms === lastMs) {\n    additional++;\n    return ms * 1000 + additional;\n  } else {\n    lastMs = ms;\n    additional = 0;\n    return ms * 1000;\n  }\n}\n/**\n * copied from the 'detect-node' npm module\n * We cannot use the module directly because it causes problems with rollup\n * @link https://github.com/iliakan/detect-node/blob/master/index.js\n */\n\nexport var isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';","map":{"version":3,"names":["isPromise","obj","then","sleep","time","Promise","res","setTimeout","randomInt","min","max","Math","floor","random","randomToken","toString","substring","lastMs","additional","microSeconds","ms","Date","getTime","isNode","Object","prototype","call","process"],"sources":["/home/cedcoss/Desktop/redux-xhat-app/node_modules/broadcast-channel/dist/es/util.js"],"sourcesContent":["/**\n * returns true if the given object is a promise\n */\nexport function isPromise(obj) {\n  if (obj && typeof obj.then === 'function') {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function sleep(time) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(res, time);\n  });\n}\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n/**\n * https://stackoverflow.com/a/8084248\n */\n\nexport function randomToken() {\n  return Math.random().toString(36).substring(2);\n}\nvar lastMs = 0;\nvar additional = 0;\n/**\n * returns the current time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\n\nexport function microSeconds() {\n  var ms = new Date().getTime();\n\n  if (ms === lastMs) {\n    additional++;\n    return ms * 1000 + additional;\n  } else {\n    lastMs = ms;\n    additional = 0;\n    return ms * 1000;\n  }\n}\n/**\n * copied from the 'detect-node' npm module\n * We cannot use the module directly because it causes problems with rollup\n * @link https://github.com/iliakan/detect-node/blob/master/index.js\n */\n\nexport var isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,SAASA,SAAS,CAACC,GAAG,EAAE;EAC7B,IAAIA,GAAG,IAAI,OAAOA,GAAG,CAACC,IAAI,KAAK,UAAU,EAAE;IACzC,OAAO,IAAI;EACb,CAAC,MAAM;IACL,OAAO,KAAK;EACd;AACF;AACA,OAAO,SAASC,KAAK,CAACC,IAAI,EAAE;EAC1B,IAAI,CAACA,IAAI,EAAEA,IAAI,GAAG,CAAC;EACnB,OAAO,IAAIC,OAAO,CAAC,UAAUC,GAAG,EAAE;IAChC,OAAOC,UAAU,CAACD,GAAG,EAAEF,IAAI,CAAC;EAC9B,CAAC,CAAC;AACJ;AACA,OAAO,SAASI,SAAS,CAACC,GAAG,EAAEC,GAAG,EAAE;EAClC,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIH,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;AAC1D;AACA;AACA;AACA;;AAEA,OAAO,SAASK,WAAW,GAAG;EAC5B,OAAOH,IAAI,CAACE,MAAM,EAAE,CAACE,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC;AAChD;AACA,IAAIC,MAAM,GAAG,CAAC;AACd,IAAIC,UAAU,GAAG,CAAC;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,YAAY,GAAG;EAC7B,IAAIC,EAAE,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;EAE7B,IAAIF,EAAE,KAAKH,MAAM,EAAE;IACjBC,UAAU,EAAE;IACZ,OAAOE,EAAE,GAAG,IAAI,GAAGF,UAAU;EAC/B,CAAC,MAAM;IACLD,MAAM,GAAGG,EAAE;IACXF,UAAU,GAAG,CAAC;IACd,OAAOE,EAAE,GAAG,IAAI;EAClB;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIG,MAAM,GAAGC,MAAM,CAACC,SAAS,CAACV,QAAQ,CAACW,IAAI,CAAC,OAAOC,OAAO,KAAK,WAAW,GAAGA,OAAO,GAAG,CAAC,CAAC,KAAK,kBAAkB"},"metadata":{},"sourceType":"module"}