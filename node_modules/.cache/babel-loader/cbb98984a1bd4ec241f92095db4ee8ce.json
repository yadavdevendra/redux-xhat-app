{"ast":null,"code":"import React, { useRef, useEffect } from 'react';\nimport { classNames } from '../../../../utilities/css.js';\nimport { focusFirstFocusableNode, handleMouseUpByBlurring } from '../../../../utilities/focus.js';\nimport styles from '../../Tabs.scss.js';\nimport { UnstyledLink } from '../../../UnstyledLink/UnstyledLink.js';\nfunction Tab(_ref) {\n  let {\n    id,\n    focused,\n    siblingTabHasFocus,\n    children,\n    onClick,\n    selected,\n    url,\n    panelID,\n    measuring,\n    accessibilityLabel\n  } = _ref;\n  const wasSelected = useRef(selected);\n  const panelFocused = useRef(false);\n  const node = useRef(null); // A tab can start selected when it is moved from the disclosure dropdown\n  // into the main list, so we need to send focus from the tab to the panel\n  // on mount and update\n\n  useEffect(() => {\n    if (measuring) {\n      return;\n    } // Because of timing issues with the render, we may still have the old,\n    // in-disclosure version of the tab that has focus. Check for this\n    // as a second indicator of focus\n\n    const itemHadFocus = focused || document.activeElement && document.activeElement.id === id; // If we just check for selected, the panel for the active tab will\n    // be focused on page load, which we don’t want\n\n    if (itemHadFocus && selected && panelID != null && !panelFocused.current) {\n      focusPanelID(panelID);\n      panelFocused.current = true;\n    }\n    if (selected && !wasSelected.current && panelID != null) {\n      focusPanelID(panelID);\n    } else if (focused && node.current != null) {\n      focusFirstFocusableNode(node.current);\n    }\n    wasSelected.current = selected;\n  }, [focused, id, measuring, panelID, selected]);\n  const handleClick = onClick && onClick.bind(null, id);\n  const className = classNames(styles.Tab, selected && styles['Tab-selected']);\n  let tabIndex;\n  if (selected && !siblingTabHasFocus && !measuring) {\n    tabIndex = 0;\n  } else if (focused && !measuring) {\n    tabIndex = 0;\n  } else {\n    tabIndex = -1;\n  }\n  const tabContainerClassNames = classNames(styles.TabContainer, selected && styles.Underline);\n  const markup = url ? /*#__PURE__*/React.createElement(UnstyledLink, {\n    id: id,\n    url: url,\n    role: \"tab\",\n    tabIndex: tabIndex,\n    onClick: handleClick,\n    className: className,\n    \"aria-selected\": selected,\n    \"aria-controls\": panelID,\n    \"aria-label\": accessibilityLabel,\n    onMouseUp: handleMouseUpByBlurring\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Title\n  }, children)) : /*#__PURE__*/React.createElement(\"button\", {\n    id: id,\n    role: \"tab\",\n    type: \"button\",\n    tabIndex: tabIndex,\n    className: className,\n    onClick: handleClick,\n    \"aria-selected\": selected,\n    \"aria-controls\": panelID,\n    \"aria-label\": accessibilityLabel,\n    onMouseUp: handleMouseUpByBlurring\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Title\n  }, children));\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: tabContainerClassNames,\n    ref: node,\n    role: \"presentation\"\n  }, markup);\n}\nfunction focusPanelID(panelID) {\n  const panel = document.getElementById(panelID);\n  if (panel) {\n    panel.focus({\n      preventScroll: true\n    });\n  }\n}\nexport { Tab };","map":{"version":3,"names":["React","useRef","useEffect","classNames","focusFirstFocusableNode","handleMouseUpByBlurring","styles","UnstyledLink","Tab","id","focused","siblingTabHasFocus","children","onClick","selected","url","panelID","measuring","accessibilityLabel","wasSelected","panelFocused","node","itemHadFocus","document","activeElement","current","focusPanelID","handleClick","bind","className","tabIndex","tabContainerClassNames","TabContainer","Underline","markup","createElement","role","onMouseUp","Title","type","ref","panel","getElementById","focus","preventScroll"],"sources":["/home/cedcoss/Desktop/redux-xhat-app/node_modules/@shopify/polaris/build/esm/components/Tabs/components/Tab/Tab.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { classNames } from '../../../../utilities/css.js';\nimport { focusFirstFocusableNode, handleMouseUpByBlurring } from '../../../../utilities/focus.js';\nimport styles from '../../Tabs.scss.js';\nimport { UnstyledLink } from '../../../UnstyledLink/UnstyledLink.js';\n\nfunction Tab({\n  id,\n  focused,\n  siblingTabHasFocus,\n  children,\n  onClick,\n  selected,\n  url,\n  panelID,\n  measuring,\n  accessibilityLabel\n}) {\n  const wasSelected = useRef(selected);\n  const panelFocused = useRef(false);\n  const node = useRef(null); // A tab can start selected when it is moved from the disclosure dropdown\n  // into the main list, so we need to send focus from the tab to the panel\n  // on mount and update\n\n  useEffect(() => {\n    if (measuring) {\n      return;\n    } // Because of timing issues with the render, we may still have the old,\n    // in-disclosure version of the tab that has focus. Check for this\n    // as a second indicator of focus\n\n\n    const itemHadFocus = focused || document.activeElement && document.activeElement.id === id; // If we just check for selected, the panel for the active tab will\n    // be focused on page load, which we don’t want\n\n    if (itemHadFocus && selected && panelID != null && !panelFocused.current) {\n      focusPanelID(panelID);\n      panelFocused.current = true;\n    }\n\n    if (selected && !wasSelected.current && panelID != null) {\n      focusPanelID(panelID);\n    } else if (focused && node.current != null) {\n      focusFirstFocusableNode(node.current);\n    }\n\n    wasSelected.current = selected;\n  }, [focused, id, measuring, panelID, selected]);\n  const handleClick = onClick && onClick.bind(null, id);\n  const className = classNames(styles.Tab, selected && styles['Tab-selected']);\n  let tabIndex;\n\n  if (selected && !siblingTabHasFocus && !measuring) {\n    tabIndex = 0;\n  } else if (focused && !measuring) {\n    tabIndex = 0;\n  } else {\n    tabIndex = -1;\n  }\n\n  const tabContainerClassNames = classNames(styles.TabContainer, selected && styles.Underline);\n  const markup = url ? /*#__PURE__*/React.createElement(UnstyledLink, {\n    id: id,\n    url: url,\n    role: \"tab\",\n    tabIndex: tabIndex,\n    onClick: handleClick,\n    className: className,\n    \"aria-selected\": selected,\n    \"aria-controls\": panelID,\n    \"aria-label\": accessibilityLabel,\n    onMouseUp: handleMouseUpByBlurring\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Title\n  }, children)) : /*#__PURE__*/React.createElement(\"button\", {\n    id: id,\n    role: \"tab\",\n    type: \"button\",\n    tabIndex: tabIndex,\n    className: className,\n    onClick: handleClick,\n    \"aria-selected\": selected,\n    \"aria-controls\": panelID,\n    \"aria-label\": accessibilityLabel,\n    onMouseUp: handleMouseUpByBlurring\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Title\n  }, children));\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: tabContainerClassNames,\n    ref: node,\n    role: \"presentation\"\n  }, markup);\n}\n\nfunction focusPanelID(panelID) {\n  const panel = document.getElementById(panelID);\n\n  if (panel) {\n    panel.focus({\n      preventScroll: true\n    });\n  }\n}\n\nexport { Tab };\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,SAASC,UAAU,QAAQ,8BAA8B;AACzD,SAASC,uBAAuB,EAAEC,uBAAuB,QAAQ,gCAAgC;AACjG,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,YAAY,QAAQ,uCAAuC;AAEpE,SAASC,GAAG,OAWT;EAAA,IAXU;IACXC,EAAE;IACFC,OAAO;IACPC,kBAAkB;IAClBC,QAAQ;IACRC,OAAO;IACPC,QAAQ;IACRC,GAAG;IACHC,OAAO;IACPC,SAAS;IACTC;EACF,CAAC;EACC,MAAMC,WAAW,GAAGlB,MAAM,CAACa,QAAQ,CAAC;EACpC,MAAMM,YAAY,GAAGnB,MAAM,CAAC,KAAK,CAAC;EAClC,MAAMoB,IAAI,GAAGpB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EAC3B;EACA;;EAEAC,SAAS,CAAC,MAAM;IACd,IAAIe,SAAS,EAAE;MACb;IACF,CAAC,CAAC;IACF;IACA;;IAGA,MAAMK,YAAY,GAAGZ,OAAO,IAAIa,QAAQ,CAACC,aAAa,IAAID,QAAQ,CAACC,aAAa,CAACf,EAAE,KAAKA,EAAE,CAAC,CAAC;IAC5F;;IAEA,IAAIa,YAAY,IAAIR,QAAQ,IAAIE,OAAO,IAAI,IAAI,IAAI,CAACI,YAAY,CAACK,OAAO,EAAE;MACxEC,YAAY,CAACV,OAAO,CAAC;MACrBI,YAAY,CAACK,OAAO,GAAG,IAAI;IAC7B;IAEA,IAAIX,QAAQ,IAAI,CAACK,WAAW,CAACM,OAAO,IAAIT,OAAO,IAAI,IAAI,EAAE;MACvDU,YAAY,CAACV,OAAO,CAAC;IACvB,CAAC,MAAM,IAAIN,OAAO,IAAIW,IAAI,CAACI,OAAO,IAAI,IAAI,EAAE;MAC1CrB,uBAAuB,CAACiB,IAAI,CAACI,OAAO,CAAC;IACvC;IAEAN,WAAW,CAACM,OAAO,GAAGX,QAAQ;EAChC,CAAC,EAAE,CAACJ,OAAO,EAAED,EAAE,EAAEQ,SAAS,EAAED,OAAO,EAAEF,QAAQ,CAAC,CAAC;EAC/C,MAAMa,WAAW,GAAGd,OAAO,IAAIA,OAAO,CAACe,IAAI,CAAC,IAAI,EAAEnB,EAAE,CAAC;EACrD,MAAMoB,SAAS,GAAG1B,UAAU,CAACG,MAAM,CAACE,GAAG,EAAEM,QAAQ,IAAIR,MAAM,CAAC,cAAc,CAAC,CAAC;EAC5E,IAAIwB,QAAQ;EAEZ,IAAIhB,QAAQ,IAAI,CAACH,kBAAkB,IAAI,CAACM,SAAS,EAAE;IACjDa,QAAQ,GAAG,CAAC;EACd,CAAC,MAAM,IAAIpB,OAAO,IAAI,CAACO,SAAS,EAAE;IAChCa,QAAQ,GAAG,CAAC;EACd,CAAC,MAAM;IACLA,QAAQ,GAAG,CAAC,CAAC;EACf;EAEA,MAAMC,sBAAsB,GAAG5B,UAAU,CAACG,MAAM,CAAC0B,YAAY,EAAElB,QAAQ,IAAIR,MAAM,CAAC2B,SAAS,CAAC;EAC5F,MAAMC,MAAM,GAAGnB,GAAG,GAAG,aAAaf,KAAK,CAACmC,aAAa,CAAC5B,YAAY,EAAE;IAClEE,EAAE,EAAEA,EAAE;IACNM,GAAG,EAAEA,GAAG;IACRqB,IAAI,EAAE,KAAK;IACXN,QAAQ,EAAEA,QAAQ;IAClBjB,OAAO,EAAEc,WAAW;IACpBE,SAAS,EAAEA,SAAS;IACpB,eAAe,EAAEf,QAAQ;IACzB,eAAe,EAAEE,OAAO;IACxB,YAAY,EAAEE,kBAAkB;IAChCmB,SAAS,EAAEhC;EACb,CAAC,EAAE,aAAaL,KAAK,CAACmC,aAAa,CAAC,MAAM,EAAE;IAC1CN,SAAS,EAAEvB,MAAM,CAACgC;EACpB,CAAC,EAAE1B,QAAQ,CAAC,CAAC,GAAG,aAAaZ,KAAK,CAACmC,aAAa,CAAC,QAAQ,EAAE;IACzD1B,EAAE,EAAEA,EAAE;IACN2B,IAAI,EAAE,KAAK;IACXG,IAAI,EAAE,QAAQ;IACdT,QAAQ,EAAEA,QAAQ;IAClBD,SAAS,EAAEA,SAAS;IACpBhB,OAAO,EAAEc,WAAW;IACpB,eAAe,EAAEb,QAAQ;IACzB,eAAe,EAAEE,OAAO;IACxB,YAAY,EAAEE,kBAAkB;IAChCmB,SAAS,EAAEhC;EACb,CAAC,EAAE,aAAaL,KAAK,CAACmC,aAAa,CAAC,MAAM,EAAE;IAC1CN,SAAS,EAAEvB,MAAM,CAACgC;EACpB,CAAC,EAAE1B,QAAQ,CAAC,CAAC;EACb,OAAO,aAAaZ,KAAK,CAACmC,aAAa,CAAC,IAAI,EAAE;IAC5CN,SAAS,EAAEE,sBAAsB;IACjCS,GAAG,EAAEnB,IAAI;IACTe,IAAI,EAAE;EACR,CAAC,EAAEF,MAAM,CAAC;AACZ;AAEA,SAASR,YAAY,CAACV,OAAO,EAAE;EAC7B,MAAMyB,KAAK,GAAGlB,QAAQ,CAACmB,cAAc,CAAC1B,OAAO,CAAC;EAE9C,IAAIyB,KAAK,EAAE;IACTA,KAAK,CAACE,KAAK,CAAC;MACVC,aAAa,EAAE;IACjB,CAAC,CAAC;EACJ;AACF;AAEA,SAASpC,GAAG"},"metadata":{},"sourceType":"module"}