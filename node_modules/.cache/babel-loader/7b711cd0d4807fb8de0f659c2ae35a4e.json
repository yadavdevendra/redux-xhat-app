{"ast":null,"code":"import React, { useRef, useState, useCallback, useMemo, useEffect } from 'react';\nimport { EnableSelectionMinor, SortAscendingMajor, SortDescendingMajor } from '@shopify/polaris-icons';\nimport { CSSTransition } from 'react-transition-group';\nimport { toPx, tokens, motion } from '@shopify/polaris-tokens';\nimport { debounce } from '../../utilities/debounce.js';\nimport { useToggle } from '../../utilities/use-toggle.js';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './IndexTable.scss.js';\nimport { IndexProvider } from '../IndexProvider/IndexProvider.js';\nimport { Cell } from './components/Cell/Cell.js';\nimport { Row } from './components/Row/Row.js';\nimport { SELECT_ALL_ITEMS, SelectionType } from '../../utilities/index-provider/types.js';\nimport { getTableHeadingsBySelector } from './utilities/utilities.js';\nimport { EmptySearchResult } from '../EmptySearchResult/EmptySearchResult.js';\nimport { ScrollContainer } from './components/ScrollContainer/ScrollContainer.js';\nimport { BulkActions } from '../BulkActions/BulkActions.js';\nimport { useIndexValue, useIndexSelectionChange } from '../../utilities/index-provider/hooks.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Stack } from '../Stack/Stack.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\nimport { Spinner } from '../Spinner/Spinner.js';\nimport { AfterInitialMount } from '../AfterInitialMount/AfterInitialMount.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nimport { Badge } from '../Badge/Badge.js';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.js';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.js';\nimport { Tooltip } from '../Tooltip/Tooltip.js';\nimport { Sticky } from '../Sticky/Sticky.js';\nimport { Button } from '../Button/Button.js';\nconst SCROLL_BAR_PADDING = 4;\nconst SCROLL_BAR_DEBOUNCE_PERIOD = 300;\nfunction IndexTableBase(_ref) {\n  let {\n    headings,\n    bulkActions = [],\n    promotedBulkActions = [],\n    children,\n    emptyState,\n    sort,\n    paginatedSelectAllActionText,\n    lastColumnSticky = false,\n    sortable,\n    sortDirection,\n    defaultSortDirection = 'descending',\n    sortColumnIndex,\n    onSort,\n    sortToggleLabels,\n    ...restProps\n  } = _ref;\n  const {\n    loading,\n    bulkSelectState,\n    resourceName,\n    bulkActionsAccessibilityLabel,\n    selectMode,\n    selectable = restProps.selectable,\n    paginatedSelectAllText,\n    itemCount,\n    hasMoreItems,\n    selectedItemsCount,\n    condensed\n  } = useIndexValue();\n  const handleSelectionChange = useIndexSelectionChange();\n  const i18n = useI18n();\n  const {\n    value: hasMoreLeftColumns,\n    toggle: toggleHasMoreLeftColumns\n  } = useToggle(false);\n  const tablePosition = useRef({\n    top: 0,\n    left: 0\n  });\n  const tableHeadingRects = useRef([]);\n  const scrollableContainerElement = useRef(null);\n  const tableElement = useRef(null);\n  const condensedListElement = useRef(null);\n  const [tableInitialized, setTableInitialized] = useState(false);\n  const [isSmallScreenSelectable, setIsSmallScreenSelectable] = useState(false);\n  const [stickyWrapper, setStickyWrapper] = useState(null);\n  const [hideScrollContainer, setHideScrollContainer] = useState(false);\n  const [smallScreen, setSmallScreen] = useState(isBreakpointsXS());\n  const tableHeadings = useRef([]);\n  const stickyTableHeadings = useRef([]);\n  const stickyHeaderWrapperElement = useRef(null);\n  const firstStickyHeaderElement = useRef(null);\n  const stickyHeaderElement = useRef(null);\n  const scrollBarElement = useRef(null);\n  const scrollContainerElement = useRef(null);\n  const scrollingWithBar = useRef(false);\n  const scrollingContainer = useRef(false);\n  const tableBodyRef = useCallback(node => {\n    if (node !== null && !tableInitialized) {\n      setTableInitialized(true);\n    }\n  }, [tableInitialized]);\n  const toggleIsSmallScreenSelectable = useCallback(() => {\n    setIsSmallScreenSelectable(value => !value);\n  }, []);\n  const handleSelectAllItemsInStore = useCallback(() => {\n    handleSelectionChange(selectedItemsCount === SELECT_ALL_ITEMS ? SelectionType.Page : SelectionType.All, true);\n  }, [handleSelectionChange, selectedItemsCount]);\n  const calculateFirstHeaderOffset = useCallback(() => {\n    if (!selectable) {\n      return tableHeadingRects.current[0].offsetWidth;\n    }\n    return condensed ? tableHeadingRects.current[0].offsetWidth : tableHeadingRects.current[0].offsetWidth + tableHeadingRects.current[1].offsetWidth;\n  }, [condensed, selectable]);\n  const resizeTableHeadings = useMemo(() => debounce(() => {\n    if (!tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n    const boundingRect = scrollableContainerElement.current.getBoundingClientRect();\n    tablePosition.current = {\n      top: boundingRect.top,\n      left: boundingRect.left\n    };\n    tableHeadingRects.current = tableHeadings.current.map(heading => ({\n      offsetWidth: heading.offsetWidth || 0,\n      offsetLeft: heading.offsetLeft || 0\n    }));\n    if (tableHeadings.current.length === 0) {\n      return;\n    } // update left offset for first column\n\n    if (selectable && tableHeadings.current.length > 1) tableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`; // update the min width of the checkbox to be the be the un-padded width of the first heading\n\n    if (selectable && firstStickyHeaderElement !== null && firstStickyHeaderElement !== void 0 && firstStickyHeaderElement.current) {\n      const elementStyle = getComputedStyle(tableHeadings.current[0]);\n      const boxWidth = tableHeadings.current[0].offsetWidth;\n      firstStickyHeaderElement.current.style.minWidth = `calc(${boxWidth}px - ${elementStyle.paddingLeft} - ${elementStyle.paddingRight} + 2px)`;\n    } // update sticky header min-widths\n\n    stickyTableHeadings.current.forEach((heading, index) => {\n      let minWidth = 0;\n      if (index === 0 && (!isBreakpointsXS() || !selectable)) {\n        minWidth = calculateFirstHeaderOffset();\n      } else if (selectable && tableHeadingRects.current.length > index) {\n        var _tableHeadingRects$cu;\n        minWidth = ((_tableHeadingRects$cu = tableHeadingRects.current[index]) === null || _tableHeadingRects$cu === void 0 ? void 0 : _tableHeadingRects$cu.offsetWidth) || 0;\n      } else if (!selectable && tableHeadingRects.current.length >= index) {\n        var _tableHeadingRects$cu2;\n        minWidth = ((_tableHeadingRects$cu2 = tableHeadingRects.current[index - 1]) === null || _tableHeadingRects$cu2 === void 0 ? void 0 : _tableHeadingRects$cu2.offsetWidth) || 0;\n      }\n      heading.style.minWidth = `${minWidth}px`;\n    });\n  }), [calculateFirstHeaderOffset, selectable]);\n  const resizeTableScrollBar = useCallback(() => {\n    if (scrollBarElement.current && tableElement.current && tableInitialized) {\n      var _scrollContainerEleme, _tableElement$current;\n      scrollBarElement.current.style.setProperty('--pc-index-table-scroll-bar-content-width', `${tableElement.current.offsetWidth - SCROLL_BAR_PADDING}px`);\n      setHideScrollContainer(((_scrollContainerEleme = scrollContainerElement.current) === null || _scrollContainerEleme === void 0 ? void 0 : _scrollContainerEleme.offsetWidth) === ((_tableElement$current = tableElement.current) === null || _tableElement$current === void 0 ? void 0 : _tableElement$current.offsetWidth));\n    }\n  }, [tableInitialized]); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const debounceResizeTableScrollbar = useCallback(debounce(resizeTableScrollBar, SCROLL_BAR_DEBOUNCE_PERIOD, {\n    trailing: true\n  }), [resizeTableScrollBar]);\n  const [canScrollRight, setCanScrollRight] = useState(true); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const handleCanScrollRight = useCallback(debounce(() => {\n    if (!lastColumnSticky || !tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n    const tableRect = tableElement.current.getBoundingClientRect();\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    setCanScrollRight(tableRect.width > scrollableRect.width);\n  }), [lastColumnSticky]);\n  useEffect(() => {\n    handleCanScrollRight();\n  }, [handleCanScrollRight]);\n  const handleIsSmallScreen = useCallback(() => {\n    setSmallScreen(isBreakpointsXS());\n  }, []);\n  const [canFitStickyColumn, setCanFitStickyColumn] = useState(true);\n  const handleCanFitStickyColumn = useCallback(() => {\n    if (!scrollableContainerElement.current || !tableHeadings.current.length) {\n      return;\n    }\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    const checkboxColumnWidth = selectable ? tableHeadings.current[0].getBoundingClientRect().width : 0;\n    const firstStickyColumnWidth = tableHeadings.current[selectable ? 1 : 0].getBoundingClientRect().width;\n    const lastColumnIsNotTheFirst = selectable ? tableHeadings.current.length > 2 : 1; // Don't consider the last column in the calculations if it's not sticky\n\n    const lastStickyColumnWidth = lastColumnSticky && lastColumnIsNotTheFirst ? tableHeadings.current[tableHeadings.current.length - 1].getBoundingClientRect().width : 0; // Secure some space for the remaining columns to be visible\n\n    const restOfContentMinWidth = 100;\n    setCanFitStickyColumn(scrollableRect.width > firstStickyColumnWidth + checkboxColumnWidth + lastStickyColumnWidth + restOfContentMinWidth);\n  }, [lastColumnSticky, selectable]);\n  useEffect(() => {\n    if (tableInitialized) {\n      handleCanFitStickyColumn();\n    }\n  }, [handleCanFitStickyColumn, tableInitialized]);\n  const handleResize = useCallback(() => {\n    var _scrollBarElement$cur;\n\n    // hide the scrollbar when resizing\n    (_scrollBarElement$cur = scrollBarElement.current) === null || _scrollBarElement$cur === void 0 ? void 0 : _scrollBarElement$cur.style.setProperty('--pc-index-table-scroll-bar-content-width', `0px`);\n    resizeTableHeadings();\n    debounceResizeTableScrollbar();\n    handleCanScrollRight();\n    handleIsSmallScreen();\n    handleCanFitStickyColumn();\n  }, [resizeTableHeadings, debounceResizeTableScrollbar, handleCanScrollRight, handleIsSmallScreen, handleCanFitStickyColumn]);\n  const handleScrollContainerScroll = useCallback((canScrollLeft, canScrollRight) => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n    if (!scrollingWithBar.current) {\n      scrollingContainer.current = true;\n      scrollBarElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n    scrollingWithBar.current = false;\n    if (stickyHeaderElement.current) {\n      stickyHeaderElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n    if (canScrollLeft && !hasMoreLeftColumns || !canScrollLeft && hasMoreLeftColumns) {\n      toggleHasMoreLeftColumns();\n    }\n    setCanScrollRight(canScrollRight);\n  }, [hasMoreLeftColumns, toggleHasMoreLeftColumns]);\n  const handleScrollBarScroll = useCallback(() => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n    if (!scrollingContainer.current) {\n      scrollingWithBar.current = true;\n      scrollableContainerElement.current.scrollLeft = scrollBarElement.current.scrollLeft;\n    }\n    scrollingContainer.current = false;\n  }, []);\n  useEffect(() => {\n    tableHeadings.current = getTableHeadingsBySelector(tableElement.current, '[data-index-table-heading]');\n    stickyTableHeadings.current = getTableHeadingsBySelector(stickyHeaderWrapperElement.current, '[data-index-table-sticky-heading]');\n    resizeTableHeadings();\n  }, [headings, resizeTableHeadings, firstStickyHeaderElement, tableInitialized]);\n  useEffect(() => {\n    resizeTableScrollBar();\n    setStickyWrapper(condensed ? condensedListElement.current : tableElement.current);\n  }, [tableInitialized, resizeTableScrollBar, condensed]);\n  useEffect(() => {\n    if (!condensed && isSmallScreenSelectable) {\n      setIsSmallScreenSelectable(false);\n    }\n  }, [condensed, isSmallScreenSelectable]);\n  const hasBulkActions = Boolean(promotedBulkActions && promotedBulkActions.length > 0 || bulkActions && bulkActions.length > 0);\n  const headingsMarkup = headings.map(renderHeading).reduce((acc, heading) => acc.concat(heading), []);\n  const bulkActionsSelectable = Boolean(promotedBulkActions.length > 0 || bulkActions.length > 0);\n  const stickyColumnHeaderStyle = tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n    minWidth: calculateFirstHeaderOffset()\n  } : undefined;\n  const stickyColumnHeader = /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.TableHeading,\n    key: getHeadingKey(headings[0]),\n    style: stickyColumnHeaderStyle,\n    \"data-index-table-sticky-heading\": true\n  }, /*#__PURE__*/React.createElement(Stack, {\n    spacing: \"none\",\n    wrap: false,\n    alignment: \"center\"\n  }, selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FirstStickyHeaderElement,\n    ref: firstStickyHeaderElement\n  }, renderCheckboxContent()), selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['StickyTableHeading-second-scrolling']\n  }, renderHeadingContent(headings[0], 0)), !selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FirstStickyHeaderElement,\n    ref: firstStickyHeaderElement\n  }, renderHeadingContent(headings[0], 0))));\n  const stickyHeadingsMarkup = headings.map(renderStickyHeading);\n  const selectedItemsCountLabel = selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount;\n  const handleTogglePage = useCallback(() => {\n    handleSelectionChange(SelectionType.Page, Boolean(!bulkSelectState || bulkSelectState === 'indeterminate'));\n  }, [bulkSelectState, handleSelectionChange]);\n  const paginatedSelectAllAction = getPaginatedSelectAllAction();\n  const loadingTransitionClassNames = {\n    enter: styles['LoadingContainer-enter'],\n    enterActive: styles['LoadingContainer-enter-active'],\n    exit: styles['LoadingContainer-exit'],\n    exitActive: styles['LoadingContainer-exit-active']\n  };\n  const loadingMarkup = /*#__PURE__*/React.createElement(CSSTransition, {\n    in: loading,\n    classNames: loadingTransitionClassNames,\n    timeout: parseInt(motion['duration-100'], 10),\n    appear: true,\n    unmountOnExit: true\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanel\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanelRow\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"small\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.LoadingPanelText\n  }, i18n.translate('Polaris.IndexTable.resourceLoadingAccessibilityLabel', {\n    resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n  })))));\n  const stickyTableClassNames = classNames(styles.StickyTable, condensed && styles['StickyTable-condensed']);\n  const shouldShowBulkActions = bulkActionsSelectable && selectedItemsCount || isSmallScreenSelectable;\n  const stickyHeaderMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: stickyTableClassNames,\n    role: \"presentation\"\n  }, /*#__PURE__*/React.createElement(Sticky, {\n    boundingElement: stickyWrapper\n  }, isSticky => {\n    const stickyHeaderClassNames = classNames(styles.StickyTableHeader, isSticky && styles['StickyTableHeader-isSticky']);\n    const bulkActionClassNames = classNames(styles.BulkActionsWrapper, condensed && styles['StickyTableHeader-condensed'], isSticky && styles['StickyTableHeader-isSticky']);\n    const shouldShowActions = !condensed || selectedItemsCount;\n    const promotedActions = shouldShowActions ? promotedBulkActions : [];\n    const actions = shouldShowActions ? bulkActions : [];\n    const bulkActionsMarkup = shouldShowBulkActions ? /*#__PURE__*/React.createElement(\"div\", {\n      className: bulkActionClassNames,\n      \"data-condensed\": condensed\n    }, loadingMarkup, /*#__PURE__*/React.createElement(BulkActions, {\n      smallScreen: smallScreen,\n      label: i18n.translate('Polaris.IndexTable.selected', {\n        selectedItemsCount: selectedItemsCountLabel\n      }),\n      accessibilityLabel: bulkActionsAccessibilityLabel,\n      selected: bulkSelectState,\n      selectMode: selectMode || isSmallScreenSelectable,\n      onToggleAll: handleTogglePage,\n      promotedActions: promotedActions,\n      actions: actions,\n      paginatedSelectAllText: paginatedSelectAllText,\n      paginatedSelectAllAction: paginatedSelectAllAction,\n      onSelectModeToggle: condensed ? handleSelectModeToggle : undefined\n    })) : null;\n    const stickyColumnHeaderClassNames = classNames(styles.StickyTableColumnHeader, hasMoreLeftColumns && styles['StickyTableColumnHeader-isScrolling']);\n    const selectButtonMarkup = /*#__PURE__*/React.createElement(Button, {\n      icon: EnableSelectionMinor,\n      onClick: toggleIsSmallScreenSelectable\n    }, i18n.translate('Polaris.IndexTable.selectButtonText'));\n    const headerMarkup = condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(styles.HeaderWrapper, !selectable && styles.unselectable)\n    }, loadingMarkup, sort, selectable && selectButtonMarkup) : /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeaderClassNames,\n      ref: stickyHeaderWrapperElement\n    }, loadingMarkup, /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyColumnHeaderClassNames\n    }, stickyColumnHeader), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyTableHeadings,\n      ref: stickyHeaderElement\n    }, stickyHeadingsMarkup));\n    const stickyContent = bulkActionsMarkup ? bulkActionsMarkup : headerMarkup;\n    return stickyContent;\n  }));\n  const scrollBarWrapperClassNames = classNames(styles.ScrollBarContainer, condensed && styles.scrollBarContainerCondensed, hideScrollContainer && styles.scrollBarContainerHidden);\n  const scrollBarClassNames = classNames(tableElement.current && tableInitialized && styles.ScrollBarContent);\n  const scrollBarMarkup = itemCount > 0 ? /*#__PURE__*/React.createElement(AfterInitialMount, {\n    onMount: resizeTableScrollBar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarWrapperClassNames,\n    ref: scrollContainerElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onScroll: handleScrollBarScroll,\n    className: styles.ScrollBar,\n    ref: scrollBarElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarClassNames\n  })))) : null;\n  const isSortable = sortable === null || sortable === void 0 ? void 0 : sortable.some(value => value);\n  const tableClassNames = classNames(styles.Table, hasMoreLeftColumns && styles['Table-scrolling'], selectMode && styles.disableTextSelection, selectMode && shouldShowBulkActions && styles.selectMode, !selectable && styles['Table-unselectable'], canFitStickyColumn && styles['Table-sticky'], isSortable && styles['Table-sortable'], canFitStickyColumn && lastColumnSticky && styles['Table-sticky-last'], canFitStickyColumn && lastColumnSticky && canScrollRight && styles['Table-sticky-scrolling']);\n  const emptyStateMarkup = emptyState ? emptyState : /*#__PURE__*/React.createElement(EmptySearchResult, {\n    title: i18n.translate('Polaris.IndexTable.emptySearchTitle', {\n      resourceNamePlural: resourceName.plural\n    }),\n    description: i18n.translate('Polaris.IndexTable.emptySearchDescription'),\n    withIllustration: true\n  });\n  const sharedMarkup = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EventListener, {\n    event: \"resize\",\n    handler: handleResize\n  }), /*#__PURE__*/React.createElement(AfterInitialMount, null, stickyHeaderMarkup));\n  const bodyMarkup = condensed ? /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-selectmode\": Boolean(selectMode || isSmallScreenSelectable),\n    className: styles.CondensedList,\n    ref: condensedListElement\n  }, children)) : /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(ScrollContainer, {\n    scrollableContainerRef: scrollableContainerElement,\n    onScroll: handleScrollContainerScroll\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    ref: tableElement,\n    className: tableClassNames\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    className: styles.HeadingRow\n  }, headingsMarkup)), /*#__PURE__*/React.createElement(\"tbody\", {\n    ref: tableBodyRef\n  }, children))));\n  const tableContentMarkup = itemCount > 0 ? bodyMarkup : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.EmptySearchResultWrapper\n  }, emptyStateMarkup);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.IndexTable\n  }, !shouldShowBulkActions && !condensed && loadingMarkup, tableContentMarkup), scrollBarMarkup);\n  function renderHeading(heading, index) {\n    const isSecond = index === 0;\n    const isLast = index === headings.length - 1;\n    const hasSortable = sortable === null || sortable === void 0 ? void 0 : sortable.some(value => value === true);\n    const headingContentClassName = classNames(styles.TableHeading, hasSortable && styles['TableHeading-sortable'], isSecond && styles['TableHeading-second'], isLast && !heading.hidden && styles['TableHeading-last'], !selectable && styles['TableHeading-unselectable'], heading.flush && styles['TableHeading-flush']);\n    const stickyPositioningStyle = selectable !== false && isSecond && tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n      left: tableHeadingRects.current[0].offsetWidth\n    } : undefined;\n    const headingContent = /*#__PURE__*/React.createElement(\"th\", {\n      className: headingContentClassName,\n      key: getHeadingKey(heading),\n      \"data-index-table-heading\": true,\n      style: stickyPositioningStyle\n    }, renderHeadingContent(heading, index));\n    if (index !== 0 || !selectable) {\n      return headingContent;\n    }\n    const checkboxClassName = classNames(styles.TableHeading, hasSortable && styles['TableHeading-sortable'], index === 0 && styles['TableHeading-first']);\n    const checkboxContent = /*#__PURE__*/React.createElement(\"th\", {\n      className: checkboxClassName,\n      key: `${heading}-${index}`,\n      \"data-index-table-heading\": true\n    }, renderCheckboxContent());\n    return [checkboxContent, headingContent];\n  }\n  function renderCheckboxContent() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ColumnHeaderCheckboxWrapper\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      label: i18n.translate('Polaris.IndexTable.selectAllLabel', {\n        resourceNamePlural: resourceName.plural\n      }),\n      labelHidden: true,\n      onChange: handleSelectPage,\n      checked: bulkSelectState\n    }));\n  }\n  function handleSortHeadingClick(index, direction) {\n    onSort === null || onSort === void 0 ? void 0 : onSort(index, direction);\n  }\n  function renderHeadingContent(heading, index) {\n    let headingContent;\n    if (heading.new) {\n      headingContent = /*#__PURE__*/React.createElement(Stack, {\n        wrap: false,\n        alignment: \"center\"\n      }, /*#__PURE__*/React.createElement(\"span\", null, heading.title), /*#__PURE__*/React.createElement(Badge, {\n        status: \"new\"\n      }, i18n.translate('Polaris.IndexTable.onboardingBadgeText')));\n    } else if (heading.hidden) {\n      headingContent = /*#__PURE__*/React.createElement(VisuallyHidden, null, heading.title);\n    } else {\n      headingContent = heading.title;\n    }\n    if (sortable !== null && sortable !== void 0 && sortable[index]) {\n      const isCurrentlySorted = index === sortColumnIndex;\n      const isAscending = sortDirection === 'ascending';\n      let newDirection = defaultSortDirection;\n      let SourceComponent = defaultSortDirection === 'ascending' ? SortAscendingMajor : SortDescendingMajor;\n      if (isCurrentlySorted) {\n        newDirection = isAscending ? 'descending' : 'ascending';\n        SourceComponent = sortDirection === 'ascending' ? SortAscendingMajor : SortDescendingMajor;\n      }\n      const iconMarkup = /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(styles.TableHeadingSortIcon, isCurrentlySorted && styles['TableHeadingSortIcon-visible'])\n      }, /*#__PURE__*/React.createElement(SourceComponent, {\n        focusable: \"false\",\n        \"aria-hidden\": \"true\",\n        className: styles.TableHeadingSortSvg\n      }));\n      const sortMarkup = /*#__PURE__*/React.createElement(UnstyledButton, {\n        onClick: () => handleSortHeadingClick(index, newDirection),\n        className: styles.TableHeadingSortButton\n      }, iconMarkup, headingContent);\n      if (!sortToggleLabels) {\n        return sortMarkup;\n      }\n      const tooltipDirection = isCurrentlySorted ? sortDirection : defaultSortDirection;\n      const tooltipContent = sortToggleLabels[index][tooltipDirection];\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        content: tooltipContent\n      }, sortMarkup);\n    }\n    return headingContent;\n  }\n  function handleSelectPage(checked) {\n    handleSelectionChange(SelectionType.Page, checked);\n  }\n  function renderStickyHeading(heading, index) {\n    const position = index + 1;\n    const headingStyle = tableHeadingRects.current && tableHeadingRects.current.length > position ? {\n      minWidth: tableHeadingRects.current[position].offsetWidth\n    } : undefined;\n    const headingContent = renderHeadingContent(heading, index);\n    const stickyHeadingClassName = classNames(styles.TableHeading, index === 0 && styles['StickyTableHeading-second'], index === 0 && !selectable && styles.unselectable);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeadingClassName,\n      key: getHeadingKey(heading),\n      style: headingStyle,\n      \"data-index-table-sticky-heading\": true\n    }, headingContent);\n  }\n  function getPaginatedSelectAllAction() {\n    if (!selectable || !hasBulkActions || !hasMoreItems) {\n      return;\n    }\n    const customActionText = paginatedSelectAllActionText !== null && paginatedSelectAllActionText !== void 0 ? paginatedSelectAllActionText : i18n.translate('Polaris.IndexTable.selectAllItems', {\n      itemsLength: itemCount,\n      resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n    });\n    const actionText = selectedItemsCount === SELECT_ALL_ITEMS ? i18n.translate('Polaris.IndexTable.undo') : customActionText;\n    return {\n      content: actionText,\n      onAction: handleSelectAllItemsInStore\n    };\n  }\n  function handleSelectModeToggle(val) {\n    handleSelectionChange(SelectionType.All, false);\n    setIsSmallScreenSelectable(val);\n  }\n}\nconst isBreakpointsXS = () => {\n  var _toPx;\n  return typeof window === 'undefined' ? false : window.innerWidth < parseFloat((_toPx = toPx(tokens.breakpoints['breakpoints-sm'])) !== null && _toPx !== void 0 ? _toPx : '');\n};\nfunction getHeadingKey(heading) {\n  if ('id' in heading && heading.id) {\n    return heading.id;\n  }\n  if (typeof heading.title === 'string') {\n    return heading.title;\n  }\n  return '';\n}\nfunction IndexTable(_ref2) {\n  let {\n    children,\n    selectable = true,\n    itemCount,\n    selectedItemsCount = 0,\n    resourceName: passedResourceName,\n    loading,\n    hasMoreItems,\n    condensed,\n    onSelectionChange,\n    ...indexTableBaseProps\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(IndexProvider, {\n    selectable: selectable,\n    itemCount: itemCount,\n    selectedItemsCount: selectedItemsCount,\n    resourceName: passedResourceName,\n    loading: loading,\n    hasMoreItems: hasMoreItems,\n    condensed: condensed,\n    onSelectionChange: onSelectionChange\n  }, /*#__PURE__*/React.createElement(IndexTableBase, indexTableBaseProps, children));\n}\nIndexTable.Cell = Cell;\nIndexTable.Row = Row;\nexport { IndexTable };","map":{"version":3,"names":["React","useRef","useState","useCallback","useMemo","useEffect","EnableSelectionMinor","SortAscendingMajor","SortDescendingMajor","CSSTransition","toPx","tokens","motion","debounce","useToggle","classNames","styles","IndexProvider","Cell","Row","SELECT_ALL_ITEMS","SelectionType","getTableHeadingsBySelector","EmptySearchResult","ScrollContainer","BulkActions","useIndexValue","useIndexSelectionChange","useI18n","Stack","Checkbox","Spinner","AfterInitialMount","EventListener","Badge","VisuallyHidden","UnstyledButton","Tooltip","Sticky","Button","SCROLL_BAR_PADDING","SCROLL_BAR_DEBOUNCE_PERIOD","IndexTableBase","headings","bulkActions","promotedBulkActions","children","emptyState","sort","paginatedSelectAllActionText","lastColumnSticky","sortable","sortDirection","defaultSortDirection","sortColumnIndex","onSort","sortToggleLabels","restProps","loading","bulkSelectState","resourceName","bulkActionsAccessibilityLabel","selectMode","selectable","paginatedSelectAllText","itemCount","hasMoreItems","selectedItemsCount","condensed","handleSelectionChange","i18n","value","hasMoreLeftColumns","toggle","toggleHasMoreLeftColumns","tablePosition","top","left","tableHeadingRects","scrollableContainerElement","tableElement","condensedListElement","tableInitialized","setTableInitialized","isSmallScreenSelectable","setIsSmallScreenSelectable","stickyWrapper","setStickyWrapper","hideScrollContainer","setHideScrollContainer","smallScreen","setSmallScreen","isBreakpointsXS","tableHeadings","stickyTableHeadings","stickyHeaderWrapperElement","firstStickyHeaderElement","stickyHeaderElement","scrollBarElement","scrollContainerElement","scrollingWithBar","scrollingContainer","tableBodyRef","node","toggleIsSmallScreenSelectable","handleSelectAllItemsInStore","Page","All","calculateFirstHeaderOffset","current","offsetWidth","resizeTableHeadings","boundingRect","getBoundingClientRect","map","heading","offsetLeft","length","style","elementStyle","getComputedStyle","boxWidth","minWidth","paddingLeft","paddingRight","forEach","index","_tableHeadingRects$cu","_tableHeadingRects$cu2","resizeTableScrollBar","_scrollContainerEleme","_tableElement$current","setProperty","debounceResizeTableScrollbar","trailing","canScrollRight","setCanScrollRight","handleCanScrollRight","tableRect","scrollableRect","width","handleIsSmallScreen","canFitStickyColumn","setCanFitStickyColumn","handleCanFitStickyColumn","checkboxColumnWidth","firstStickyColumnWidth","lastColumnIsNotTheFirst","lastStickyColumnWidth","restOfContentMinWidth","handleResize","_scrollBarElement$cur","handleScrollContainerScroll","canScrollLeft","scrollLeft","handleScrollBarScroll","hasBulkActions","Boolean","headingsMarkup","renderHeading","reduce","acc","concat","bulkActionsSelectable","stickyColumnHeaderStyle","undefined","stickyColumnHeader","createElement","className","TableHeading","key","getHeadingKey","spacing","wrap","alignment","FirstStickyHeaderElement","ref","renderCheckboxContent","renderHeadingContent","stickyHeadingsMarkup","renderStickyHeading","selectedItemsCountLabel","handleTogglePage","paginatedSelectAllAction","getPaginatedSelectAllAction","loadingTransitionClassNames","enter","enterActive","exit","exitActive","loadingMarkup","in","timeout","parseInt","appear","unmountOnExit","LoadingPanel","LoadingPanelRow","size","LoadingPanelText","translate","resourceNamePlural","plural","toLocaleLowerCase","stickyTableClassNames","StickyTable","shouldShowBulkActions","stickyHeaderMarkup","role","boundingElement","isSticky","stickyHeaderClassNames","StickyTableHeader","bulkActionClassNames","BulkActionsWrapper","shouldShowActions","promotedActions","actions","bulkActionsMarkup","label","accessibilityLabel","selected","onToggleAll","onSelectModeToggle","handleSelectModeToggle","stickyColumnHeaderClassNames","StickyTableColumnHeader","selectButtonMarkup","icon","onClick","headerMarkup","HeaderWrapper","unselectable","StickyTableHeadings","stickyContent","scrollBarWrapperClassNames","ScrollBarContainer","scrollBarContainerCondensed","scrollBarContainerHidden","scrollBarClassNames","ScrollBarContent","scrollBarMarkup","onMount","onScroll","ScrollBar","isSortable","some","tableClassNames","Table","disableTextSelection","emptyStateMarkup","title","description","withIllustration","sharedMarkup","Fragment","event","handler","bodyMarkup","CondensedList","scrollableContainerRef","HeadingRow","tableContentMarkup","EmptySearchResultWrapper","IndexTable","isSecond","isLast","hasSortable","headingContentClassName","hidden","flush","stickyPositioningStyle","headingContent","checkboxClassName","checkboxContent","ColumnHeaderCheckboxWrapper","labelHidden","onChange","handleSelectPage","checked","handleSortHeadingClick","direction","new","status","isCurrentlySorted","isAscending","newDirection","SourceComponent","iconMarkup","TableHeadingSortIcon","focusable","TableHeadingSortSvg","sortMarkup","TableHeadingSortButton","tooltipDirection","tooltipContent","content","position","headingStyle","stickyHeadingClassName","customActionText","itemsLength","actionText","onAction","val","_toPx","window","innerWidth","parseFloat","breakpoints","id","passedResourceName","onSelectionChange","indexTableBaseProps"],"sources":["/home/cedcoss/Desktop/redux-xhat-app/node_modules/@shopify/polaris/build/esm/components/IndexTable/IndexTable.js"],"sourcesContent":["import React, { useRef, useState, useCallback, useMemo, useEffect } from 'react';\nimport { EnableSelectionMinor, SortAscendingMajor, SortDescendingMajor } from '@shopify/polaris-icons';\nimport { CSSTransition } from 'react-transition-group';\nimport { toPx, tokens, motion } from '@shopify/polaris-tokens';\nimport { debounce } from '../../utilities/debounce.js';\nimport { useToggle } from '../../utilities/use-toggle.js';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './IndexTable.scss.js';\nimport { IndexProvider } from '../IndexProvider/IndexProvider.js';\nimport { Cell } from './components/Cell/Cell.js';\nimport { Row } from './components/Row/Row.js';\nimport { SELECT_ALL_ITEMS, SelectionType } from '../../utilities/index-provider/types.js';\nimport { getTableHeadingsBySelector } from './utilities/utilities.js';\nimport { EmptySearchResult } from '../EmptySearchResult/EmptySearchResult.js';\nimport { ScrollContainer } from './components/ScrollContainer/ScrollContainer.js';\nimport { BulkActions } from '../BulkActions/BulkActions.js';\nimport { useIndexValue, useIndexSelectionChange } from '../../utilities/index-provider/hooks.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Stack } from '../Stack/Stack.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\nimport { Spinner } from '../Spinner/Spinner.js';\nimport { AfterInitialMount } from '../AfterInitialMount/AfterInitialMount.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nimport { Badge } from '../Badge/Badge.js';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.js';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.js';\nimport { Tooltip } from '../Tooltip/Tooltip.js';\nimport { Sticky } from '../Sticky/Sticky.js';\nimport { Button } from '../Button/Button.js';\n\nconst SCROLL_BAR_PADDING = 4;\nconst SCROLL_BAR_DEBOUNCE_PERIOD = 300;\n\nfunction IndexTableBase({\n  headings,\n  bulkActions = [],\n  promotedBulkActions = [],\n  children,\n  emptyState,\n  sort,\n  paginatedSelectAllActionText,\n  lastColumnSticky = false,\n  sortable,\n  sortDirection,\n  defaultSortDirection = 'descending',\n  sortColumnIndex,\n  onSort,\n  sortToggleLabels,\n  ...restProps\n}) {\n  const {\n    loading,\n    bulkSelectState,\n    resourceName,\n    bulkActionsAccessibilityLabel,\n    selectMode,\n    selectable = restProps.selectable,\n    paginatedSelectAllText,\n    itemCount,\n    hasMoreItems,\n    selectedItemsCount,\n    condensed\n  } = useIndexValue();\n  const handleSelectionChange = useIndexSelectionChange();\n  const i18n = useI18n();\n  const {\n    value: hasMoreLeftColumns,\n    toggle: toggleHasMoreLeftColumns\n  } = useToggle(false);\n  const tablePosition = useRef({\n    top: 0,\n    left: 0\n  });\n  const tableHeadingRects = useRef([]);\n  const scrollableContainerElement = useRef(null);\n  const tableElement = useRef(null);\n  const condensedListElement = useRef(null);\n  const [tableInitialized, setTableInitialized] = useState(false);\n  const [isSmallScreenSelectable, setIsSmallScreenSelectable] = useState(false);\n  const [stickyWrapper, setStickyWrapper] = useState(null);\n  const [hideScrollContainer, setHideScrollContainer] = useState(false);\n  const [smallScreen, setSmallScreen] = useState(isBreakpointsXS());\n  const tableHeadings = useRef([]);\n  const stickyTableHeadings = useRef([]);\n  const stickyHeaderWrapperElement = useRef(null);\n  const firstStickyHeaderElement = useRef(null);\n  const stickyHeaderElement = useRef(null);\n  const scrollBarElement = useRef(null);\n  const scrollContainerElement = useRef(null);\n  const scrollingWithBar = useRef(false);\n  const scrollingContainer = useRef(false);\n  const tableBodyRef = useCallback(node => {\n    if (node !== null && !tableInitialized) {\n      setTableInitialized(true);\n    }\n  }, [tableInitialized]);\n  const toggleIsSmallScreenSelectable = useCallback(() => {\n    setIsSmallScreenSelectable(value => !value);\n  }, []);\n  const handleSelectAllItemsInStore = useCallback(() => {\n    handleSelectionChange(selectedItemsCount === SELECT_ALL_ITEMS ? SelectionType.Page : SelectionType.All, true);\n  }, [handleSelectionChange, selectedItemsCount]);\n  const calculateFirstHeaderOffset = useCallback(() => {\n    if (!selectable) {\n      return tableHeadingRects.current[0].offsetWidth;\n    }\n\n    return condensed ? tableHeadingRects.current[0].offsetWidth : tableHeadingRects.current[0].offsetWidth + tableHeadingRects.current[1].offsetWidth;\n  }, [condensed, selectable]);\n  const resizeTableHeadings = useMemo(() => debounce(() => {\n    if (!tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n\n    const boundingRect = scrollableContainerElement.current.getBoundingClientRect();\n    tablePosition.current = {\n      top: boundingRect.top,\n      left: boundingRect.left\n    };\n    tableHeadingRects.current = tableHeadings.current.map(heading => ({\n      offsetWidth: heading.offsetWidth || 0,\n      offsetLeft: heading.offsetLeft || 0\n    }));\n\n    if (tableHeadings.current.length === 0) {\n      return;\n    } // update left offset for first column\n\n\n    if (selectable && tableHeadings.current.length > 1) tableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`; // update the min width of the checkbox to be the be the un-padded width of the first heading\n\n    if (selectable && firstStickyHeaderElement !== null && firstStickyHeaderElement !== void 0 && firstStickyHeaderElement.current) {\n      const elementStyle = getComputedStyle(tableHeadings.current[0]);\n      const boxWidth = tableHeadings.current[0].offsetWidth;\n      firstStickyHeaderElement.current.style.minWidth = `calc(${boxWidth}px - ${elementStyle.paddingLeft} - ${elementStyle.paddingRight} + 2px)`;\n    } // update sticky header min-widths\n\n\n    stickyTableHeadings.current.forEach((heading, index) => {\n      let minWidth = 0;\n\n      if (index === 0 && (!isBreakpointsXS() || !selectable)) {\n        minWidth = calculateFirstHeaderOffset();\n      } else if (selectable && tableHeadingRects.current.length > index) {\n        var _tableHeadingRects$cu;\n\n        minWidth = ((_tableHeadingRects$cu = tableHeadingRects.current[index]) === null || _tableHeadingRects$cu === void 0 ? void 0 : _tableHeadingRects$cu.offsetWidth) || 0;\n      } else if (!selectable && tableHeadingRects.current.length >= index) {\n        var _tableHeadingRects$cu2;\n\n        minWidth = ((_tableHeadingRects$cu2 = tableHeadingRects.current[index - 1]) === null || _tableHeadingRects$cu2 === void 0 ? void 0 : _tableHeadingRects$cu2.offsetWidth) || 0;\n      }\n\n      heading.style.minWidth = `${minWidth}px`;\n    });\n  }), [calculateFirstHeaderOffset, selectable]);\n  const resizeTableScrollBar = useCallback(() => {\n    if (scrollBarElement.current && tableElement.current && tableInitialized) {\n      var _scrollContainerEleme, _tableElement$current;\n\n      scrollBarElement.current.style.setProperty('--pc-index-table-scroll-bar-content-width', `${tableElement.current.offsetWidth - SCROLL_BAR_PADDING}px`);\n      setHideScrollContainer(((_scrollContainerEleme = scrollContainerElement.current) === null || _scrollContainerEleme === void 0 ? void 0 : _scrollContainerEleme.offsetWidth) === ((_tableElement$current = tableElement.current) === null || _tableElement$current === void 0 ? void 0 : _tableElement$current.offsetWidth));\n    }\n  }, [tableInitialized]); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const debounceResizeTableScrollbar = useCallback(debounce(resizeTableScrollBar, SCROLL_BAR_DEBOUNCE_PERIOD, {\n    trailing: true\n  }), [resizeTableScrollBar]);\n  const [canScrollRight, setCanScrollRight] = useState(true); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const handleCanScrollRight = useCallback(debounce(() => {\n    if (!lastColumnSticky || !tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n\n    const tableRect = tableElement.current.getBoundingClientRect();\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    setCanScrollRight(tableRect.width > scrollableRect.width);\n  }), [lastColumnSticky]);\n  useEffect(() => {\n    handleCanScrollRight();\n  }, [handleCanScrollRight]);\n  const handleIsSmallScreen = useCallback(() => {\n    setSmallScreen(isBreakpointsXS());\n  }, []);\n  const [canFitStickyColumn, setCanFitStickyColumn] = useState(true);\n  const handleCanFitStickyColumn = useCallback(() => {\n    if (!scrollableContainerElement.current || !tableHeadings.current.length) {\n      return;\n    }\n\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    const checkboxColumnWidth = selectable ? tableHeadings.current[0].getBoundingClientRect().width : 0;\n    const firstStickyColumnWidth = tableHeadings.current[selectable ? 1 : 0].getBoundingClientRect().width;\n    const lastColumnIsNotTheFirst = selectable ? tableHeadings.current.length > 2 : 1; // Don't consider the last column in the calculations if it's not sticky\n\n    const lastStickyColumnWidth = lastColumnSticky && lastColumnIsNotTheFirst ? tableHeadings.current[tableHeadings.current.length - 1].getBoundingClientRect().width : 0; // Secure some space for the remaining columns to be visible\n\n    const restOfContentMinWidth = 100;\n    setCanFitStickyColumn(scrollableRect.width > firstStickyColumnWidth + checkboxColumnWidth + lastStickyColumnWidth + restOfContentMinWidth);\n  }, [lastColumnSticky, selectable]);\n  useEffect(() => {\n    if (tableInitialized) {\n      handleCanFitStickyColumn();\n    }\n  }, [handleCanFitStickyColumn, tableInitialized]);\n  const handleResize = useCallback(() => {\n    var _scrollBarElement$cur;\n\n    // hide the scrollbar when resizing\n    (_scrollBarElement$cur = scrollBarElement.current) === null || _scrollBarElement$cur === void 0 ? void 0 : _scrollBarElement$cur.style.setProperty('--pc-index-table-scroll-bar-content-width', `0px`);\n    resizeTableHeadings();\n    debounceResizeTableScrollbar();\n    handleCanScrollRight();\n    handleIsSmallScreen();\n    handleCanFitStickyColumn();\n  }, [resizeTableHeadings, debounceResizeTableScrollbar, handleCanScrollRight, handleIsSmallScreen, handleCanFitStickyColumn]);\n  const handleScrollContainerScroll = useCallback((canScrollLeft, canScrollRight) => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n\n    if (!scrollingWithBar.current) {\n      scrollingContainer.current = true;\n      scrollBarElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n\n    scrollingWithBar.current = false;\n\n    if (stickyHeaderElement.current) {\n      stickyHeaderElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n\n    if (canScrollLeft && !hasMoreLeftColumns || !canScrollLeft && hasMoreLeftColumns) {\n      toggleHasMoreLeftColumns();\n    }\n\n    setCanScrollRight(canScrollRight);\n  }, [hasMoreLeftColumns, toggleHasMoreLeftColumns]);\n  const handleScrollBarScroll = useCallback(() => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n\n    if (!scrollingContainer.current) {\n      scrollingWithBar.current = true;\n      scrollableContainerElement.current.scrollLeft = scrollBarElement.current.scrollLeft;\n    }\n\n    scrollingContainer.current = false;\n  }, []);\n  useEffect(() => {\n    tableHeadings.current = getTableHeadingsBySelector(tableElement.current, '[data-index-table-heading]');\n    stickyTableHeadings.current = getTableHeadingsBySelector(stickyHeaderWrapperElement.current, '[data-index-table-sticky-heading]');\n    resizeTableHeadings();\n  }, [headings, resizeTableHeadings, firstStickyHeaderElement, tableInitialized]);\n  useEffect(() => {\n    resizeTableScrollBar();\n    setStickyWrapper(condensed ? condensedListElement.current : tableElement.current);\n  }, [tableInitialized, resizeTableScrollBar, condensed]);\n  useEffect(() => {\n    if (!condensed && isSmallScreenSelectable) {\n      setIsSmallScreenSelectable(false);\n    }\n  }, [condensed, isSmallScreenSelectable]);\n  const hasBulkActions = Boolean(promotedBulkActions && promotedBulkActions.length > 0 || bulkActions && bulkActions.length > 0);\n  const headingsMarkup = headings.map(renderHeading).reduce((acc, heading) => acc.concat(heading), []);\n  const bulkActionsSelectable = Boolean(promotedBulkActions.length > 0 || bulkActions.length > 0);\n  const stickyColumnHeaderStyle = tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n    minWidth: calculateFirstHeaderOffset()\n  } : undefined;\n  const stickyColumnHeader = /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.TableHeading,\n    key: getHeadingKey(headings[0]),\n    style: stickyColumnHeaderStyle,\n    \"data-index-table-sticky-heading\": true\n  }, /*#__PURE__*/React.createElement(Stack, {\n    spacing: \"none\",\n    wrap: false,\n    alignment: \"center\"\n  }, selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FirstStickyHeaderElement,\n    ref: firstStickyHeaderElement\n  }, renderCheckboxContent()), selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['StickyTableHeading-second-scrolling']\n  }, renderHeadingContent(headings[0], 0)), !selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FirstStickyHeaderElement,\n    ref: firstStickyHeaderElement\n  }, renderHeadingContent(headings[0], 0))));\n  const stickyHeadingsMarkup = headings.map(renderStickyHeading);\n  const selectedItemsCountLabel = selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount;\n  const handleTogglePage = useCallback(() => {\n    handleSelectionChange(SelectionType.Page, Boolean(!bulkSelectState || bulkSelectState === 'indeterminate'));\n  }, [bulkSelectState, handleSelectionChange]);\n  const paginatedSelectAllAction = getPaginatedSelectAllAction();\n  const loadingTransitionClassNames = {\n    enter: styles['LoadingContainer-enter'],\n    enterActive: styles['LoadingContainer-enter-active'],\n    exit: styles['LoadingContainer-exit'],\n    exitActive: styles['LoadingContainer-exit-active']\n  };\n  const loadingMarkup = /*#__PURE__*/React.createElement(CSSTransition, {\n    in: loading,\n    classNames: loadingTransitionClassNames,\n    timeout: parseInt(motion['duration-100'], 10),\n    appear: true,\n    unmountOnExit: true\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanel\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanelRow\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"small\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.LoadingPanelText\n  }, i18n.translate('Polaris.IndexTable.resourceLoadingAccessibilityLabel', {\n    resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n  })))));\n  const stickyTableClassNames = classNames(styles.StickyTable, condensed && styles['StickyTable-condensed']);\n  const shouldShowBulkActions = bulkActionsSelectable && selectedItemsCount || isSmallScreenSelectable;\n  const stickyHeaderMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: stickyTableClassNames,\n    role: \"presentation\"\n  }, /*#__PURE__*/React.createElement(Sticky, {\n    boundingElement: stickyWrapper\n  }, isSticky => {\n    const stickyHeaderClassNames = classNames(styles.StickyTableHeader, isSticky && styles['StickyTableHeader-isSticky']);\n    const bulkActionClassNames = classNames(styles.BulkActionsWrapper, condensed && styles['StickyTableHeader-condensed'], isSticky && styles['StickyTableHeader-isSticky']);\n    const shouldShowActions = !condensed || selectedItemsCount;\n    const promotedActions = shouldShowActions ? promotedBulkActions : [];\n    const actions = shouldShowActions ? bulkActions : [];\n    const bulkActionsMarkup = shouldShowBulkActions ? /*#__PURE__*/React.createElement(\"div\", {\n      className: bulkActionClassNames,\n      \"data-condensed\": condensed\n    }, loadingMarkup, /*#__PURE__*/React.createElement(BulkActions, {\n      smallScreen: smallScreen,\n      label: i18n.translate('Polaris.IndexTable.selected', {\n        selectedItemsCount: selectedItemsCountLabel\n      }),\n      accessibilityLabel: bulkActionsAccessibilityLabel,\n      selected: bulkSelectState,\n      selectMode: selectMode || isSmallScreenSelectable,\n      onToggleAll: handleTogglePage,\n      promotedActions: promotedActions,\n      actions: actions,\n      paginatedSelectAllText: paginatedSelectAllText,\n      paginatedSelectAllAction: paginatedSelectAllAction,\n      onSelectModeToggle: condensed ? handleSelectModeToggle : undefined\n    })) : null;\n    const stickyColumnHeaderClassNames = classNames(styles.StickyTableColumnHeader, hasMoreLeftColumns && styles['StickyTableColumnHeader-isScrolling']);\n    const selectButtonMarkup = /*#__PURE__*/React.createElement(Button, {\n      icon: EnableSelectionMinor,\n      onClick: toggleIsSmallScreenSelectable\n    }, i18n.translate('Polaris.IndexTable.selectButtonText'));\n    const headerMarkup = condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(styles.HeaderWrapper, !selectable && styles.unselectable)\n    }, loadingMarkup, sort, selectable && selectButtonMarkup) : /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeaderClassNames,\n      ref: stickyHeaderWrapperElement\n    }, loadingMarkup, /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyColumnHeaderClassNames\n    }, stickyColumnHeader), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyTableHeadings,\n      ref: stickyHeaderElement\n    }, stickyHeadingsMarkup));\n    const stickyContent = bulkActionsMarkup ? bulkActionsMarkup : headerMarkup;\n    return stickyContent;\n  }));\n  const scrollBarWrapperClassNames = classNames(styles.ScrollBarContainer, condensed && styles.scrollBarContainerCondensed, hideScrollContainer && styles.scrollBarContainerHidden);\n  const scrollBarClassNames = classNames(tableElement.current && tableInitialized && styles.ScrollBarContent);\n  const scrollBarMarkup = itemCount > 0 ? /*#__PURE__*/React.createElement(AfterInitialMount, {\n    onMount: resizeTableScrollBar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarWrapperClassNames,\n    ref: scrollContainerElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onScroll: handleScrollBarScroll,\n    className: styles.ScrollBar,\n    ref: scrollBarElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarClassNames\n  })))) : null;\n  const isSortable = sortable === null || sortable === void 0 ? void 0 : sortable.some(value => value);\n  const tableClassNames = classNames(styles.Table, hasMoreLeftColumns && styles['Table-scrolling'], selectMode && styles.disableTextSelection, selectMode && shouldShowBulkActions && styles.selectMode, !selectable && styles['Table-unselectable'], canFitStickyColumn && styles['Table-sticky'], isSortable && styles['Table-sortable'], canFitStickyColumn && lastColumnSticky && styles['Table-sticky-last'], canFitStickyColumn && lastColumnSticky && canScrollRight && styles['Table-sticky-scrolling']);\n  const emptyStateMarkup = emptyState ? emptyState : /*#__PURE__*/React.createElement(EmptySearchResult, {\n    title: i18n.translate('Polaris.IndexTable.emptySearchTitle', {\n      resourceNamePlural: resourceName.plural\n    }),\n    description: i18n.translate('Polaris.IndexTable.emptySearchDescription'),\n    withIllustration: true\n  });\n  const sharedMarkup = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EventListener, {\n    event: \"resize\",\n    handler: handleResize\n  }), /*#__PURE__*/React.createElement(AfterInitialMount, null, stickyHeaderMarkup));\n  const bodyMarkup = condensed ? /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-selectmode\": Boolean(selectMode || isSmallScreenSelectable),\n    className: styles.CondensedList,\n    ref: condensedListElement\n  }, children)) : /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(ScrollContainer, {\n    scrollableContainerRef: scrollableContainerElement,\n    onScroll: handleScrollContainerScroll\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    ref: tableElement,\n    className: tableClassNames\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    className: styles.HeadingRow\n  }, headingsMarkup)), /*#__PURE__*/React.createElement(\"tbody\", {\n    ref: tableBodyRef\n  }, children))));\n  const tableContentMarkup = itemCount > 0 ? bodyMarkup : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.EmptySearchResultWrapper\n  }, emptyStateMarkup);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.IndexTable\n  }, !shouldShowBulkActions && !condensed && loadingMarkup, tableContentMarkup), scrollBarMarkup);\n\n  function renderHeading(heading, index) {\n    const isSecond = index === 0;\n    const isLast = index === headings.length - 1;\n    const hasSortable = sortable === null || sortable === void 0 ? void 0 : sortable.some(value => value === true);\n    const headingContentClassName = classNames(styles.TableHeading, hasSortable && styles['TableHeading-sortable'], isSecond && styles['TableHeading-second'], isLast && !heading.hidden && styles['TableHeading-last'], !selectable && styles['TableHeading-unselectable'], heading.flush && styles['TableHeading-flush']);\n    const stickyPositioningStyle = selectable !== false && isSecond && tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n      left: tableHeadingRects.current[0].offsetWidth\n    } : undefined;\n    const headingContent = /*#__PURE__*/React.createElement(\"th\", {\n      className: headingContentClassName,\n      key: getHeadingKey(heading),\n      \"data-index-table-heading\": true,\n      style: stickyPositioningStyle\n    }, renderHeadingContent(heading, index));\n\n    if (index !== 0 || !selectable) {\n      return headingContent;\n    }\n\n    const checkboxClassName = classNames(styles.TableHeading, hasSortable && styles['TableHeading-sortable'], index === 0 && styles['TableHeading-first']);\n    const checkboxContent = /*#__PURE__*/React.createElement(\"th\", {\n      className: checkboxClassName,\n      key: `${heading}-${index}`,\n      \"data-index-table-heading\": true\n    }, renderCheckboxContent());\n    return [checkboxContent, headingContent];\n  }\n\n  function renderCheckboxContent() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ColumnHeaderCheckboxWrapper\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      label: i18n.translate('Polaris.IndexTable.selectAllLabel', {\n        resourceNamePlural: resourceName.plural\n      }),\n      labelHidden: true,\n      onChange: handleSelectPage,\n      checked: bulkSelectState\n    }));\n  }\n\n  function handleSortHeadingClick(index, direction) {\n    onSort === null || onSort === void 0 ? void 0 : onSort(index, direction);\n  }\n\n  function renderHeadingContent(heading, index) {\n    let headingContent;\n\n    if (heading.new) {\n      headingContent = /*#__PURE__*/React.createElement(Stack, {\n        wrap: false,\n        alignment: \"center\"\n      }, /*#__PURE__*/React.createElement(\"span\", null, heading.title), /*#__PURE__*/React.createElement(Badge, {\n        status: \"new\"\n      }, i18n.translate('Polaris.IndexTable.onboardingBadgeText')));\n    } else if (heading.hidden) {\n      headingContent = /*#__PURE__*/React.createElement(VisuallyHidden, null, heading.title);\n    } else {\n      headingContent = heading.title;\n    }\n\n    if (sortable !== null && sortable !== void 0 && sortable[index]) {\n      const isCurrentlySorted = index === sortColumnIndex;\n      const isAscending = sortDirection === 'ascending';\n      let newDirection = defaultSortDirection;\n      let SourceComponent = defaultSortDirection === 'ascending' ? SortAscendingMajor : SortDescendingMajor;\n\n      if (isCurrentlySorted) {\n        newDirection = isAscending ? 'descending' : 'ascending';\n        SourceComponent = sortDirection === 'ascending' ? SortAscendingMajor : SortDescendingMajor;\n      }\n\n      const iconMarkup = /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(styles.TableHeadingSortIcon, isCurrentlySorted && styles['TableHeadingSortIcon-visible'])\n      }, /*#__PURE__*/React.createElement(SourceComponent, {\n        focusable: \"false\",\n        \"aria-hidden\": \"true\",\n        className: styles.TableHeadingSortSvg\n      }));\n      const sortMarkup = /*#__PURE__*/React.createElement(UnstyledButton, {\n        onClick: () => handleSortHeadingClick(index, newDirection),\n        className: styles.TableHeadingSortButton\n      }, iconMarkup, headingContent);\n\n      if (!sortToggleLabels) {\n        return sortMarkup;\n      }\n\n      const tooltipDirection = isCurrentlySorted ? sortDirection : defaultSortDirection;\n      const tooltipContent = sortToggleLabels[index][tooltipDirection];\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        content: tooltipContent\n      }, sortMarkup);\n    }\n\n    return headingContent;\n  }\n\n  function handleSelectPage(checked) {\n    handleSelectionChange(SelectionType.Page, checked);\n  }\n\n  function renderStickyHeading(heading, index) {\n    const position = index + 1;\n    const headingStyle = tableHeadingRects.current && tableHeadingRects.current.length > position ? {\n      minWidth: tableHeadingRects.current[position].offsetWidth\n    } : undefined;\n    const headingContent = renderHeadingContent(heading, index);\n    const stickyHeadingClassName = classNames(styles.TableHeading, index === 0 && styles['StickyTableHeading-second'], index === 0 && !selectable && styles.unselectable);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeadingClassName,\n      key: getHeadingKey(heading),\n      style: headingStyle,\n      \"data-index-table-sticky-heading\": true\n    }, headingContent);\n  }\n\n  function getPaginatedSelectAllAction() {\n    if (!selectable || !hasBulkActions || !hasMoreItems) {\n      return;\n    }\n\n    const customActionText = paginatedSelectAllActionText !== null && paginatedSelectAllActionText !== void 0 ? paginatedSelectAllActionText : i18n.translate('Polaris.IndexTable.selectAllItems', {\n      itemsLength: itemCount,\n      resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n    });\n    const actionText = selectedItemsCount === SELECT_ALL_ITEMS ? i18n.translate('Polaris.IndexTable.undo') : customActionText;\n    return {\n      content: actionText,\n      onAction: handleSelectAllItemsInStore\n    };\n  }\n\n  function handleSelectModeToggle(val) {\n    handleSelectionChange(SelectionType.All, false);\n    setIsSmallScreenSelectable(val);\n  }\n}\n\nconst isBreakpointsXS = () => {\n  var _toPx;\n\n  return typeof window === 'undefined' ? false : window.innerWidth < parseFloat((_toPx = toPx(tokens.breakpoints['breakpoints-sm'])) !== null && _toPx !== void 0 ? _toPx : '');\n};\n\nfunction getHeadingKey(heading) {\n  if ('id' in heading && heading.id) {\n    return heading.id;\n  }\n\n  if (typeof heading.title === 'string') {\n    return heading.title;\n  }\n\n  return '';\n}\n\nfunction IndexTable({\n  children,\n  selectable = true,\n  itemCount,\n  selectedItemsCount = 0,\n  resourceName: passedResourceName,\n  loading,\n  hasMoreItems,\n  condensed,\n  onSelectionChange,\n  ...indexTableBaseProps\n}) {\n  return /*#__PURE__*/React.createElement(IndexProvider, {\n    selectable: selectable,\n    itemCount: itemCount,\n    selectedItemsCount: selectedItemsCount,\n    resourceName: passedResourceName,\n    loading: loading,\n    hasMoreItems: hasMoreItems,\n    condensed: condensed,\n    onSelectionChange: onSelectionChange\n  }, /*#__PURE__*/React.createElement(IndexTableBase, indexTableBaseProps, children));\n}\nIndexTable.Cell = Cell;\nIndexTable.Row = Row;\n\nexport { IndexTable };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}