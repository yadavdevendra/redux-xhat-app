{"ast":null,"code":"import React from 'react';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './ChoiceList.scss.js';\nimport { RadioButton } from '../RadioButton/RadioButton.js';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { errorTextID, InlineError } from '../InlineError/InlineError.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\nfunction ChoiceList(_ref) {\n  let {\n    title,\n    titleHidden,\n    allowMultiple,\n    choices,\n    selected,\n    onChange = noop,\n    error,\n    disabled = false,\n    name: nameProp\n  } = _ref;\n  // Type asserting to any is required for TS3.2 but can be removed when we update to 3.3\n  // see https://github.com/Microsoft/TypeScript/issues/28768\n  const ControlComponent = allowMultiple ? Checkbox : RadioButton;\n  const name = useUniqueId('ChoiceList', nameProp);\n  const finalName = allowMultiple ? `${name}[]` : name;\n  const className = classNames(styles.ChoiceList, titleHidden && styles.titleHidden);\n  const titleMarkup = title ? /*#__PURE__*/React.createElement(\"legend\", {\n    className: styles.Title\n  }, title) : null;\n  const choicesMarkup = choices.map(choice => {\n    const {\n      value,\n      id,\n      label,\n      helpText,\n      disabled: choiceDisabled,\n      describedByError\n    } = choice;\n    function handleChange(checked) {\n      onChange(updateSelectedChoices(choice, checked, selected, allowMultiple), name);\n    }\n    const isSelected = choiceIsSelected(choice, selected);\n    const renderedChildren = choice.renderChildren ? choice.renderChildren(isSelected) : null;\n    const children = renderedChildren ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ChoiceChildren\n    }, renderedChildren) : null;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: value,\n      className: styles.ChoiceItem\n    }, /*#__PURE__*/React.createElement(ControlComponent, {\n      name: finalName,\n      value: value,\n      id: id,\n      label: label,\n      disabled: choiceDisabled || disabled,\n      checked: choiceIsSelected(choice, selected),\n      helpText: helpText,\n      onChange: handleChange,\n      ariaDescribedBy: error && describedByError ? errorTextID(finalName) : null\n    }), children);\n  });\n  const errorMarkup = error && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ChoiceError\n  }, /*#__PURE__*/React.createElement(InlineError, {\n    message: error,\n    fieldID: finalName\n  }));\n  return /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: className,\n    id: finalName,\n    \"aria-invalid\": error != null\n  }, titleMarkup, /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.Choices\n  }, choicesMarkup), errorMarkup);\n}\nfunction noop() {}\nfunction choiceIsSelected(_ref2, selected) {\n  let {\n    value\n  } = _ref2;\n  return selected.includes(value);\n}\nfunction updateSelectedChoices(_ref3, checked, selected) {\n  let {\n    value\n  } = _ref3;\n  let allowMultiple = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  if (checked) {\n    return allowMultiple ? [...selected, value] : [value];\n  }\n  return selected.filter(selectedChoice => selectedChoice !== value);\n}\nexport { ChoiceList };","map":{"version":3,"names":["React","classNames","styles","RadioButton","useUniqueId","errorTextID","InlineError","Checkbox","ChoiceList","title","titleHidden","allowMultiple","choices","selected","onChange","noop","error","disabled","name","nameProp","ControlComponent","finalName","className","titleMarkup","createElement","Title","choicesMarkup","map","choice","value","id","label","helpText","choiceDisabled","describedByError","handleChange","checked","updateSelectedChoices","isSelected","choiceIsSelected","renderedChildren","renderChildren","children","ChoiceChildren","key","ChoiceItem","ariaDescribedBy","errorMarkup","ChoiceError","message","fieldID","Choices","includes","filter","selectedChoice"],"sources":["/home/cedcoss/Desktop/redux-xhat-app/node_modules/@shopify/polaris/build/esm/components/ChoiceList/ChoiceList.js"],"sourcesContent":["import React from 'react';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './ChoiceList.scss.js';\nimport { RadioButton } from '../RadioButton/RadioButton.js';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { errorTextID, InlineError } from '../InlineError/InlineError.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\n\nfunction ChoiceList({\n  title,\n  titleHidden,\n  allowMultiple,\n  choices,\n  selected,\n  onChange = noop,\n  error,\n  disabled = false,\n  name: nameProp\n}) {\n  // Type asserting to any is required for TS3.2 but can be removed when we update to 3.3\n  // see https://github.com/Microsoft/TypeScript/issues/28768\n  const ControlComponent = allowMultiple ? Checkbox : RadioButton;\n  const name = useUniqueId('ChoiceList', nameProp);\n  const finalName = allowMultiple ? `${name}[]` : name;\n  const className = classNames(styles.ChoiceList, titleHidden && styles.titleHidden);\n  const titleMarkup = title ? /*#__PURE__*/React.createElement(\"legend\", {\n    className: styles.Title\n  }, title) : null;\n  const choicesMarkup = choices.map(choice => {\n    const {\n      value,\n      id,\n      label,\n      helpText,\n      disabled: choiceDisabled,\n      describedByError\n    } = choice;\n\n    function handleChange(checked) {\n      onChange(updateSelectedChoices(choice, checked, selected, allowMultiple), name);\n    }\n\n    const isSelected = choiceIsSelected(choice, selected);\n    const renderedChildren = choice.renderChildren ? choice.renderChildren(isSelected) : null;\n    const children = renderedChildren ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ChoiceChildren\n    }, renderedChildren) : null;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: value,\n      className: styles.ChoiceItem\n    }, /*#__PURE__*/React.createElement(ControlComponent, {\n      name: finalName,\n      value: value,\n      id: id,\n      label: label,\n      disabled: choiceDisabled || disabled,\n      checked: choiceIsSelected(choice, selected),\n      helpText: helpText,\n      onChange: handleChange,\n      ariaDescribedBy: error && describedByError ? errorTextID(finalName) : null\n    }), children);\n  });\n  const errorMarkup = error && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ChoiceError\n  }, /*#__PURE__*/React.createElement(InlineError, {\n    message: error,\n    fieldID: finalName\n  }));\n  return /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: className,\n    id: finalName,\n    \"aria-invalid\": error != null\n  }, titleMarkup, /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.Choices\n  }, choicesMarkup), errorMarkup);\n}\n\nfunction noop() {}\n\nfunction choiceIsSelected({\n  value\n}, selected) {\n  return selected.includes(value);\n}\n\nfunction updateSelectedChoices({\n  value\n}, checked, selected, allowMultiple = false) {\n  if (checked) {\n    return allowMultiple ? [...selected, value] : [value];\n  }\n\n  return selected.filter(selectedChoice => selectedChoice !== value);\n}\n\nexport { ChoiceList };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}